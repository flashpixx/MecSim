<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<title>MecSim - Traffic Simulation: CAgent.java Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.js", "TeX/AMSsymbols.js", "TeX/MathTools.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../layout.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">MecSim - Traffic Simulation
   </div>
   <div id="projectbrief">micro traffic simulation with layered world structure</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.6 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../namespaces.htm"><span>Packages</span></a></li>
      <li><a href="../../annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.htm"><span>File&#160;List</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d3/de5/a00209_source.htm','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CAgent.java</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d3/de5/a00209.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * @cond LICENSE</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * ######################################################################################</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * # GPL License                                                                        #</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * #                                                                                    #</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * # This file is part of the micro agent-based traffic simulation MecSim of            #</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * # Clausthal University of Technology - Mobile and Enterprise Computing               #</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * # Copyright (c) 2014-15, Philipp Kraus (philipp.kraus@tu-clausthal.de)               #</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * # This program is free software: you can redistribute it and/or modify               #</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * # it under the terms of the GNU General Public License as                            #</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * # published by the Free Software Foundation, either version 3 of the                 #</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * # License, or (at your option) any later version.                                    #</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * #                                                                                    #</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * # This program is distributed in the hope that it will be useful,                    #</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * # but WITHOUT ANY WARRANTY; without even the implied warranty of                     #</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                      #</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * # GNU General Public License for more details.                                       #</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * #                                                                                    #</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * # You should have received a copy of the GNU General Public License                  #</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * # along with this program. If not, see http://www.gnu.org/licenses/                  #</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * ######################################################################################</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * @endcond</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">package </span>de.tu_clausthal.in.mec.object.mas.jason;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">import</span> <a class="code" href="../../dc/d54/a00094.htm">de.tu_clausthal.in.mec.common.CPath</a>;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">import</span> <a class="code" href="../../dd/da7/a00168.htm">de.tu_clausthal.in.mec.object.ILayer</a>;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">import</span> de.tu_clausthal.in.mec.object.mas.IAgentTemplateFactory;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">import</span> de.tu_clausthal.in.mec.object.mas.IVoidAgent;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">import</span> de.tu_clausthal.in.mec.object.mas.generic.IBeliefBaseMask;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">import</span> de.tu_clausthal.in.mec.object.mas.generic.IWorldAction;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">import</span> <a class="code" href="../../df/d5d/a00084.htm">de.tu_clausthal.in.mec.object.mas.jason.action.CMethodBind</a>;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">import</span> <a class="code" href="../../d9/d77/a00095.htm">de.tu_clausthal.in.mec.object.mas.jason.action.CPropertyBind</a>;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">import</span> <a class="code" href="../../d9/d4b/a00117.htm">de.tu_clausthal.in.mec.object.mas.jason.belief.CTreeBeliefBase</a>;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">import</span> <a class="code" href="../../d7/d9a/a00152.htm#d1/d8b/a00406">de.tu_clausthal.in.mec.runtime.benchmark.IBenchmark</a>;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">import</span> <a class="code" href="../../d4/d7d/a00093.htm">de.tu_clausthal.in.mec.runtime.message.CParticipant</a>;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">import</span> de.tu_clausthal.in.mec.runtime.message.IMessage;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">import</span> jason.JasonException;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">import</span> jason.architecture.AgArch;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">import</span> jason.architecture.MindInspectorWeb;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">import</span> jason.asSemantics.ActionExec;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">import</span> jason.asSemantics.Agent;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">import</span> jason.asSemantics.Message;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">import</span> jason.asSyntax.ASSyntax;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">import</span> jason.asSyntax.Literal;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">import</span> jason.asSyntax.Plan;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">import</span> jason.asSyntax.PlanBody;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">import</span> java.awt.*;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keyword">import</span> java.io.File;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keyword">import</span> java.util.HashMap;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keyword">import</span> java.util.List;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keyword">import</span> java.util.Map;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keyword">import</span> java.util.Set;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment"> * class of a Jason agent architecture</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment"> * @tparam T typ of binding objects</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;@SuppressWarnings( <span class="stringliteral">&quot;serial&quot;</span> )</div>
<div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="../../de/d5e/a00007.htm">   64</a></span>&#160;public final class CAgent&lt;T&gt; implements IVoidAgent&lt;Literal&gt;, IAgentTemplateFactory.ITask&lt;Agent&gt;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;{<span class="comment"></span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">     * path seperator of agent name</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="../../de/d5e/a00007.htm#ae49c39e72eafa4ce86b10c4c14e6bdc8">   69</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String c_agentnameseparator = <span class="stringliteral">&quot;::&quot;</span>;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">     * bind name of the initial object</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="../../de/d5e/a00007.htm#a789e42744ad2fd993994513077fe71d7">   75</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String c_bindname = <span class="stringliteral">&quot;self&quot;</span>;<span class="comment"></span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">     * property bind</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">     **/</span></div>
<div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="../../de/d5e/a00007.htm#aaf3a6e0ac6460e37b4cb9a5ebe344126">   79</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">final</span> <a class="code" href="../../d9/d77/a00095.htm">CPropertyBind</a> m_propertybind = <span class="keyword">new</span> <a class="code" href="../../d9/d77/a00095.htm">CPropertyBind</a>();<span class="comment"></span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">     * method bind</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="../../de/d5e/a00007.htm#ae0a7bdd33c72d211217a2a509b4fcba7">   83</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">final</span> <a class="code" href="../../df/d5d/a00084.htm">CMethodBind</a> m_methodbind = <span class="keyword">new</span> <a class="code" href="../../df/d5d/a00084.htm">CMethodBind</a>();<span class="comment"></span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">     * set with actions of this implementation</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="../../de/d5e/a00007.htm#acf90b00cde6f87411807dbdb04ce4d19">   87</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;String, IWorldAction&gt; m_action = <span class="keyword">new</span> HashMap&lt;String, IWorldAction&gt;()</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    {{</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        put( m_propertybind.getName(), m_propertybind );</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        put( m_methodbind.getName(), m_methodbind );</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    }};<span class="comment"></span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">     * agent object</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="../../de/d5e/a00007.htm#ad3548d337cb3f2217ed04a775f77a890">   95</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">final</span> Agent <a class="code" href="../../de/d5e/a00007.htm#ad3548d337cb3f2217ed04a775f77a890">m_agent</a>;<span class="comment"></span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment">     * Jason interal agent architecture to performtemplate the reasoning cycle</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="../../de/d5e/a00007.htm#a1f2607857684359533ed2d02b1525e5f">   99</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">final</span> CJasonArchitecture <a class="code" href="../../de/d5e/a00007.htm#a1f2607857684359533ed2d02b1525e5f">m_architecture</a>;<span class="comment"></span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">     * cycle number of the agent - it need not to be equal to the simulation step (the cycle is the lifetime of the</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">     * agent)</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="../../de/d5e/a00007.htm#a7661a701d4ef3aafb2473eb4b448d5be">  104</a></span>&#160;    <span class="keyword">private</span> <span class="keywordtype">int</span> <a class="code" href="../../de/d5e/a00007.htm#a7661a701d4ef3aafb2473eb4b448d5be">m_cycle</a>;<span class="comment"></span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">     * name of the agent</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="../../de/d5e/a00007.htm#aa00dc8bac5c73318b6f552a49239d1a6">  108</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">final</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> <a class="code" href="../../de/d5e/a00007.htm#aa00dc8bac5c73318b6f552a49239d1a6">m_namepath</a>;<span class="comment"></span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">     * participant object</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="../../de/d5e/a00007.htm#a55327264e039262abf1cf5dc87fc4c78">  112</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">final</span> <a class="code" href="../../d4/d7d/a00093.htm">CParticipant</a> <a class="code" href="../../de/d5e/a00007.htm#a55327264e039262abf1cf5dc87fc4c78">m_participant</a>;<span class="comment"></span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">     * beliefbase</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="../../de/d5e/a00007.htm#a918c5c2d84f56225ae1e4a8bc8b08ca7">  116</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">final</span> <a class="code" href="../../d9/d4b/a00117.htm">CTreeBeliefBase</a> <a class="code" href="../../de/d5e/a00007.htm#a918c5c2d84f56225ae1e4a8bc8b08ca7">m_beliefbase</a>;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">     * ctor</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">     * @param p_asl agent ASL file</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">     * @throws JasonException throws an Jason exception</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="../../de/d5e/a00007.htm#a7f8950592e20a339f28848ea74483f9f">  125</a></span>&#160;    <span class="keyword">public</span> <a class="code" href="../../de/d5e/a00007.htm#a7f8950592e20a339f28848ea74483f9f">CAgent</a>( <span class="keyword">final</span> String p_asl ) <span class="keywordflow">throws</span> Exception</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    {</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="keyword">this</span>( null, p_asl, null );</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    }</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">     * ctor</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">     * @param p_namepath name of the agent (full path)</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">     * @param p_asl agent ASL file</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">     * @throws JasonException throws an Jason exception</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="../../de/d5e/a00007.htm#a147a0f33bdbb7c3d630e2c3fa8282b5e">  138</a></span>&#160;    <span class="keyword">public</span> <a class="code" href="../../de/d5e/a00007.htm#a147a0f33bdbb7c3d630e2c3fa8282b5e">CAgent</a>( <span class="keyword">final</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> p_namepath, <span class="keyword">final</span> String p_asl ) <span class="keywordflow">throws</span> Exception</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    {</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="keyword">this</span>( p_namepath, p_asl, null );</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    }</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">     * ctor</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">     * @param p_asl agent ASL file</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">     * @param p_bind object that should be bind with the agent</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">     * @throws JasonException throws an Jason exception</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00151"></a><span class="lineno"><a class="line" href="../../de/d5e/a00007.htm#aa512d15b0dd6f52064f9088ee3f4c0cf">  151</a></span>&#160;    <span class="keyword">public</span> <a class="code" href="../../de/d5e/a00007.htm#aa512d15b0dd6f52064f9088ee3f4c0cf">CAgent</a>( <span class="keyword">final</span> String p_asl, <span class="keyword">final</span> T p_bind ) <span class="keywordflow">throws</span> Exception</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    {</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        <span class="keyword">this</span>( null, p_asl, p_bind );</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    }</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">     * ctor</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">     * @param p_namepath name of the agent (full path)</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment">     * @param p_asl agent ASL file</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">     * @param p_bind object that should be bind with the agent</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">     * @throws JasonException throws an Jason exception</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">     * @note a default behaviour is defined: the name of the agent is the Java object information (class name and object hash)</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">     * and all properties and methods will be bind to the agent with the source &quot;self&quot;</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00167"></a><span class="lineno"><a class="line" href="../../de/d5e/a00007.htm#a1ed4258aa96bcc6c436639bd4dd4950d">  167</a></span>&#160;    <span class="keyword">public</span> <a class="code" href="../../de/d5e/a00007.htm#a1ed4258aa96bcc6c436639bd4dd4950d">CAgent</a>( <span class="keyword">final</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> p_namepath, <span class="keyword">final</span> String p_asl, <span class="keyword">final</span> T p_bind ) <span class="keywordflow">throws</span> Exception</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    {</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        m_namepath = ( p_namepath == null ) || ( p_namepath.isEmpty() ) ? <span class="keyword">new</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a>( this.getClass().getSimpleName() + <span class="stringliteral">&quot;@&quot;</span> + this.hashCode() ).setSeparator(</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                c_agentnameseparator</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        ) : p_namepath.setSeparator( c_agentnameseparator );</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        <span class="comment">// --- create beliefbase and agent architecture</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        <span class="comment">// Jason code design error: the agent name is stored within the AgArch, but it can read if an AgArch has got an AgArch</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="comment">// successor (AgArchs are a linked list), so we insert a cyclic reference to the AgArch itself,</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="comment">// beware that beliefbase must exists before agent ctor is called !</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        m_architecture = <span class="keyword">new</span> CJasonArchitecture();</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        m_architecture.insertAgArch( m_architecture );</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        m_participant = <span class="keyword">new</span> <a class="code" href="../../d4/d7d/a00093.htm">CParticipant</a>( <span class="keyword">this</span> );</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        m_beliefbase = <span class="keyword">new</span> <a class="code" href="../../d9/d4b/a00117.htm">CTreeBeliefBase</a>();</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        m_agent = IEnvironment.AGENTTEMPLATEFACTORY.instantiate( IEnvironment.getAgentFile( p_asl ), <span class="keyword">this</span>, m_architecture, m_beliefbase );</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        m_beliefbase.setMessageBeliefbase( m_agent, c_agentnameseparator );</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <span class="keywordflow">if</span> ( p_bind != null )</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        {</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            this.bind( c_bindname, p_bind );</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            m_beliefbase.bind( c_bindname, p_bind );</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        }</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        MindInspectorWeb.get().registerAg( m_agent );</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    }</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment">     * returns the set of actions</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment">     * @return action set</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00202"></a><span class="lineno"><a class="line" href="../../de/d5e/a00007.htm#a51fdb6c6703f31ffaf0cf4e4b8b4bc3c">  202</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> Map&lt;String, IWorldAction&gt; <a class="code" href="../../de/d5e/a00007.htm#a51fdb6c6703f31ffaf0cf4e4b8b4bc3c">getActions</a>()</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    {</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        <span class="keywordflow">return</span> m_action;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    }</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    @Override</div>
<div class="line"><a name="l00209"></a><span class="lineno"><a class="line" href="../../de/d5e/a00007.htm#aaf82fb670dcb30564145d4ed7c8a81a2">  209</a></span>&#160;    <span class="keyword">public</span> IBeliefBaseMask&lt;Literal&gt; <a class="code" href="../../de/d5e/a00007.htm#aaf82fb670dcb30564145d4ed7c8a81a2">getBeliefBase</a>()</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    {</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        <span class="keywordflow">return</span> m_beliefbase.getRootMask();</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    }</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    @Override</div>
<div class="line"><a name="l00216"></a><span class="lineno"><a class="line" href="../../de/d5e/a00007.htm#a565b04478f01718dd158fcd81a1b122e">  216</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">int</span> <a class="code" href="../../de/d5e/a00007.htm#a565b04478f01718dd158fcd81a1b122e">getCycle</a>()</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    {</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        <span class="keywordflow">return</span> m_cycle;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    }</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    @Override</div>
<div class="line"><a name="l00223"></a><span class="lineno"><a class="line" href="../../de/d5e/a00007.htm#a0a34d16240858c5c4471f7579684b4a2">  223</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> String <a class="code" href="../../de/d5e/a00007.htm#a0a34d16240858c5c4471f7579684b4a2">getName</a>()</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    {</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="keywordflow">return</span> m_namepath.getPath();</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    }</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    @Override</div>
<div class="line"><a name="l00230"></a><span class="lineno"><a class="line" href="../../de/d5e/a00007.htm#adf612b2abbcfd7a69d442161cac1793c">  230</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> String <a class="code" href="../../de/d5e/a00007.htm#adf612b2abbcfd7a69d442161cac1793c">getSource</a>()</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    {</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">new</span> File( m_agent.getASLSrc() ).getName();</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    }</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    @Override</div>
<div class="line"><a name="l00237"></a><span class="lineno"><a class="line" href="../../de/d5e/a00007.htm#a18180580eff6fa89f23546b4c6cbb561">  237</a></span>&#160;    <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="../../de/d5e/a00007.htm#a18180580eff6fa89f23546b4c6cbb561">bind</a>( <span class="keyword">final</span> String p_name, <span class="keyword">final</span> Object p_object )</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    {</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        m_propertybind.push( p_name, p_object );</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        m_methodbind.push( p_name, p_object );</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    }</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    @Override</div>
<div class="line"><a name="l00245"></a><span class="lineno"><a class="line" href="../../de/d5e/a00007.htm#a86ffa6dedc86c6191907382813e9635c">  245</a></span>&#160;    <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="../../de/d5e/a00007.htm#a86ffa6dedc86c6191907382813e9635c">addBeliefBase</a>( <span class="keyword">final</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> p_path, <span class="keyword">final</span> IBeliefBaseMask&lt;Literal&gt; p_mask )</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    {</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        m_beliefbase.add( p_path, p_mask );</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    }</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    @Override</div>
<div class="line"><a name="l00252"></a><span class="lineno"><a class="line" href="../../de/d5e/a00007.htm#a0ee553229f955373df9b39bf35371764">  252</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../de/d5e/a00007.htm#a0ee553229f955373df9b39bf35371764">release</a>()</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    {</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        m_agent.stopAg();</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        m_participant.release();</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        MindInspectorWeb.get().removeAg( m_agent );</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    }</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    @Override</div>
<div class="line"><a name="l00261"></a><span class="lineno"><a class="line" href="../../de/d5e/a00007.htm#ac7051f3a698b8748ca377c7a10ce5e4c">  261</a></span>&#160;    <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="../../de/d5e/a00007.htm#ac7051f3a698b8748ca377c7a10ce5e4c">unbind</a>( <span class="keyword">final</span> String p_name )</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    {</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        m_propertybind.remove( p_name );</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        m_methodbind.remove( p_name );</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    }</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    @Override</div>
<div class="line"><a name="l00269"></a><span class="lineno"><a class="line" href="../../de/d5e/a00007.htm#acab0dabd2900755d4a7fc24fd4f19724">  269</a></span>&#160;    <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="../../de/d5e/a00007.htm#acab0dabd2900755d4a7fc24fd4f19724">removeBeliefBase</a>( <span class="keyword">final</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> p_path )</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    {</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        m_beliefbase.remove( p_path );</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    }</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    @Override</div>
<div class="line"><a name="l00276"></a><span class="lineno"><a class="line" href="../../de/d5e/a00007.htm#ae4b1ff90aafa535edff6f9bfd6102d24">  276</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> <a class="code" href="../../de/d5e/a00007.htm#ae4b1ff90aafa535edff6f9bfd6102d24">getReceiverPath</a>()</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    {</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        <span class="keywordflow">return</span> m_namepath;</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    }</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="comment">     * pass messages to message containing beliefbase</span></div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="comment">     * @param p_messages set of messages</span></div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    @Override</div>
<div class="line"><a name="l00288"></a><span class="lineno"><a class="line" href="../../de/d5e/a00007.htm#abd2c4bd91da82a5a76a99e577d2f55e7">  288</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../de/d5e/a00007.htm#abd2c4bd91da82a5a76a99e577d2f55e7">receiveMessage</a>( <span class="keyword">final</span> Set&lt;IMessage&gt; p_messages )</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    {</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        m_beliefbase.setMessages( p_messages );</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    }</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    @Override</div>
<div class="line"><a name="l00295"></a><span class="lineno"><a class="line" href="../../de/d5e/a00007.htm#a945f320358c5b495b154df63b7f110f8">  295</a></span>&#160;    <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="../../de/d5e/a00007.htm#a945f320358c5b495b154df63b7f110f8">paint</a>( <span class="keyword">final</span> Graphics2D p_graphic, <span class="keyword">final</span> Object p_object, <span class="keyword">final</span> <span class="keywordtype">int</span> p_width, <span class="keyword">final</span> <span class="keywordtype">int</span> p_height )</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    {</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    }</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    @Override</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    @<a class="code" href="../../d7/d9a/a00152.htm#d1/d8b/a00406">IBenchmark</a></div>
<div class="line"><a name="l00303"></a><span class="lineno"><a class="line" href="../../de/d5e/a00007.htm#adf94eee7520ad1795a935de7b2f225a4">  303</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../de/d5e/a00007.htm#adf94eee7520ad1795a935de7b2f225a4">step</a>( <span class="keyword">final</span> <span class="keywordtype">int</span> p_currentstep, <span class="keyword">final</span> <a class="code" href="../../dd/da7/a00168.htm">ILayer</a> p_layer )</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    {</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        m_architecture.cycle( p_currentstep );</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    }</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="comment">     * @bug iterate over plan context / trigger</span></div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    @Override</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    @SuppressWarnings( <span class="stringliteral">&quot;unchecked&quot;</span> )</div>
<div class="line"><a name="l00314"></a><span class="lineno"><a class="line" href="../../de/d5e/a00007.htm#af6cae85bdfe4f7a3e57294ad9fddca65">  314</a></span>&#160;    public final <span class="keywordtype">void</span> performtemplate( final Agent p_agent )</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    {</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        <span class="comment">// the initial beliefs are stored within the beliefbase, so iterate over all</span></div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        <span class="comment">// beliefs and create beliefbase tree structure and add all beliefs</span></div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;        <span class="keywordflow">for</span> ( <span class="keyword">final</span> Literal l_literal : p_agent.getBB() )</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;            m_beliefbase.<a class="code" href="../../d9/d4b/a00117.htm#a9eb658d5378fcd71dabe8d0459be93c9">generateTreeStructure</a>( l_literal, <span class="keyword">true</span> );</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        <span class="comment">// the plan belief must be collected, so iterate over all plans (plan context stores the logical condition of the plan),</span></div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;        <span class="comment">// the plan body is defined as a stack (own programming), so we need to iterate it manually because no iterator exists</span></div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;        <span class="keywordflow">for</span> ( <span class="keyword">final</span> Plan l_plan : p_agent.getPL() )</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        {</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;            <span class="comment">// iterate over plan body</span></div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;            <span class="keywordflow">for</span> ( PlanBody l_body = l_plan.getBody(); l_body != null; )</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;            {</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                <span class="comment">// check first if a correct plan body exists (not-empty and is literal)</span></div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                <span class="keywordflow">if</span> ( ( l_body.isEmptyBody() ) || ( !l_body.getBodyTerm().isLiteral() ) )</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                {</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                    l_body = l_body.getBodyNext();</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                    <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                }</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                <span class="comment">// cast to literal, check if literal is definied as a action</span></div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                <span class="comment">// within the environment</span></div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                <span class="keyword">final</span> Literal l_literal = (Literal) l_body.getBodyTerm();</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                <span class="keywordflow">if</span> ( m_action.containsKey( l_literal.getFunctor() ) )</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                {</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                    l_body = l_body.getBodyNext();</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                    <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                }</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                <span class="comment">// only literals with belief structure are correct</span></div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                <span class="keywordflow">switch</span> ( l_body.getBodyType() )</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                {</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;                    <span class="keywordflow">case</span> action:</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                    <span class="keywordflow">case</span> addBel:</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;                    <span class="keywordflow">case</span> addBelNewFocus:</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                    <span class="keywordflow">case</span> addBelBegin:</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                    <span class="keywordflow">case</span> addBelEnd:</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;                    <span class="keywordflow">case</span> delBel:</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;                    <span class="keywordflow">case</span> delAddBel:</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                        m_beliefbase.generateTreeStructure( l_literal, false );</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;                    <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;                }</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;                l_body = l_body.getBodyNext();</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;            }</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;        }</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    }</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="comment">     * class to create an own agent architecture to define the reasoning cycle one agent uses one agent architecture</span></div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<span class="comment">     * @note Jason needs on the Agent.create call an instance of AgArch and not AgArchTier, so we need an own class to</span></div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;<span class="comment">     * create an own cycle call</span></div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;<span class="comment">     * @warning An AgArch is a linked-list of AgArchs, the agent name can read if an AgArch has got a successor only</span></div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="comment">     * (Jason code design error)</span></div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<span class="comment">     * @see http://jason.sourceforge.net/api/jason/architecture/AgArchInfraTier.html</span></div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00377"></a><span class="lineno"><a class="line" href="../../d1/d6f/a00063.htm">  377</a></span>&#160;    <span class="keyword">protected</span> <span class="keyword">class </span>CJasonArchitecture <span class="keyword">extends</span> AgArch</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    {</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;        @Override</div>
<div class="line"><a name="l00381"></a><span class="lineno"><a class="line" href="../../d1/d6f/a00063.htm#ae791470a6672cfcf2f60dd04a8f35455">  381</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d1/d6f/a00063.htm#ae791470a6672cfcf2f60dd04a8f35455">act</a>( <span class="keyword">final</span> ActionExec p_action, <span class="keyword">final</span> List&lt;ActionExec&gt; p_feedback )</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;        {</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;            <span class="keyword">final</span> IWorldAction l_action = m_action.get( p_action.getActionTerm().getFunctor() );</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;            <span class="keywordflow">if</span> ( l_action != null )</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;                <span class="keywordflow">try</span></div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;                {</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;                    l_action.act( m_agent, p_action.getActionTerm() );</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                    p_action.setResult( true );</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                }</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;                <span class="keywordflow">catch</span> ( <span class="keyword">final</span> Exception l_exception )</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;                {</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                    p_action.setFailureReason( ASSyntax.createAtom( <span class="stringliteral">&quot;exception&quot;</span> ), l_exception.getMessage() );</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                    p_action.setResult( false );</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;                }</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;            p_feedback.add( p_action );</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        }</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;        @Override</div>
<div class="line"><a name="l00400"></a><span class="lineno"><a class="line" href="../../d1/d6f/a00063.htm#a1ae077895c2cb1594e80a79690eb62d8">  400</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">boolean</span> <a class="code" href="../../d1/d6f/a00063.htm#a1ae077895c2cb1594e80a79690eb62d8">canSleep</a>()</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;        {</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;        }</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;        @Override</div>
<div class="line"><a name="l00406"></a><span class="lineno"><a class="line" href="../../d1/d6f/a00063.htm#aee41151d5c80633d0eebdb32ef3fbe61">  406</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">final</span> String <a class="code" href="../../d1/d6f/a00063.htm#aee41151d5c80633d0eebdb32ef3fbe61">getAgName</a>()</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;        {</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;            <span class="keywordflow">return</span> m_namepath.getPath( c_agentnameseparator );</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;        }</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;        @Override</div>
<div class="line"><a name="l00412"></a><span class="lineno"><a class="line" href="../../d1/d6f/a00063.htm#a388ea20c3bdd425cdaa6fdaac9f97b76">  412</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d1/d6f/a00063.htm#a388ea20c3bdd425cdaa6fdaac9f97b76">sendMsg</a>( <span class="keyword">final</span> Message p_message ) <span class="keywordflow">throws</span> Exception</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;        {</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;            p_message.setSender( getReceiverPath().toString() );</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;            m_participant.sendMessage( <span class="keyword">new</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a>( p_message.getReceiver().split( c_agentnameseparator ) ), <span class="keyword">new</span> <a class="code" href="../../d1/d51/a00079.htm">CMessage</a>( p_message ) );</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;        }</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;        @Override</div>
<div class="line"><a name="l00419"></a><span class="lineno"><a class="line" href="../../d1/d6f/a00063.htm#a3cdcc2efba0640bfff2a553f817cd476">  419</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d1/d6f/a00063.htm#a3cdcc2efba0640bfff2a553f817cd476">broadcast</a>( <span class="keyword">final</span> Message p_message ) <span class="keywordflow">throws</span> Exception</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;        {</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;            <span class="keyword">final</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> l_path = <span class="keyword">new</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a>( m_namepath );</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;            <span class="keywordflow">if</span> ( m_namepath.<a class="code" href="../../dc/d54/a00094.htm#a0b3aaaf4c6a7a0db70c11bc25ce949a4">size</a>() &gt; 0 )</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                l_path.<a class="code" href="../../dc/d54/a00094.htm#aa2754dd522271a7eef34bf54f63c26d2">removeSuffix</a>();</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;            p_message.setSender( m_namepath.toString() );</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;            p_message.setReceiver( l_path.toString() );</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;            m_participant.sendMessage( l_path, <span class="keyword">new</span> <a class="code" href="../../d1/d51/a00079.htm">CMessage</a>( p_message ) );</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;        }</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;<span class="comment">        /**</span></div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;<span class="comment">         * manual call of the reasoning cycle</span></div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;<span class="comment">         *</span></div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;<span class="comment">         * @param p_currentstep current step</span></div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="comment">         */</span></div>
<div class="line"><a name="l00435"></a><span class="lineno"><a class="line" href="../../d1/d6f/a00063.htm#a92c15c867083cfbf4e2357a11987628d">  435</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d1/d6f/a00063.htm#a92c15c867083cfbf4e2357a11987628d">cycle</a>( <span class="keyword">final</span> <span class="keywordtype">int</span> p_currentstep )</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;        {</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;            m_beliefbase.update();</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;            <span class="comment">// perform agent reasoning cycle for deducing new beliefs</span></div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;            <span class="comment">// the reasoning cycle must be called within the transition system</span></div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;            this.setCycleNumber( m_cycle++ );</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;            this.getTS().reasoningCycle();</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        }</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    }</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;}</div>
<div class="ttc" id="a00063_htm_aee41151d5c80633d0eebdb32ef3fbe61"><div class="ttname"><a href="../../d1/d6f/a00063.htm#aee41151d5c80633d0eebdb32ef3fbe61">de.tu_clausthal.in.mec.object.mas.jason.CAgent&lt; T &gt;.CJasonArchitecture.getAgName</a></div><div class="ttdeci">final String getAgName()</div><div class="ttdef"><b>Definition:</b> <a href="../../d3/de5/a00209_source.htm#l00406">CAgent.java:406</a></div></div>
<div class="ttc" id="a00094_htm_aa2754dd522271a7eef34bf54f63c26d2"><div class="ttname"><a href="../../dc/d54/a00094.htm#aa2754dd522271a7eef34bf54f63c26d2">de.tu_clausthal.in.mec.common.CPath.removeSuffix</a></div><div class="ttdeci">final String removeSuffix()</div><div class="ttdoc">remove the suffix from the path </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00441">CPath.java:441</a></div></div>
<div class="ttc" id="a00093_htm"><div class="ttname"><a href="../../d4/d7d/a00093.htm">de.tu_clausthal.in.mec.runtime.message.CParticipant</a></div><div class="ttdoc">participant class for event messager </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d19/a00273_source.htm#l00038">CParticipant.java:38</a></div></div>
<div class="ttc" id="a00063_htm_a388ea20c3bdd425cdaa6fdaac9f97b76"><div class="ttname"><a href="../../d1/d6f/a00063.htm#a388ea20c3bdd425cdaa6fdaac9f97b76">de.tu_clausthal.in.mec.object.mas.jason.CAgent&lt; T &gt;.CJasonArchitecture.sendMsg</a></div><div class="ttdeci">final void sendMsg(final Message p_message)</div><div class="ttdef"><b>Definition:</b> <a href="../../d3/de5/a00209_source.htm#l00412">CAgent.java:412</a></div></div>
<div class="ttc" id="a00007_htm_a1f2607857684359533ed2d02b1525e5f"><div class="ttname"><a href="../../de/d5e/a00007.htm#a1f2607857684359533ed2d02b1525e5f">de.tu_clausthal.in.mec.object.mas.jason.CAgent&lt; T &gt;.m_architecture</a></div><div class="ttdeci">final CJasonArchitecture m_architecture</div><div class="ttdoc">Jason interal agent architecture to performtemplate the reasoning cycle. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/de5/a00209_source.htm#l00099">CAgent.java:99</a></div></div>
<div class="ttc" id="a00007_htm_a918c5c2d84f56225ae1e4a8bc8b08ca7"><div class="ttname"><a href="../../de/d5e/a00007.htm#a918c5c2d84f56225ae1e4a8bc8b08ca7">de.tu_clausthal.in.mec.object.mas.jason.CAgent&lt; T &gt;.m_beliefbase</a></div><div class="ttdeci">final CTreeBeliefBase m_beliefbase</div><div class="ttdoc">beliefbase </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/de5/a00209_source.htm#l00116">CAgent.java:116</a></div></div>
<div class="ttc" id="a00007_htm_a51fdb6c6703f31ffaf0cf4e4b8b4bc3c"><div class="ttname"><a href="../../de/d5e/a00007.htm#a51fdb6c6703f31ffaf0cf4e4b8b4bc3c">de.tu_clausthal.in.mec.object.mas.jason.CAgent&lt; T &gt;.getActions</a></div><div class="ttdeci">final Map&lt; String, IWorldAction &gt; getActions()</div><div class="ttdoc">returns the set of actions </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/de5/a00209_source.htm#l00202">CAgent.java:202</a></div></div>
<div class="ttc" id="a00007_htm_ac7051f3a698b8748ca377c7a10ce5e4c"><div class="ttname"><a href="../../de/d5e/a00007.htm#ac7051f3a698b8748ca377c7a10ce5e4c">de.tu_clausthal.in.mec.object.mas.jason.CAgent&lt; T &gt;.unbind</a></div><div class="ttdeci">void unbind(final String p_name)</div><div class="ttdef"><b>Definition:</b> <a href="../../d3/de5/a00209_source.htm#l00261">CAgent.java:261</a></div></div>
<div class="ttc" id="a00007_htm_a7f8950592e20a339f28848ea74483f9f"><div class="ttname"><a href="../../de/d5e/a00007.htm#a7f8950592e20a339f28848ea74483f9f">de.tu_clausthal.in.mec.object.mas.jason.CAgent&lt; T &gt;.CAgent</a></div><div class="ttdeci">CAgent(final String p_asl)</div><div class="ttdoc">ctor </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/de5/a00209_source.htm#l00125">CAgent.java:125</a></div></div>
<div class="ttc" id="a00007_htm_a147a0f33bdbb7c3d630e2c3fa8282b5e"><div class="ttname"><a href="../../de/d5e/a00007.htm#a147a0f33bdbb7c3d630e2c3fa8282b5e">de.tu_clausthal.in.mec.object.mas.jason.CAgent&lt; T &gt;.CAgent</a></div><div class="ttdeci">CAgent(final CPath p_namepath, final String p_asl)</div><div class="ttdoc">ctor </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/de5/a00209_source.htm#l00138">CAgent.java:138</a></div></div>
<div class="ttc" id="a00152_htm_d1/d8b/a00406"><div class="ttname"><a href="../../d7/d9a/a00152.htm#d1/d8b/a00406">de.tu_clausthal.in.mec.runtime.benchmark.IBenchmark</a></div><div class="ttdoc">interface for benchmarking methods </div><div class="ttdef"><b>Definition:</b> <a href="../../da/de0/a00317_source.htm#l00036">IBenchmark.java:36</a></div></div>
<div class="ttc" id="a00063_htm_a3cdcc2efba0640bfff2a553f817cd476"><div class="ttname"><a href="../../d1/d6f/a00063.htm#a3cdcc2efba0640bfff2a553f817cd476">de.tu_clausthal.in.mec.object.mas.jason.CAgent&lt; T &gt;.CJasonArchitecture.broadcast</a></div><div class="ttdeci">final void broadcast(final Message p_message)</div><div class="ttdef"><b>Definition:</b> <a href="../../d3/de5/a00209_source.htm#l00419">CAgent.java:419</a></div></div>
<div class="ttc" id="a00063_htm_a92c15c867083cfbf4e2357a11987628d"><div class="ttname"><a href="../../d1/d6f/a00063.htm#a92c15c867083cfbf4e2357a11987628d">de.tu_clausthal.in.mec.object.mas.jason.CAgent&lt; T &gt;.CJasonArchitecture.cycle</a></div><div class="ttdeci">final void cycle(final int p_currentstep)</div><div class="ttdoc">manual call of the reasoning cycle </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/de5/a00209_source.htm#l00435">CAgent.java:435</a></div></div>
<div class="ttc" id="a00117_htm"><div class="ttname"><a href="../../d9/d4b/a00117.htm">de.tu_clausthal.in.mec.object.mas.jason.belief.CTreeBeliefBase</a></div><div class="ttdoc">beliefbase which wraps all Jason structures </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d82/a00293_source.htm#l00051">CTreeBeliefBase.java:51</a></div></div>
<div class="ttc" id="a00007_htm_aa512d15b0dd6f52064f9088ee3f4c0cf"><div class="ttname"><a href="../../de/d5e/a00007.htm#aa512d15b0dd6f52064f9088ee3f4c0cf">de.tu_clausthal.in.mec.object.mas.jason.CAgent&lt; T &gt;.CAgent</a></div><div class="ttdeci">CAgent(final String p_asl, final T p_bind)</div><div class="ttdoc">ctor </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/de5/a00209_source.htm#l00151">CAgent.java:151</a></div></div>
<div class="ttc" id="a00079_htm"><div class="ttname"><a href="../../d1/d51/a00079.htm">de.tu_clausthal.in.mec.object.mas.jason.CMessage</a></div><div class="ttdoc">class to encapsulate a Jason message for the event manager </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d6a/a00261_source.htm#l00036">object/mas/jason/CMessage.java:36</a></div></div>
<div class="ttc" id="a00007_htm_adf612b2abbcfd7a69d442161cac1793c"><div class="ttname"><a href="../../de/d5e/a00007.htm#adf612b2abbcfd7a69d442161cac1793c">de.tu_clausthal.in.mec.object.mas.jason.CAgent&lt; T &gt;.getSource</a></div><div class="ttdeci">final String getSource()</div><div class="ttdef"><b>Definition:</b> <a href="../../d3/de5/a00209_source.htm#l00230">CAgent.java:230</a></div></div>
<div class="ttc" id="a00063_htm_ae791470a6672cfcf2f60dd04a8f35455"><div class="ttname"><a href="../../d1/d6f/a00063.htm#ae791470a6672cfcf2f60dd04a8f35455">de.tu_clausthal.in.mec.object.mas.jason.CAgent&lt; T &gt;.CJasonArchitecture.act</a></div><div class="ttdeci">final void act(final ActionExec p_action, final List&lt; ActionExec &gt; p_feedback)</div><div class="ttdef"><b>Definition:</b> <a href="../../d3/de5/a00209_source.htm#l00381">CAgent.java:381</a></div></div>
<div class="ttc" id="a00007_htm_aa00dc8bac5c73318b6f552a49239d1a6"><div class="ttname"><a href="../../de/d5e/a00007.htm#aa00dc8bac5c73318b6f552a49239d1a6">de.tu_clausthal.in.mec.object.mas.jason.CAgent&lt; T &gt;.m_namepath</a></div><div class="ttdeci">final CPath m_namepath</div><div class="ttdoc">name of the agent </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/de5/a00209_source.htm#l00108">CAgent.java:108</a></div></div>
<div class="ttc" id="a00007_htm_acab0dabd2900755d4a7fc24fd4f19724"><div class="ttname"><a href="../../de/d5e/a00007.htm#acab0dabd2900755d4a7fc24fd4f19724">de.tu_clausthal.in.mec.object.mas.jason.CAgent&lt; T &gt;.removeBeliefBase</a></div><div class="ttdeci">void removeBeliefBase(final CPath p_path)</div><div class="ttdef"><b>Definition:</b> <a href="../../d3/de5/a00209_source.htm#l00269">CAgent.java:269</a></div></div>
<div class="ttc" id="a00063_htm_a1ae077895c2cb1594e80a79690eb62d8"><div class="ttname"><a href="../../d1/d6f/a00063.htm#a1ae077895c2cb1594e80a79690eb62d8">de.tu_clausthal.in.mec.object.mas.jason.CAgent&lt; T &gt;.CJasonArchitecture.canSleep</a></div><div class="ttdeci">final boolean canSleep()</div><div class="ttdef"><b>Definition:</b> <a href="../../d3/de5/a00209_source.htm#l00400">CAgent.java:400</a></div></div>
<div class="ttc" id="a00007_htm_abd2c4bd91da82a5a76a99e577d2f55e7"><div class="ttname"><a href="../../de/d5e/a00007.htm#abd2c4bd91da82a5a76a99e577d2f55e7">de.tu_clausthal.in.mec.object.mas.jason.CAgent&lt; T &gt;.receiveMessage</a></div><div class="ttdeci">final void receiveMessage(final Set&lt; IMessage &gt; p_messages)</div><div class="ttdoc">pass messages to message containing beliefbase </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/de5/a00209_source.htm#l00288">CAgent.java:288</a></div></div>
<div class="ttc" id="a00007_htm_ae4b1ff90aafa535edff6f9bfd6102d24"><div class="ttname"><a href="../../de/d5e/a00007.htm#ae4b1ff90aafa535edff6f9bfd6102d24">de.tu_clausthal.in.mec.object.mas.jason.CAgent&lt; T &gt;.getReceiverPath</a></div><div class="ttdeci">final CPath getReceiverPath()</div><div class="ttdef"><b>Definition:</b> <a href="../../d3/de5/a00209_source.htm#l00276">CAgent.java:276</a></div></div>
<div class="ttc" id="a00007_htm_a945f320358c5b495b154df63b7f110f8"><div class="ttname"><a href="../../de/d5e/a00007.htm#a945f320358c5b495b154df63b7f110f8">de.tu_clausthal.in.mec.object.mas.jason.CAgent&lt; T &gt;.paint</a></div><div class="ttdeci">void paint(final Graphics2D p_graphic, final Object p_object, final int p_width, final int p_height)</div><div class="ttdef"><b>Definition:</b> <a href="../../d3/de5/a00209_source.htm#l00295">CAgent.java:295</a></div></div>
<div class="ttc" id="a00007_htm_adf94eee7520ad1795a935de7b2f225a4"><div class="ttname"><a href="../../de/d5e/a00007.htm#adf94eee7520ad1795a935de7b2f225a4">de.tu_clausthal.in.mec.object.mas.jason.CAgent&lt; T &gt;.step</a></div><div class="ttdeci">final void step(final int p_currentstep, final ILayer p_layer)</div><div class="ttdef"><b>Definition:</b> <a href="../../d3/de5/a00209_source.htm#l00303">CAgent.java:303</a></div></div>
<div class="ttc" id="a00007_htm_a0a34d16240858c5c4471f7579684b4a2"><div class="ttname"><a href="../../de/d5e/a00007.htm#a0a34d16240858c5c4471f7579684b4a2">de.tu_clausthal.in.mec.object.mas.jason.CAgent&lt; T &gt;.getName</a></div><div class="ttdeci">final String getName()</div><div class="ttdef"><b>Definition:</b> <a href="../../d3/de5/a00209_source.htm#l00223">CAgent.java:223</a></div></div>
<div class="ttc" id="a00168_htm"><div class="ttname"><a href="../../dd/da7/a00168.htm">de.tu_clausthal.in.mec.object.ILayer</a></div><div class="ttdoc">interface of the layer </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/dbb/a00330_source.htm#l00033">ILayer.java:33</a></div></div>
<div class="ttc" id="a00094_htm"><div class="ttname"><a href="../../dc/d54/a00094.htm">de.tu_clausthal.in.mec.common.CPath</a></div><div class="ttdoc">class to create a path structure </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00044">CPath.java:44</a></div></div>
<div class="ttc" id="a00007_htm_a0ee553229f955373df9b39bf35371764"><div class="ttname"><a href="../../de/d5e/a00007.htm#a0ee553229f955373df9b39bf35371764">de.tu_clausthal.in.mec.object.mas.jason.CAgent&lt; T &gt;.release</a></div><div class="ttdeci">final void release()</div><div class="ttdef"><b>Definition:</b> <a href="../../d3/de5/a00209_source.htm#l00252">CAgent.java:252</a></div></div>
<div class="ttc" id="a00007_htm_a55327264e039262abf1cf5dc87fc4c78"><div class="ttname"><a href="../../de/d5e/a00007.htm#a55327264e039262abf1cf5dc87fc4c78">de.tu_clausthal.in.mec.object.mas.jason.CAgent&lt; T &gt;.m_participant</a></div><div class="ttdeci">final CParticipant m_participant</div><div class="ttdoc">participant object </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/de5/a00209_source.htm#l00112">CAgent.java:112</a></div></div>
<div class="ttc" id="a00007_htm_a18180580eff6fa89f23546b4c6cbb561"><div class="ttname"><a href="../../de/d5e/a00007.htm#a18180580eff6fa89f23546b4c6cbb561">de.tu_clausthal.in.mec.object.mas.jason.CAgent&lt; T &gt;.bind</a></div><div class="ttdeci">void bind(final String p_name, final Object p_object)</div><div class="ttdef"><b>Definition:</b> <a href="../../d3/de5/a00209_source.htm#l00237">CAgent.java:237</a></div></div>
<div class="ttc" id="a00117_htm_a9eb658d5378fcd71dabe8d0459be93c9"><div class="ttname"><a href="../../d9/d4b/a00117.htm#a9eb658d5378fcd71dabe8d0459be93c9">de.tu_clausthal.in.mec.object.mas.jason.belief.CTreeBeliefBase.generateTreeStructure</a></div><div class="ttdeci">void generateTreeStructure(final Literal p_literal, final boolean p_addliteral)</div><div class="ttdoc">adds a literal and its belief structure to the agent beliefbase </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d82/a00293_source.htm#l00196">CTreeBeliefBase.java:196</a></div></div>
<div class="ttc" id="a00007_htm_a86ffa6dedc86c6191907382813e9635c"><div class="ttname"><a href="../../de/d5e/a00007.htm#a86ffa6dedc86c6191907382813e9635c">de.tu_clausthal.in.mec.object.mas.jason.CAgent&lt; T &gt;.addBeliefBase</a></div><div class="ttdeci">void addBeliefBase(final CPath p_path, final IBeliefBaseMask&lt; Literal &gt; p_mask)</div><div class="ttdef"><b>Definition:</b> <a href="../../d3/de5/a00209_source.htm#l00245">CAgent.java:245</a></div></div>
<div class="ttc" id="a00007_htm_a565b04478f01718dd158fcd81a1b122e"><div class="ttname"><a href="../../de/d5e/a00007.htm#a565b04478f01718dd158fcd81a1b122e">de.tu_clausthal.in.mec.object.mas.jason.CAgent&lt; T &gt;.getCycle</a></div><div class="ttdeci">final int getCycle()</div><div class="ttdef"><b>Definition:</b> <a href="../../d3/de5/a00209_source.htm#l00216">CAgent.java:216</a></div></div>
<div class="ttc" id="a00084_htm"><div class="ttname"><a href="../../df/d5d/a00084.htm">de.tu_clausthal.in.mec.object.mas.jason.action.CMethodBind</a></div><div class="ttdoc">action to invoke any method on an object </div><div class="ttdef"><b>Definition:</b> <a href="../../da/d53/a00265_source.htm#l00050">CMethodBind.java:50</a></div></div>
<div class="ttc" id="a00007_htm_a1ed4258aa96bcc6c436639bd4dd4950d"><div class="ttname"><a href="../../de/d5e/a00007.htm#a1ed4258aa96bcc6c436639bd4dd4950d">de.tu_clausthal.in.mec.object.mas.jason.CAgent&lt; T &gt;.CAgent</a></div><div class="ttdeci">CAgent(final CPath p_namepath, final String p_asl, final T p_bind)</div><div class="ttdoc">ctor </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/de5/a00209_source.htm#l00167">CAgent.java:167</a></div></div>
<div class="ttc" id="a00007_htm_a7661a701d4ef3aafb2473eb4b448d5be"><div class="ttname"><a href="../../de/d5e/a00007.htm#a7661a701d4ef3aafb2473eb4b448d5be">de.tu_clausthal.in.mec.object.mas.jason.CAgent&lt; T &gt;.m_cycle</a></div><div class="ttdeci">int m_cycle</div><div class="ttdoc">cycle number of the agent - it need not to be equal to the simulation step (the cycle is the lifetime...</div><div class="ttdef"><b>Definition:</b> <a href="../../d3/de5/a00209_source.htm#l00104">CAgent.java:104</a></div></div>
<div class="ttc" id="a00094_htm_a0b3aaaf4c6a7a0db70c11bc25ce949a4"><div class="ttname"><a href="../../dc/d54/a00094.htm#a0b3aaaf4c6a7a0db70c11bc25ce949a4">de.tu_clausthal.in.mec.common.CPath.size</a></div><div class="ttdeci">final int size()</div><div class="ttdoc">returns the number of path elements </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00468">CPath.java:468</a></div></div>
<div class="ttc" id="a00095_htm"><div class="ttname"><a href="../../d9/d77/a00095.htm">de.tu_clausthal.in.mec.object.mas.jason.action.CPropertyBind</a></div><div class="ttdoc">action to synchronize bind-object with agent value </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/d5e/a00275_source.htm#l00046">CPropertyBind.java:46</a></div></div>
<div class="ttc" id="a00007_htm_aaf82fb670dcb30564145d4ed7c8a81a2"><div class="ttname"><a href="../../de/d5e/a00007.htm#aaf82fb670dcb30564145d4ed7c8a81a2">de.tu_clausthal.in.mec.object.mas.jason.CAgent&lt; T &gt;.getBeliefBase</a></div><div class="ttdeci">IBeliefBaseMask&lt; Literal &gt; getBeliefBase()</div><div class="ttdef"><b>Definition:</b> <a href="../../d3/de5/a00209_source.htm#l00209">CAgent.java:209</a></div></div>
<div class="ttc" id="a00007_htm_ad3548d337cb3f2217ed04a775f77a890"><div class="ttname"><a href="../../de/d5e/a00007.htm#ad3548d337cb3f2217ed04a775f77a890">de.tu_clausthal.in.mec.object.mas.jason.CAgent&lt; T &gt;.m_agent</a></div><div class="ttdeci">final Agent m_agent</div><div class="ttdoc">agent object </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/de5/a00209_source.htm#l00095">CAgent.java:95</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div id = "nav-path" class = "navpath" >
    <ul >
        <li >
            <a href = "https://github.com/flashpixx/MecSim" >MecSim - Traffic Simulation</a ></li >
    </ul >
</div >
