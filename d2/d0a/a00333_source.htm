<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<title>MecSim - Traffic Simulation: IMethodBind.java Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.js", "TeX/AMSsymbols.js", "TeX/MathTools.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../layout.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">MecSim - Traffic Simulation
   </div>
   <div id="projectbrief">micro traffic simulation with layered world structure</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.6 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../namespaces.htm"><span>Packages</span></a></li>
      <li><a href="../../annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.htm"><span>File&#160;List</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d2/d0a/a00333_source.htm','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">IMethodBind.java</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d2/d0a/a00333.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * @cond LICENSE</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * ######################################################################################</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * # GPL License                                                                        #</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * #                                                                                    #</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * # This file is part of the micro agent-based traffic simulation MecSim of            #</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * # Clausthal University of Technology - Mobile and Enterprise Computing               #</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * # Copyright (c) 2014-15, Philipp Kraus (philipp.kraus@tu-clausthal.de)               #</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * # This program is free software: you can redistribute it and/or modify               #</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * # it under the terms of the GNU General Public License as                            #</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * # published by the Free Software Foundation, either version 3 of the                 #</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * # License, or (at your option) any later version.                                    #</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * #                                                                                    #</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * # This program is distributed in the hope that it will be useful,                    #</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * # but WITHOUT ANY WARRANTY; without even the implied warranty of                     #</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                      #</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * # GNU General Public License for more details.                                       #</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * #                                                                                    #</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * # You should have received a copy of the GNU General Public License                  #</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * # along with this program. If not, see http://www.gnu.org/licenses/                  #</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * ######################################################################################</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * @endcond</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">package </span>de.tu_clausthal.in.mec.object.mas.generic.implementation;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">import</span> <a class="code" href="../../d1/d84/a00097.htm">de.tu_clausthal.in.mec.common.CReflection</a>;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">import</span> <a class="code" href="../../da/d2a/a00086.htm">de.tu_clausthal.in.mec.object.mas.CMethodFilter</a>;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">import</span> de.tu_clausthal.in.mec.object.mas.generic.IWorldAction;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">import</span> java.util.HashMap;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">import</span> java.util.LinkedList;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">import</span> java.util.List;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">import</span> java.util.Map;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment"> * action to call a method from an</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment"> * agent on any object</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="../../d1/d0d/a00171.htm">   41</a></span>&#160;<span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class </span>IMethodBind&lt;N, M&gt; <span class="keyword">implements</span> IWorldAction&lt;N, M&gt;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{<span class="comment"></span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">     * bind object *</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="../../d1/d0d/a00171.htm#a6fd9a01cf5d7ea527c8737469bd127d8">   46</a></span>&#160;    <span class="keyword">protected</span> <span class="keyword">final</span> Map&lt;String, CReflection.CMethodCache&lt;Object&gt;&gt; m_bind = <span class="keyword">new</span> HashMap&lt;&gt;();<span class="comment"></span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">     * method filter</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="../../d1/d0d/a00171.htm#a58f27b5d864c5d004a2c0b19bb2d84e1">   50</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <a class="code" href="../../da/d2a/a00086.htm">CMethodFilter</a> c_filter = <span class="keyword">new</span> <a class="code" href="../../da/d2a/a00086.htm">CMethodFilter</a>();</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">     * ctor - default</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="../../d1/d0d/a00171.htm#a961dbe4740063c451d97d8c7f91104dd">   56</a></span>&#160;    <span class="keyword">public</span> <a class="code" href="../../d1/d0d/a00171.htm#a961dbe4740063c451d97d8c7f91104dd">IMethodBind</a>()</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    {</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    }</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment">     * ctor bind an object</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">     * @param p_name name of the binding object</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">     * @param p_object object</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="../../d1/d0d/a00171.htm#a6cbdf53d00e73164f067593cf8b00cd4">   66</a></span>&#160;    <span class="keyword">public</span> <a class="code" href="../../d1/d0d/a00171.htm#a6cbdf53d00e73164f067593cf8b00cd4">IMethodBind</a>( <span class="keyword">final</span> String p_name, <span class="keyword">final</span> Object p_object )</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    {</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        this.push( p_name, p_object );</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    }</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">     * adds a new bind object</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">     * @param p_name name</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">     * @param p_object bind object</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="../../d1/d0d/a00171.htm#a08b365191da2b69248e266547c6aaab9">   77</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d1/d0d/a00171.htm#a08b365191da2b69248e266547c6aaab9">push</a>( <span class="keyword">final</span> String p_name, <span class="keyword">final</span> Object p_object )</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    {</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        m_bind.put( p_name, <span class="keyword">new</span> CReflection.CMethodCache( p_object, c_filter ) );</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    }</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">     * removes an object from the bind</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">     * @param p_name name</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="../../d1/d0d/a00171.htm#ac3771059931aca6e8775760e44c7bca4">   87</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <span class="keyword">remove</span>( <span class="keyword">final</span> String p_name )</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    {</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        m_bind.remove( p_name );</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    }</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    @Override</div>
<div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="../../d1/d0d/a00171.htm#a381427a2a15cd26e536911e7f7d2ec3c">   93</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> String <a class="code" href="../../d1/d0d/a00171.htm#a381427a2a15cd26e536911e7f7d2ec3c">getName</a>()</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    {</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;mecsim_invokemethod&quot;</span>;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    }</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">     * invokes a method</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">     * @param p_object invoking object</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">     * @param p_methodname method name</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">     * @param p_returntype return type</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">     * @param p_argumenttypes argument type list</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">     * @param p_argumentdata argument data list</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">     * @return return value</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">     * @throws Throwable on invoking error</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="../../d1/d0d/a00171.htm#a234ef4f8c52f3036a64f7b40ee47248d">  110</a></span>&#160;    <span class="keyword">protected</span> <span class="keyword">final</span> Object <a class="code" href="../../d1/d0d/a00171.htm#a234ef4f8c52f3036a64f7b40ee47248d">invokeMethod</a>( <span class="keyword">final</span> <a class="code" href="../../d1/d84/a00097.htm">CReflection</a>.CMethodCache&lt;Object&gt; p_object, <span class="keyword">final</span> String p_methodname, <span class="keyword">final</span> Class&lt;?&gt; p_returntype,</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            <span class="keyword">final</span> List&lt;Class&lt;?&gt;&gt; p_argumenttypes, <span class="keyword">final</span> List&lt;Object&gt; p_argumentdata</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    ) <span class="keywordflow">throws</span> Throwable</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    {</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="comment">// method has got any arguments</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <span class="keywordflow">if</span> ( ( !p_argumentdata.isEmpty() ) &amp;&amp; ( !p_argumenttypes.isEmpty() ) )</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        {</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            <span class="comment">// convert argumenttypes to array</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            <span class="keyword">final</span> Class&lt;?&gt;[] l_argumenttypes = <span class="keyword">new</span> Class[p_argumenttypes.size()];</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            p_argumenttypes.toArray( l_argumenttypes );</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            <span class="comment">// add to invoker-argument list and call invoker</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            <span class="keywordflow">return</span> p_returntype.cast(</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                    p_object.get( p_methodname, l_argumenttypes ).getHandle().invokeWithArguments(</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                            <span class="keyword">new</span> LinkedList&lt;Object&gt;()</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                            {{</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                                add( p_object.getObject() );</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                                addAll( p_argumentdata );</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                            }}</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                    )</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            );</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        }</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="comment">// call invoker</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        <span class="keywordflow">return</span> p_returntype.cast( p_object.get( p_methodname ).getHandle().invoke( p_object.getObject() ) );</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    }</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;}</div>
<div class="ttc" id="a00171_htm_a381427a2a15cd26e536911e7f7d2ec3c"><div class="ttname"><a href="../../d1/d0d/a00171.htm#a381427a2a15cd26e536911e7f7d2ec3c">de.tu_clausthal.in.mec.object.mas.generic.implementation.IMethodBind&lt; N, M &gt;.getName</a></div><div class="ttdeci">final String getName()</div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d0a/a00333_source.htm#l00093">IMethodBind.java:93</a></div></div>
<div class="ttc" id="a00171_htm_a6cbdf53d00e73164f067593cf8b00cd4"><div class="ttname"><a href="../../d1/d0d/a00171.htm#a6cbdf53d00e73164f067593cf8b00cd4">de.tu_clausthal.in.mec.object.mas.generic.implementation.IMethodBind&lt; N, M &gt;.IMethodBind</a></div><div class="ttdeci">IMethodBind(final String p_name, final Object p_object)</div><div class="ttdoc">ctor bind an object </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d0a/a00333_source.htm#l00066">IMethodBind.java:66</a></div></div>
<div class="ttc" id="a00171_htm_a08b365191da2b69248e266547c6aaab9"><div class="ttname"><a href="../../d1/d0d/a00171.htm#a08b365191da2b69248e266547c6aaab9">de.tu_clausthal.in.mec.object.mas.generic.implementation.IMethodBind&lt; N, M &gt;.push</a></div><div class="ttdeci">final void push(final String p_name, final Object p_object)</div><div class="ttdoc">adds a new bind object </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d0a/a00333_source.htm#l00077">IMethodBind.java:77</a></div></div>
<div class="ttc" id="a00171_htm_a961dbe4740063c451d97d8c7f91104dd"><div class="ttname"><a href="../../d1/d0d/a00171.htm#a961dbe4740063c451d97d8c7f91104dd">de.tu_clausthal.in.mec.object.mas.generic.implementation.IMethodBind&lt; N, M &gt;.IMethodBind</a></div><div class="ttdeci">IMethodBind()</div><div class="ttdoc">ctor - default </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d0a/a00333_source.htm#l00056">IMethodBind.java:56</a></div></div>
<div class="ttc" id="a00171_htm_a234ef4f8c52f3036a64f7b40ee47248d"><div class="ttname"><a href="../../d1/d0d/a00171.htm#a234ef4f8c52f3036a64f7b40ee47248d">de.tu_clausthal.in.mec.object.mas.generic.implementation.IMethodBind&lt; N, M &gt;.invokeMethod</a></div><div class="ttdeci">final Object invokeMethod(final CReflection.CMethodCache&lt; Object &gt; p_object, final String p_methodname, final Class&lt;?&gt; p_returntype, final List&lt; Class&lt;?&gt;&gt; p_argumenttypes, final List&lt; Object &gt; p_argumentdata)</div><div class="ttdoc">invokes a method </div><div class="ttdef"><b>Definition:</b> <a href="../../d2/d0a/a00333_source.htm#l00110">IMethodBind.java:110</a></div></div>
<div class="ttc" id="a00086_htm"><div class="ttname"><a href="../../da/d2a/a00086.htm">de.tu_clausthal.in.mec.object.mas.CMethodFilter</a></div><div class="ttdoc">class to filter methods * </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d35/a00266_source.htm#l00041">CMethodFilter.java:41</a></div></div>
<div class="ttc" id="a00097_htm"><div class="ttname"><a href="../../d1/d84/a00097.htm">de.tu_clausthal.in.mec.common.CReflection</a></div><div class="ttdoc">boilerplate code of the reflection API </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d4b/a00277_source.htm#l00066">CReflection.java:66</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div id = "nav-path" class = "navpath" >
    <ul >
        <li >
            <a href = "https://github.com/flashpixx/MecSim" >MecSim - Traffic Simulation</a ></li >
    </ul >
</div >
