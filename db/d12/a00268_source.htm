<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<title>MecSim - Traffic Simulation: CNameHashMap.java Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.js", "TeX/AMSsymbols.js", "TeX/MathTools.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../layout.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">MecSim - Traffic Simulation
   </div>
   <div id="projectbrief">micro traffic simulation with layered world structure</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.6 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../namespaces.htm"><span>Packages</span></a></li>
      <li><a href="../../annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.htm"><span>File&#160;List</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('db/d12/a00268_source.htm','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CNameHashMap.java</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../db/d12/a00268.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * @cond LICENSE</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * ######################################################################################</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * # GPL License                                                                        #</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * #                                                                                    #</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * # This file is part of the micro agent-based traffic simulation MecSim of            #</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * # Clausthal University of Technology - Mobile and Enterprise Computing               #</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * # Copyright (c) 2014-15, Philipp Kraus (philipp.kraus@tu-clausthal.de)               #</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * # This program is free software: you can redistribute it and/or modify               #</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * # it under the terms of the GNU General Public License as                            #</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * # published by the Free Software Foundation, either version 3 of the                 #</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * # License, or (at your option) any later version.                                    #</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * #                                                                                    #</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * # This program is distributed in the hope that it will be useful,                    #</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * # but WITHOUT ANY WARRANTY; without even the implied warranty of                     #</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                      #</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * # GNU General Public License for more details.                                       #</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * #                                                                                    #</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * # You should have received a copy of the GNU General Public License                  #</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * # along with this program. If not, see http://www.gnu.org/licenses/                  #</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * ######################################################################################</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * @endcond</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">package </span>de.tu_clausthal.in.mec.common;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">import</span> java.util.AbstractMap;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">import</span> java.util.HashMap;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">import</span> java.util.Iterator;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">import</span> java.util.Map;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">import</span> java.util.Stack;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment"> * named-base hashmap for Json serialization</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment"> * @warning map within map should be converted with copy-ctor</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;@SuppressWarnings( <span class="stringliteral">&quot;serial&quot;</span> )</div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="../../db/ddf/a00088.htm">   41</a></span>&#160;public class <a class="code" href="../../db/ddf/a00088.htm">CNameHashMap</a> extends HashMap&lt;String, Object&gt; implements Iterable&lt;Map.Entry&lt;<a class="code" href="../../dc/d54/a00094.htm">CPath</a>, Object&gt;&gt;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{<span class="comment"></span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">     * ctor</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="../../db/ddf/a00088.htm#aa4a1fdf7eb1f3c027dfc51eec728fe32">   46</a></span>&#160;    <span class="keyword">public</span> <a class="code" href="../../db/ddf/a00088.htm#aa4a1fdf7eb1f3c027dfc51eec728fe32">CNameHashMap</a>()</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    {</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        super();</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    }</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">     * copy-ctor - creates a plain name-hash-map from a map of maps</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">     * with a full deep copy of keys and values</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">     * @param p_data map</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    @SuppressWarnings( <span class="stringliteral">&quot;unchecked&quot;</span> )</div>
<div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="../../db/ddf/a00088.htm#a6354d6df49ea167c6d521ce092be9231">   58</a></span>&#160;    public <a class="code" href="../../db/ddf/a00088.htm">CNameHashMap</a>( final Map&lt;String, Object&gt; p_data )</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    {</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        super();</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="keywordflow">for</span> ( Map.Entry&lt;String, Object&gt; l_item : p_data.entrySet() )</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            this.put(</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                    l_item.getKey(),</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                    l_item.getValue() instanceof Map ? <span class="keyword">new</span> <a class="code" href="../../db/ddf/a00088.htm">CNameHashMap</a>( (Map) l_item.getValue() ) : l_item.getValue()</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            );</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    }</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">     * traverse into the map</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">     * @param p_path path of the items</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">     * @return object</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">     * @tparam T type</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    @SuppressWarnings( <span class="stringliteral">&quot;unchecked&quot;</span> )</div>
<div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="../../db/ddf/a00088.htm#a348e6646186d08045756a317f91409a0">   77</a></span>&#160;    public final &lt;T&gt; T get( final CPath p_path )</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    {</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">get</span>( p_path, this );</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    }</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">     * traverse into the map</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">     * @param p_path string path</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">     * @return object</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">     * @tparam T type</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="../../db/ddf/a00088.htm#abe91c7812ed3c64d10c0ed010642e5d8">   90</a></span>&#160;    <span class="keyword">public</span> final &lt;T&gt; T <span class="keyword">get</span>( <span class="keyword">final</span> String p_path )</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    {</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="keywordflow">return</span> this.&lt;T&gt;<span class="keyword">get</span>( <span class="keyword">new</span> CPath( p_path ) );</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    }</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment">     * returns a value or a default</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">     * @param p_path path of the value</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">     * @param p_default default</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">     * @return value</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">     * @tparam T type</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    @SuppressWarnings( <span class="stringliteral">&quot;unchecked&quot;</span> )</div>
<div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="../../db/ddf/a00088.htm#a2d4f103abe1fe32f25fb656fe3646550">  105</a></span>&#160;    public &lt;T&gt; T getOrDefault( final CPath p_path, final Object p_default )</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    {</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <span class="keywordflow">return</span> this.traverseContainsKey( p_path ) ? this.&lt;T&gt;<span class="keyword">get</span>( p_path ) : (T) p_default;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    }</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">     * returns a value or a default</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">     * @param p_path path of the value</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">     * @param p_default default</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">     * @return value</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">     * @tparam T type</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="../../db/ddf/a00088.htm#ad4e0b9bfcab947863eafba2de3a1e4bd">  119</a></span>&#160;    public &lt;T&gt; T <a class="code" href="../../db/ddf/a00088.htm#ad4e0b9bfcab947863eafba2de3a1e4bd">getOrDefault</a>( <span class="keyword">final</span> String p_path, <span class="keyword">final</span> Object p_default )</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    {</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="keywordflow">return</span> this.getOrDefault( <span class="keyword">new</span> CPath( p_path ), p_default );</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    }</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">     * recrusive traversion with an serial iterator</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">     * @return iterator</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="../../db/ddf/a00088.htm#a1efc994489f9fa9e7ddbecdf92286de1">  129</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> Iterator&lt;Map.Entry&lt;CPath, Object&gt;&gt; <a class="code" href="../../db/ddf/a00088.htm#a1efc994489f9fa9e7ddbecdf92286de1">iterator</a>()</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    {</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">new</span> Iterator&lt;Map.Entry&lt;CPath, Object&gt;&gt;()</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        {<span class="comment"></span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">            /**</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">             * path of the current stack</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">             */</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            <span class="keyword">private</span> <span class="keyword">final</span> CPath m_path = <span class="keyword">new</span> CPath();<span class="comment"></span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">            /**</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">             * stack with iterator</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">             */</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            <span class="keyword">private</span> Stack&lt;Iterator&lt;Entry&lt;String, Object&gt;&gt;&gt; m_stackiterator = <span class="keyword">new</span> Stack&lt;Iterator&lt;Entry&lt;String, Object&gt;&gt;&gt;()</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            {{</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                push( <a class="code" href="../../db/ddf/a00088.htm">CNameHashMap</a>.super.entrySet().iterator() );</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            }};</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            @Override</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;            <span class="keyword">public</span> <span class="keywordtype">boolean</span> hasNext()</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            {</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                <span class="keywordflow">if</span> ( m_stackiterator.isEmpty() )</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                <span class="keywordflow">if</span> ( m_stackiterator.peek().hasNext() )</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                m_stackiterator.pop();</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                m_path.removeSuffix();</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                <span class="keywordflow">return</span> this.hasNext();</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            }</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            @Override</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            @SuppressWarnings( <span class="stringliteral">&quot;unchecked&quot;</span> )</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            <span class="keyword">public</span> Map.Entry&lt;CPath, Object&gt; next()</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            {</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                <span class="keyword">final</span> Map.Entry&lt;String, Object&gt; l_item = m_stackiterator.peek().next();</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                <span class="comment">// check empty map, because iterator breaks down</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                <span class="keywordflow">if</span> ( ( l_item.getValue() instanceof Map ) &amp;&amp; ( !( ( (Map) l_item.getValue() ).isEmpty() ) ) )</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                {</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                    m_path.pushback( l_item.getKey() );</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                    m_stackiterator.push( ( (Map) l_item.getValue() ).entrySet().iterator() );</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                    <span class="keywordflow">return</span> this.next();</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                }</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                <span class="comment">// returns an immutable entry, because modfication must pass traversal, so modification is forbidden</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> AbstractMap.SimpleImmutableEntry&lt;&gt;( <span class="keyword">new</span> CPath( m_path, l_item.getKey() ), l_item.getValue() );</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            }</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        };</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    }</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment">     * traverse and sets the value</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment">     * @param p_path path</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="comment">     * @param p_value value</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment">     * @tparam T type</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00186"></a><span class="lineno"><a class="line" href="../../db/ddf/a00088.htm#a1a07c54ece029ff8826affe2ae212664">  186</a></span>&#160;    <span class="keyword">public</span> final &lt;T&gt; <span class="keywordtype">void</span> <a class="code" href="../../db/ddf/a00088.htm#a1a07c54ece029ff8826affe2ae212664">set</a>( <span class="keyword">final</span> String p_path, <span class="keyword">final</span> T p_value )</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    {</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        this.set( <span class="keyword">new</span> CPath( p_path ), p_value );</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    }</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment">     * traverse and sets the value</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment">     * @param p_path path</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment">     * @param p_value value</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment">     * @tparam T type</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00198"></a><span class="lineno"><a class="line" href="../../db/ddf/a00088.htm#a77873e6f02af55169c613ea44e280c3a">  198</a></span>&#160;    <span class="keyword">public</span> final &lt;T&gt; <span class="keywordtype">void</span> <a class="code" href="../../db/ddf/a00088.htm#a77873e6f02af55169c613ea44e280c3a">set</a>( <span class="keyword">final</span> CPath p_path, <span class="keyword">final</span> T p_value )</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    {</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        set( p_path, 0, p_value, <span class="keyword">this</span> );</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    }</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment">     * check a key with traversing call</span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment">     * @param p_key key name</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment">     * @return boolean of key existance</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00209"></a><span class="lineno"><a class="line" href="../../db/ddf/a00088.htm#a9345e913d40abc32cf336864cd442c4f">  209</a></span>&#160;    <span class="keyword">public</span> <span class="keywordtype">boolean</span> <a class="code" href="../../db/ddf/a00088.htm#a9345e913d40abc32cf336864cd442c4f">traverseContainsKey</a>( <span class="keyword">final</span> String p_key )</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    {</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        <span class="keywordflow">return</span> traverseContainsKey( <span class="keyword">new</span> CPath( p_key ), <span class="keyword">this</span> );</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    }</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="comment">     * check a key with traversing call</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="comment">     * @param p_key key name</span></div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment">     * @return boolean of key existance</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00220"></a><span class="lineno"><a class="line" href="../../db/ddf/a00088.htm#ab464af8c13ff68d5b010314605cb4d13">  220</a></span>&#160;    <span class="keyword">public</span> <span class="keywordtype">boolean</span> <a class="code" href="../../db/ddf/a00088.htm#ab464af8c13ff68d5b010314605cb4d13">traverseContainsKey</a>( <span class="keyword">final</span> CPath p_key )</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    {</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        <span class="keywordflow">return</span> traverseContainsKey( p_key, <span class="keyword">this</span> );</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    }</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="comment">     * traverse into the map</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="comment">     * @param p_path path of the items</span></div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="comment">     * @param p_map browsing map</span></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="comment">     * @return object</span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="comment">     * @tparam T type</span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    @SuppressWarnings( <span class="stringliteral">&quot;unchecked&quot;</span> )</div>
<div class="line"><a name="l00235"></a><span class="lineno"><a class="line" href="../../db/ddf/a00088.htm#a4b7c2f3370f7970aed01152cb4d93706">  235</a></span>&#160;    private static &lt;T&gt; T get( final CPath p_path, final Map&lt;String, Object&gt; p_map )</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    {</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        <span class="keywordflow">if</span> ( p_path.isEmpty() )</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;            <span class="keywordflow">return</span> null;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        <span class="keyword">final</span> Object l_return = p_map.get( p_path.get( 0 ) );</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        <span class="keywordflow">if</span> ( p_path.size() == 1 )</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;            <span class="keywordflow">return</span> (T) l_return;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        <span class="keywordflow">if</span> ( l_return instanceof Map )</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;            <span class="keywordflow">return</span> (T) <span class="keyword">get</span>( p_path.getSubPath( 1 ), (Map) l_return );</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        <span class="keywordflow">return</span> (T) l_return;</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    }</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">     * static traverse to set data</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment">     * @param p_path path</span></div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment">     * @param p_currentindex current path index</span></div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="comment">     * @param p_value value</span></div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="comment">     * @param p_map current map</span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="comment">     * @tparam T value type</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    @SuppressWarnings( <span class="stringliteral">&quot;unchecked&quot;</span> )</div>
<div class="line"><a name="l00259"></a><span class="lineno"><a class="line" href="../../db/ddf/a00088.htm#add99805895b9700bc9aeec9b0c602f40">  259</a></span>&#160;    private static &lt;T&gt; <span class="keywordtype">void</span> set( final CPath p_path, final <span class="keywordtype">int</span> p_currentindex, final T p_value, final Map&lt;String, Object&gt; p_map )</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    {</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        <span class="keywordflow">if</span> ( p_currentindex &gt;= p_path.size() )</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        <span class="comment">// check if last element</span></div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        <span class="keywordflow">if</span> ( p_currentindex == p_path.size() - 1 )</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;            p_map.put( p_path.get( p_currentindex ), p_value );</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        {</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;            <span class="keywordflow">if</span> ( !p_map.containsKey( p_path.get( p_currentindex ) ) )</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> IllegalStateException( <a class="code" href="../../d1/dc6/a00037.htm">CCommon</a>.<a class="code" href="../../d1/dc6/a00037.htm#ae523069a1b523b0e6a0c643049b1d745">getResourceString</a>( <a class="code" href="../../db/ddf/a00088.htm">CNameHashMap</a>.class, <span class="stringliteral">&quot;notfound&quot;</span>, p_path ) );</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;            <span class="keyword">final</span> Object l_return = p_map.get( p_path.get( p_currentindex ) );</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;            <span class="keywordflow">if</span> ( l_return instanceof Map )</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                set( p_path, p_currentindex + 1, p_value, (Map) l_return );</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        }</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    }</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="comment">     * check if a path exists</span></div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="comment">     * @param p_path path</span></div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="comment">     * @param p_map browsing map</span></div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="comment">     * @return boolean</span></div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    @SuppressWarnings( <span class="stringliteral">&quot;unchecked&quot;</span> )</div>
<div class="line"><a name="l00286"></a><span class="lineno"><a class="line" href="../../db/ddf/a00088.htm#a4e624b3bb15b840028e3b32df134610e">  286</a></span>&#160;    private static <span class="keywordtype">boolean</span> traverseContainsKey( final CPath p_path, final Map&lt;String, Object&gt; p_map )</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    {</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        <span class="keywordflow">if</span> ( p_path.isEmpty() )</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        <span class="keywordflow">if</span> ( !p_map.containsKey( p_path.get( 0 ) ) )</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        <span class="comment">// get return value - if a map is found and the path does not contain one element, start traversing, otherwise break</span></div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        <span class="keyword">final</span> Object l_return = p_map.get( p_path.get( 0 ) );</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        <span class="keywordflow">if</span> ( ( l_return instanceof Map ) &amp;&amp; ( p_path.size() &gt; 1 ) )</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;            <span class="keywordflow">return</span> traverseContainsKey( p_path.getSubPath( 1 ), (Map) l_return );</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        <span class="keywordflow">return</span> p_path.size() == 1;</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    }</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="comment">     * immutable map</span></div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00304"></a><span class="lineno"><a class="line" href="../../d4/d6d/a00055.htm">  304</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class </span><a class="code" href="../../d4/d6d/a00055.htm">CImmutable</a> <span class="keyword">extends</span> <a class="code" href="../../db/ddf/a00088.htm">CNameHashMap</a></div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    {<span class="comment"></span></div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="comment">        /**</span></div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="comment">         * ctor</span></div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="comment">         */</span></div>
<div class="line"><a name="l00309"></a><span class="lineno"><a class="line" href="../../d4/d6d/a00055.htm#afe44e34f6984f205b5205d94414ca674">  309</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="../../d4/d6d/a00055.htm#afe44e34f6984f205b5205d94414ca674">CImmutable</a>()</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        {</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;            super();</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        }</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="comment">        /**</span></div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="comment">         * creates a plain name-hash-map from a map of maps</span></div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="comment">         *</span></div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="comment">         * @param p_data map</span></div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="comment">         */</span></div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;        @SuppressWarnings( <span class="stringliteral">&quot;unchecked&quot;</span> )</div>
<div class="line"><a name="l00320"></a><span class="lineno"><a class="line" href="../../d4/d6d/a00055.htm#a2933359488a13a4704db7f4d2924cbe0">  320</a></span>&#160;        public <a class="code" href="../../d4/d6d/a00055.htm">CImmutable</a>( final Map&lt;? extends String, ?&gt; p_data )</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        {</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;            super();</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;            <span class="keywordflow">for</span> ( <span class="keyword">final</span> Map.Entry&lt;? extends String, ?&gt; l_item : p_data.entrySet() )</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                this.put(</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                        l_item.getKey(),</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                        l_item.getValue() instanceof Map ? <span class="keyword">new</span> <a class="code" href="../../d4/d6d/a00055.htm">CImmutable</a>( (Map) l_item.getValue() ) : l_item.getValue()</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;                );</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        }</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        @Override</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        @SuppressWarnings( <span class="stringliteral">&quot;unchecked&quot;</span> )</div>
<div class="line"><a name="l00332"></a><span class="lineno"><a class="line" href="../../d4/d6d/a00055.htm#a7e46aba86ee80629d0957017117a3cab">  332</a></span>&#160;        public final Object put( final String p_key, final Object p_value )</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        {</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;            <span class="keywordflow">return</span> super.put( p_key, p_value instanceof Map ? <span class="keyword">new</span> <a class="code" href="../../d4/d6d/a00055.htm">CImmutable</a>( (Map) p_value ) : p_value );</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;        }</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        @Override</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;        @SuppressWarnings( <span class="stringliteral">&quot;unchecked&quot;</span> )</div>
<div class="line"><a name="l00339"></a><span class="lineno"><a class="line" href="../../d4/d6d/a00055.htm#a537bfc28c1f8c8dc9c6f716c65b50aba">  339</a></span>&#160;        public final <span class="keywordtype">void</span> putAll( final Map&lt;? extends String, ?&gt; p_map )</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        {</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;            <span class="keywordflow">for</span> ( <span class="keyword">final</span> Map.Entry&lt;? extends String, ?&gt; l_item : p_map.entrySet() )</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                this.put(</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                        l_item.getKey(),</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                        l_item.getValue() instanceof Map ? <span class="keyword">new</span> <a class="code" href="../../d4/d6d/a00055.htm">CImmutable</a>( (Map) l_item.getValue() ) : l_item.getValue()</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                );</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;        }</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        @Override</div>
<div class="line"><a name="l00349"></a><span class="lineno"><a class="line" href="../../d4/d6d/a00055.htm#aa9ccd2c84023194de2dc2d2decce4a27">  349</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">final</span> Object <span class="keyword">remove</span>( <span class="keyword">final</span> Object p_key )</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;        {</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;            <span class="keywordflow">return</span> this.get( p_key );</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        }</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;        @Override</div>
<div class="line"><a name="l00355"></a><span class="lineno"><a class="line" href="../../d4/d6d/a00055.htm#aecb2e790c035513d13c5441f5b2d93e1">  355</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="../../d4/d6d/a00055.htm#aecb2e790c035513d13c5441f5b2d93e1">clear</a>()</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        {</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;        }</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="comment">        /**</span></div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="comment">         * converts the immutable map to a default hashmap</span></div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="comment">         *</span></div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="comment">         * @return default map</span></div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="comment">         */</span></div>
<div class="line"><a name="l00364"></a><span class="lineno"><a class="line" href="../../d4/d6d/a00055.htm#a3f2dbe51a4ccbb71acd9b5f1c770f397">  364</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">final</span> Map&lt;String, Object&gt; <a class="code" href="../../d4/d6d/a00055.htm#a3f2dbe51a4ccbb71acd9b5f1c770f397">toHashMap</a>()</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;        {</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;            <span class="keyword">final</span> Map&lt;String, Object&gt; l_return = <span class="keyword">new</span> HashMap&lt;&gt;();</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;            <span class="keywordflow">for</span> ( <span class="keyword">final</span> Map.Entry&lt;String, Object&gt; l_item : <span class="keyword">this</span>.entrySet() )</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                l_return.put( l_item.getKey(), l_item.getValue() instanceof <a class="code" href="../../d4/d6d/a00055.htm">CImmutable</a> ? ( (<a class="code" href="../../d4/d6d/a00055.htm">CImmutable</a>) l_item.getValue() ).toHashMap() : l_item.getValue() );</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;            <span class="keywordflow">return</span> l_return;</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;        }</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    }</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;}</div>
<div class="ttc" id="a00088_htm_ad4e0b9bfcab947863eafba2de3a1e4bd"><div class="ttname"><a href="../../db/ddf/a00088.htm#ad4e0b9bfcab947863eafba2de3a1e4bd">de.tu_clausthal.in.mec.common.CNameHashMap.getOrDefault</a></div><div class="ttdeci">public&lt; T &gt; T getOrDefault(final String p_path, final Object p_default)</div><div class="ttdoc">returns a value or a default </div><div class="ttdef"><b>Definition:</b> <a href="../../db/d12/a00268_source.htm#l00119">CNameHashMap.java:119</a></div></div>
<div class="ttc" id="a00037_htm"><div class="ttname"><a href="../../d1/dc6/a00037.htm">de.tu_clausthal.in.mec.common.CCommon</a></div><div class="ttdoc">class for any helper calls </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00060">common/CCommon.java:60</a></div></div>
<div class="ttc" id="a00088_htm_ab464af8c13ff68d5b010314605cb4d13"><div class="ttname"><a href="../../db/ddf/a00088.htm#ab464af8c13ff68d5b010314605cb4d13">de.tu_clausthal.in.mec.common.CNameHashMap.traverseContainsKey</a></div><div class="ttdeci">boolean traverseContainsKey(final CPath p_key)</div><div class="ttdoc">check a key with traversing call </div><div class="ttdef"><b>Definition:</b> <a href="../../db/d12/a00268_source.htm#l00220">CNameHashMap.java:220</a></div></div>
<div class="ttc" id="a00055_htm_a3f2dbe51a4ccbb71acd9b5f1c770f397"><div class="ttname"><a href="../../d4/d6d/a00055.htm#a3f2dbe51a4ccbb71acd9b5f1c770f397">de.tu_clausthal.in.mec.common.CNameHashMap.CImmutable.toHashMap</a></div><div class="ttdeci">final Map&lt; String, Object &gt; toHashMap()</div><div class="ttdoc">converts the immutable map to a default hashmap </div><div class="ttdef"><b>Definition:</b> <a href="../../db/d12/a00268_source.htm#l00364">CNameHashMap.java:364</a></div></div>
<div class="ttc" id="a00037_htm_ae523069a1b523b0e6a0c643049b1d745"><div class="ttname"><a href="../../d1/dc6/a00037.htm#ae523069a1b523b0e6a0c643049b1d745">de.tu_clausthal.in.mec.common.CCommon.getResourceString</a></div><div class="ttdeci">static String getResourceString(final Class&lt;?&gt; p_class, final String p_label, final Object...p_parameter)</div><div class="ttdoc">returns a default string of the resource file </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00335">common/CCommon.java:335</a></div></div>
<div class="ttc" id="a00088_htm_a77873e6f02af55169c613ea44e280c3a"><div class="ttname"><a href="../../db/ddf/a00088.htm#a77873e6f02af55169c613ea44e280c3a">de.tu_clausthal.in.mec.common.CNameHashMap.set</a></div><div class="ttdeci">final&lt; T &gt; void set(final CPath p_path, final T p_value)</div><div class="ttdoc">traverse and sets the value </div><div class="ttdef"><b>Definition:</b> <a href="../../db/d12/a00268_source.htm#l00198">CNameHashMap.java:198</a></div></div>
<div class="ttc" id="a00088_htm_a1a07c54ece029ff8826affe2ae212664"><div class="ttname"><a href="../../db/ddf/a00088.htm#a1a07c54ece029ff8826affe2ae212664">de.tu_clausthal.in.mec.common.CNameHashMap.set</a></div><div class="ttdeci">final&lt; T &gt; void set(final String p_path, final T p_value)</div><div class="ttdoc">traverse and sets the value </div><div class="ttdef"><b>Definition:</b> <a href="../../db/d12/a00268_source.htm#l00186">CNameHashMap.java:186</a></div></div>
<div class="ttc" id="a00094_htm"><div class="ttname"><a href="../../dc/d54/a00094.htm">de.tu_clausthal.in.mec.common.CPath</a></div><div class="ttdoc">class to create a path structure </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00044">CPath.java:44</a></div></div>
<div class="ttc" id="a00088_htm"><div class="ttname"><a href="../../db/ddf/a00088.htm">de.tu_clausthal.in.mec.common.CNameHashMap</a></div><div class="ttdoc">named-base hashmap for Json serialization </div><div class="ttdef"><b>Definition:</b> <a href="../../db/d12/a00268_source.htm#l00041">CNameHashMap.java:41</a></div></div>
<div class="ttc" id="a00088_htm_a9345e913d40abc32cf336864cd442c4f"><div class="ttname"><a href="../../db/ddf/a00088.htm#a9345e913d40abc32cf336864cd442c4f">de.tu_clausthal.in.mec.common.CNameHashMap.traverseContainsKey</a></div><div class="ttdeci">boolean traverseContainsKey(final String p_key)</div><div class="ttdoc">check a key with traversing call </div><div class="ttdef"><b>Definition:</b> <a href="../../db/d12/a00268_source.htm#l00209">CNameHashMap.java:209</a></div></div>
<div class="ttc" id="a00055_htm_afe44e34f6984f205b5205d94414ca674"><div class="ttname"><a href="../../d4/d6d/a00055.htm#afe44e34f6984f205b5205d94414ca674">de.tu_clausthal.in.mec.common.CNameHashMap.CImmutable.CImmutable</a></div><div class="ttdeci">CImmutable()</div><div class="ttdoc">ctor </div><div class="ttdef"><b>Definition:</b> <a href="../../db/d12/a00268_source.htm#l00309">CNameHashMap.java:309</a></div></div>
<div class="ttc" id="a00055_htm"><div class="ttname"><a href="../../d4/d6d/a00055.htm">de.tu_clausthal.in.mec.common.CNameHashMap.CImmutable</a></div><div class="ttdoc">immutable map </div><div class="ttdef"><b>Definition:</b> <a href="../../db/d12/a00268_source.htm#l00304">CNameHashMap.java:304</a></div></div>
<div class="ttc" id="a00055_htm_aecb2e790c035513d13c5441f5b2d93e1"><div class="ttname"><a href="../../d4/d6d/a00055.htm#aecb2e790c035513d13c5441f5b2d93e1">de.tu_clausthal.in.mec.common.CNameHashMap.CImmutable.clear</a></div><div class="ttdeci">void clear()</div><div class="ttdef"><b>Definition:</b> <a href="../../db/d12/a00268_source.htm#l00355">CNameHashMap.java:355</a></div></div>
<div class="ttc" id="a00088_htm_aa4a1fdf7eb1f3c027dfc51eec728fe32"><div class="ttname"><a href="../../db/ddf/a00088.htm#aa4a1fdf7eb1f3c027dfc51eec728fe32">de.tu_clausthal.in.mec.common.CNameHashMap.CNameHashMap</a></div><div class="ttdeci">CNameHashMap()</div><div class="ttdoc">ctor </div><div class="ttdef"><b>Definition:</b> <a href="../../db/d12/a00268_source.htm#l00046">CNameHashMap.java:46</a></div></div>
<div class="ttc" id="a00088_htm_a1efc994489f9fa9e7ddbecdf92286de1"><div class="ttname"><a href="../../db/ddf/a00088.htm#a1efc994489f9fa9e7ddbecdf92286de1">de.tu_clausthal.in.mec.common.CNameHashMap.iterator</a></div><div class="ttdeci">final Iterator&lt; Map.Entry&lt; CPath, Object &gt; &gt; iterator()</div><div class="ttdoc">recrusive traversion with an serial iterator </div><div class="ttdef"><b>Definition:</b> <a href="../../db/d12/a00268_source.htm#l00129">CNameHashMap.java:129</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div id = "nav-path" class = "navpath" >
    <ul >
        <li >
            <a href = "https://github.com/flashpixx/MecSim" >MecSim - Traffic Simulation</a ></li >
    </ul >
</div >
