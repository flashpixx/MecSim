<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<title>MecSim - Traffic Simulation: CGraphHopper.java Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.js", "TeX/AMSsymbols.js", "TeX/MathTools.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../layout.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">MecSim - Traffic Simulation
   </div>
   <div id="projectbrief">micro traffic simulation with layered world structure</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.6 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../namespaces.htm"><span>Packages</span></a></li>
      <li><a href="../../annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.htm"><span>File&#160;List</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d6/d08/a00244_source.htm','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CGraphHopper.java</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d6/d08/a00244.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * @cond LICENSE</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * ######################################################################################</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * # GPL License                                                                        #</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * #                                                                                    #</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * # This file is part of the micro agent-based traffic simulation MecSim of            #</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * # Clausthal University of Technology - Mobile and Enterprise Computing               #</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * # Copyright (c) 2014-15, Philipp Kraus (philipp.kraus@tu-clausthal.de)               #</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * # This program is free software: you can redistribute it and/or modify               #</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * # it under the terms of the GNU General Public License as                            #</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * # published by the Free Software Foundation, either version 3 of the                 #</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * # License, or (at your option) any later version.                                    #</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * #                                                                                    #</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * # This program is distributed in the hope that it will be useful,                    #</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * # but WITHOUT ANY WARRANTY; without even the implied warranty of                     #</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                      #</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * # GNU General Public License for more details.                                       #</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * #                                                                                    #</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * # You should have received a copy of the GNU General Public License                  #</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * # along with this program. If not, see http://www.gnu.org/licenses/                  #</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * ######################################################################################</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * @endcond</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">package </span>de.tu_clausthal.in.mec.object.car.graph;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">import</span> com.graphhopper.GHRequest;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">import</span> com.graphhopper.GHResponse;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">import</span> com.graphhopper.GraphHopper;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">import</span> com.graphhopper.routing.Path;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">import</span> com.graphhopper.routing.util.EdgeFilter;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">import</span> com.graphhopper.routing.util.EncodingManager;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">import</span> com.graphhopper.routing.util.FlagEncoder;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">import</span> com.graphhopper.routing.util.Weighting;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">import</span> com.graphhopper.routing.util.WeightingMap;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">import</span> com.graphhopper.storage.index.QueryResult;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">import</span> com.graphhopper.util.EdgeIteratorState;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d3a/a00040.htm">de.tu_clausthal.in.mec.CConfiguration</a>;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">import</span> <a class="code" href="../../d0/d89/a00071.htm">de.tu_clausthal.in.mec.CLogger</a>;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">import</span> <a class="code" href="../../d1/dc6/a00037.htm">de.tu_clausthal.in.mec.common.CCommon</a>;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">import</span> <a class="code" href="../../d3/d65/a00154.htm">de.tu_clausthal.in.mec.object.car.ICar</a>;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">import</span> <a class="code" href="../../d5/de0/a00050.htm">de.tu_clausthal.in.mec.object.car.graph.weights.CForbiddenEdge</a>;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">import</span> <a class="code" href="../../d2/da3/a00115.htm">de.tu_clausthal.in.mec.object.car.graph.weights.CTrafficJam</a>;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">import</span> org.apache.commons.io.FileUtils;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">import</span> org.apache.commons.lang3.tuple.ImmutablePair;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">import</span> org.apache.commons.lang3.tuple.Pair;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">import</span> org.jxmapviewer.viewer.GeoPosition;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">import</span> java.io.File;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">import</span> java.io.FileOutputStream;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keyword">import</span> java.net.URL;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keyword">import</span> java.nio.channels.Channels;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keyword">import</span> java.nio.channels.ReadableByteChannel;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keyword">import</span> java.util.ArrayList;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keyword">import</span> java.util.Collection;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keyword">import</span> java.util.HashMap;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keyword">import</span> java.util.HashSet;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keyword">import</span> java.util.List;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keyword">import</span> java.util.Map;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keyword">import</span> java.util.Set;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keyword">import</span> java.util.concurrent.ConcurrentHashMap;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment"> * class for create a graph structure of OSM data, the class downloads the data and creates edges and verticies</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment"> * @todo remove ICar interface</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment"> * @see http://graphhopper.com/</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="../../dc/dee/a00053.htm">   70</a></span>&#160;<span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class </span><a class="code" href="../../dc/dee/a00053.htm">CGraphHopper</a> <span class="keyword">extends</span> GraphHopper</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;{</div>
<div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="../../dc/dee/a00053.htm#a30a554f41f23839968566b7056bfc0e5">   72</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String <a class="code" href="../../dc/dee/a00053.htm#a30a554f41f23839968566b7056bfc0e5">c_defaultflagencoding</a> = <span class="stringliteral">&quot;CAR&quot;</span>;<span class="comment"></span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">     * cell size for sampling</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="../../dc/dee/a00053.htm#af4a6cb21383dbfad7a143b921c77762f">   76</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keywordtype">int</span> <a class="code" href="../../dc/dee/a00053.htm#af4a6cb21383dbfad7a143b921c77762f">m_cellsize</a>;<span class="comment"></span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">     * map with edge-cell connection</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="../../dc/dee/a00053.htm#a20c1bad2f7a63e576811af84068dcf0e">   80</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;Integer, CEdge&lt;ICar, ?&gt;&gt; <a class="code" href="../../dc/dee/a00053.htm#a20c1bad2f7a63e576811af84068dcf0e">m_edgecell</a> = <span class="keyword">new</span> ConcurrentHashMap&lt;&gt;();<span class="comment"></span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">     * set with listerner of the edges</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="../../dc/dee/a00053.htm#a7ced5899fefea5fa11a01a8abc141862">   84</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">final</span> Set&lt;IAction&lt;ICar, ?&gt;&gt; <a class="code" href="../../dc/dee/a00053.htm#a7ced5899fefea5fa11a01a8abc141862">m_edgelister</a> = <span class="keyword">new</span> HashSet&lt;&gt;();<span class="comment"></span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">     * map with additional weights</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">     * @note alle names must be in lower-case</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="../../dc/dee/a00053.htm#ab1f35680f0ea0bab593c51abe1200cae">   90</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;EWeight, Weighting&gt; <a class="code" href="../../dc/dee/a00053.htm#ab1f35680f0ea0bab593c51abe1200cae">m_weights</a> = <span class="keyword">new</span> HashMap&lt;&gt;();</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment">     * ctor</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment">     * @param p_cellsize cellsize in meter for sampling</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="../../dc/dee/a00053.htm#a5cd286301651efe9528081e5cf108940">   98</a></span>&#160;    <span class="keyword">public</span> <a class="code" href="../../dc/dee/a00053.htm#a5cd286301651efe9528081e5cf108940">CGraphHopper</a>( <span class="keyword">final</span> <span class="keywordtype">int</span> p_cellsize )</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    {</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="keyword">this</span>( <a class="code" href="../../dc/dee/a00053.htm#a30a554f41f23839968566b7056bfc0e5">c_defaultflagencoding</a>, p_cellsize );</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    }</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">     * ctor</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">     * @param p_encoding flag encoder name</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">     * @param p_cellsize cellsize in meter for sampling</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">     * @see https://github.com/graphhopper/graphhopper/blob/master/core/src/main/java/com/graphhopper/routing/util/EncodingManager.java</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="../../dc/dee/a00053.htm#a9f50968acad02be391044bf2324747bc">  110</a></span>&#160;    <span class="keyword">public</span> <a class="code" href="../../dc/dee/a00053.htm#a9f50968acad02be391044bf2324747bc">CGraphHopper</a>( <span class="keyword">final</span> String p_encoding, <span class="keyword">final</span> <span class="keywordtype">int</span> p_cellsize )</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    {</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="comment">// set the default settings</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <a class="code" href="../../dc/dee/a00053.htm#af4a6cb21383dbfad7a143b921c77762f">m_cellsize</a> = p_cellsize;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <span class="comment">// define graph location (use configuration)</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="keyword">final</span> String l_currentgraphurl = <a class="code" href="../../dc/dee/a00053.htm#a27dc64f80edc1b17714a363cdd79e62b">getCurrentGraph</a>();</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <span class="keyword">final</span> File l_graphlocation = <a class="code" href="../../dc/dee/a00053.htm#a7e7939418c529551a915e16806f3035c">getGraphLocation</a>( l_currentgraphurl );</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        CLogger.out( CCommon.getResourceString( <span class="keyword">this</span>, <span class="stringliteral">&quot;path&quot;</span>, l_graphlocation.getAbsolutePath() ) );</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="comment">// if reimported is set, delete graph directory</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="keywordflow">if</span> ( <a class="code" href="../../db/d3a/a00040.htm">CConfiguration</a>.<a class="code" href="../../db/d3a/a00040.htm#a5fc1c2b2396e46e44cbc25c907f2c452">getInstance</a>().get().&lt;Boolean&gt;<span class="keyword">get</span>( <span class="stringliteral">&quot;simulation/traffic/map/reimport&quot;</span> ) )</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            FileUtils.deleteQuietly( l_graphlocation );</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <span class="comment">// convert OSM or load the graph</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        CConfiguration.getInstance().<span class="keyword">get</span>().set( <span class="stringliteral">&quot;simulation/traffic/map/reimport&quot;</span>, false );</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="comment">// initialize graph (CH must be disable on dynamic routing)</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        this.setCHEnable( false );</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        this.setStoreOnFlush( true );</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        this.setEncodingManager( <span class="keyword">new</span> EncodingManager( p_encoding ) );</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="keywordflow">try</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        {</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            <span class="keywordflow">if</span> ( !this.load( l_graphlocation.getAbsolutePath() ) )</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                this.downloadGraphAndLoad( l_currentgraphurl, l_graphlocation );</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        }</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        <span class="keywordflow">catch</span> ( <span class="keyword">final</span> IllegalStateException l_exception )</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        {</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            CLogger.error( CCommon.getResourceString( <span class="keyword">this</span>, <span class="stringliteral">&quot;initializeerror&quot;</span>, l_exception ) );</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            FileUtils.deleteQuietly( l_graphlocation );</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            this.downloadGraphAndLoad( l_currentgraphurl, l_graphlocation );</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        }</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <span class="comment">// define weights</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        <span class="keywordflow">for</span> ( <span class="keyword">final</span> <a class="code" href="../../d7/dce/a00143.htm">EWeight</a> l_item : <a class="code" href="../../d7/dce/a00143.htm">EWeight</a>.values() )</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            <span class="keywordflow">if</span> ( !l_item.equals( <a class="code" href="../../d7/dce/a00143.htm">EWeight</a>.<a class="code" href="../../d7/dce/a00143.htm#a3f2aa537dd2dc74cb37e30b354c41482">Default</a> ) )</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                <a class="code" href="../../dc/dee/a00053.htm#ab1f35680f0ea0bab593c51abe1200cae">m_weights</a>.put( l_item, l_item.get( <span class="keyword">this</span>, <span class="keyword">this</span>.getEncodingManager().getEncoder( p_encoding ) ) );</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        CLogger.out( CCommon.getResourceString( <span class="keyword">this</span>, <span class="stringliteral">&quot;loaded&quot;</span> ) );</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    }</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment">     * adds an edge listener</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">     * @note listener object will be set at the edge instantiation process</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00161"></a><span class="lineno"><a class="line" href="../../dc/dee/a00053.htm#af68d1587927024b4344013cccfafb38f">  161</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">synchronized</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/dee/a00053.htm#af68d1587927024b4344013cccfafb38f">addEdgeListener</a>( <span class="keyword">final</span> IAction&lt;ICar, ?&gt; p_listener )</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    {</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        m_edgelister.add( p_listener );</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    }</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment">     * clears all edges</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00169"></a><span class="lineno"><a class="line" href="../../dc/dee/a00053.htm#a1ffc5be303574c45b6ce3a573e4fa9dc">  169</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">synchronized</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/dee/a00053.htm#a1ffc5be303574c45b6ce3a573e4fa9dc">clear</a>()</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    {</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="keywordflow">for</span> ( <span class="keyword">final</span> Map.Entry&lt;Integer, CEdge&lt;ICar, ?&gt;&gt; l_item : <a class="code" href="../../dc/dee/a00053.htm#a20c1bad2f7a63e576811af84068dcf0e">m_edgecell</a>.entrySet() )</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            l_item.getValue().clear();</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    }</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    @Override</div>
<div class="line"><a name="l00176"></a><span class="lineno"><a class="line" href="../../dc/dee/a00053.htm#a31fa54c98bad3fcbf0f6de0c2498d43d">  176</a></span>&#160;    <span class="keyword">public</span> Weighting <a class="code" href="../../dc/dee/a00053.htm#a31fa54c98bad3fcbf0f6de0c2498d43d">createWeighting</a>( <span class="keyword">final</span> WeightingMap p_map, <span class="keyword">final</span> FlagEncoder p_encoder )</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    {</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <span class="comment">// catch unknown enum type and use the default</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        <span class="keywordflow">try</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        {</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            <span class="keyword">final</span> Weighting l_weight = m_weights.get( EWeight.valueOf( p_map.getWeighting() ) );</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            <span class="keywordflow">if</span> ( l_weight != null )</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                <span class="keywordflow">return</span> l_weight;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        }</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <span class="keywordflow">catch</span> ( <span class="keyword">final</span> IllegalArgumentException l_exception )</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        {</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        }</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        <span class="keywordflow">return</span> super.createWeighting( p_map, p_encoder );</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    }</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="comment">     * returns a weight object by name</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment">     * @param p_weight weight</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment">     * @return weight object</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment">     * @tparam T type of the weight object</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    @SuppressWarnings( <span class="stringliteral">&quot;unchecked&quot;</span> )</div>
<div class="line"><a name="l00201"></a><span class="lineno"><a class="line" href="../../dc/dee/a00053.htm#ac29d592f54b98d58c03c74a6248bcccc">  201</a></span>&#160;    public final &lt;T extends Weighting&gt; T <a class="code" href="../../dc/dee/a00053.htm#ac29d592f54b98d58c03c74a6248bcccc">getWeight</a>( final <a class="code" href="../../d7/dce/a00143.htm">EWeight</a> p_weight )</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    {</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        <span class="keywordflow">return</span> (T) m_weights.get( p_weight );</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    }</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment">     * checks if a weight object exists</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment">     * @param p_weight weight</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment">     * @return existance</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00212"></a><span class="lineno"><a class="line" href="../../dc/dee/a00053.htm#a575232157023f8bb62848ff3d566efa0">  212</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">boolean</span> <a class="code" href="../../dc/dee/a00053.htm#a575232157023f8bb62848ff3d566efa0">existWeight</a>( <span class="keyword">final</span> <a class="code" href="../../d7/dce/a00143.htm">EWeight</a> p_weight )</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    {</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <span class="keywordflow">return</span> m_weights.containsKey( p_weight );</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    }</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment">     * returns the closest edge(s) of a geo position</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="comment">     * @param p_position geo position</span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="comment">     * @return ID of the edge</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00223"></a><span class="lineno"><a class="line" href="../../dc/dee/a00053.htm#a23779554d7c0dc14f56366cbe667e83b">  223</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">int</span> <a class="code" href="../../dc/dee/a00053.htm#a23779554d7c0dc14f56366cbe667e83b">getClosestEdge</a>( <span class="keyword">final</span> GeoPosition p_position )</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    {</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="keyword">final</span> QueryResult l_result = this.getLocationIndex().findClosest( p_position.getLatitude(), p_position.getLongitude(), EdgeFilter.ALL_EDGES );</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        <span class="keywordflow">return</span> l_result.getClosestEdge().<a class="code" href="../../dc/dee/a00053.htm#a4ce89dfaca22e0fbb47c1f1e258b19ee">getEdge</a>();</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    }</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="comment">     * returns the ID of the closest node</span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="comment">     * @param p_position geo position</span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="comment">     * @return ID of the node</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00235"></a><span class="lineno"><a class="line" href="../../dc/dee/a00053.htm#aac3edb10dd308e7d176bfc4b13455c60">  235</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">int</span> <a class="code" href="../../dc/dee/a00053.htm#aac3edb10dd308e7d176bfc4b13455c60">getClosestNode</a>( <span class="keyword">final</span> GeoPosition p_position )</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    {</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        <span class="keyword">final</span> QueryResult l_result = this.getLocationIndex().findClosest( p_position.getLatitude(), p_position.getLongitude(), EdgeFilter.ALL_EDGES );</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        <span class="keywordflow">return</span> l_result.getClosestNode();</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    }</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment">     * returns the linkage between edge and car</span></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="comment">     * @param p_edgestate edge object</span></div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="comment">     * @return linkage object</span></div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="comment">     * @note listener object will be set at the edge instantiation process</span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00249"></a><span class="lineno"><a class="line" href="../../dc/dee/a00053.htm#a4ce89dfaca22e0fbb47c1f1e258b19ee">  249</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> CEdge&lt;ICar, ?&gt; <a class="code" href="../../dc/dee/a00053.htm#a4ce89dfaca22e0fbb47c1f1e258b19ee">getEdge</a>( <span class="keyword">final</span> EdgeIteratorState p_edgestate )</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    {</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        CEdge&lt;ICar, ?&gt; l_edge = m_edgecell.get( p_edgestate.getEdge() );</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        <span class="keywordflow">if</span> ( l_edge != null )</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;            <span class="keywordflow">return</span> l_edge;</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        <span class="comment">// create a new edge and add it to the edge list, if one exists return the existing object</span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        l_edge = <span class="keyword">new</span> CEdge( p_edgestate, <a class="code" href="../../dc/dee/a00053.htm#af4a6cb21383dbfad7a143b921c77762f">m_cellsize</a> ).addListener( <a class="code" href="../../dc/dee/a00053.htm#a7ced5899fefea5fa11a01a8abc141862">m_edgelister</a> );</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        <span class="keyword">final</span> CEdge&lt;ICar, ?&gt; l_return = m_edgecell.putIfAbsent( l_edge.getEdgeID(), l_edge );</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        <span class="keywordflow">return</span> l_return == null ? l_edge : l_return;</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    }</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="comment">     * returns an iterator state of an edge</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="comment">     * @param p_edgeid edge ID</span></div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="comment">     * @return iterator</span></div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00267"></a><span class="lineno"><a class="line" href="../../dc/dee/a00053.htm#adfafc531d947cfa8121995898cbc2ef6">  267</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> EdgeIteratorState <a class="code" href="../../dc/dee/a00053.htm#adfafc531d947cfa8121995898cbc2ef6">getEdgeIterator</a>( <span class="keyword">final</span> <span class="keywordtype">int</span> p_edgeid )</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    {</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        <span class="keywordflow">return</span> this.getGraphHopperStorage().getEdgeIteratorState( p_edgeid, Integer.MIN_VALUE );</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    }</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment">     * returns the max. speed of an edge</span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="comment">     * @param p_edge edge ID</span></div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="comment">     * @return speed</span></div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00278"></a><span class="lineno"><a class="line" href="../../dc/dee/a00053.htm#af0403a898b0d9563e6f1a3894544eb7f">  278</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">double</span> <a class="code" href="../../dc/dee/a00053.htm#af0403a898b0d9563e6f1a3894544eb7f">getEdgeSpeed</a>( <span class="keyword">final</span> EdgeIteratorState p_edge )</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    {</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        <span class="keywordflow">if</span> ( p_edge == null )</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        <span class="keywordflow">return</span> this.getGraphHopperStorage().getEncodingManager().getEncoder( <a class="code" href="../../dc/dee/a00053.htm#a30a554f41f23839968566b7056bfc0e5">c_defaultflagencoding</a> ).getSpeed( p_edge.getFlags() );</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    }</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="comment">     * number of cars</span></div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="comment">     * @return number of cars on the graph</span></div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00291"></a><span class="lineno"><a class="line" href="../../dc/dee/a00053.htm#a1388553f2136ca2d27571864d3e42aa0">  291</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">int</span> <a class="code" href="../../dc/dee/a00053.htm#a1388553f2136ca2d27571864d3e42aa0">getNumberOfObjects</a>()</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    {</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        <span class="keywordflow">return</span> m_edgecell.values().parallelStream().mapToInt( i -&gt; i.getNumberOfObjects() ).sum();</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    }</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="comment">     * creates the full path of cells with the edge value</span></div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="comment">     * @param p_route edge list</span></div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="comment">     * @return list with pair of edge and cell position</span></div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00302"></a><span class="lineno"><a class="line" href="../../dc/dee/a00053.htm#a0204b1f38caa94724ec755386f5db11a">  302</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> ArrayList&lt;Pair&lt;EdgeIteratorState, Integer&gt;&gt; <a class="code" href="../../dc/dee/a00053.htm#a0204b1f38caa94724ec755386f5db11a">getRouteCells</a>( <span class="keyword">final</span> List&lt;EdgeIteratorState&gt; p_route )</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    {</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;        <span class="keyword">final</span> ArrayList&lt;Pair&lt;EdgeIteratorState, Integer&gt;&gt; l_list = <span class="keyword">new</span> ArrayList&lt;&gt;();</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        <span class="keywordflow">if</span> ( p_route.isEmpty() )</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;            <span class="keywordflow">return</span> l_list;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        <span class="keywordflow">for</span> ( <span class="keyword">final</span> EdgeIteratorState l_edge : p_route )</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;            <span class="keywordflow">for</span> ( <span class="keywordtype">int</span> i = 0; i &lt; this.getEdge( l_edge ).getEdgeCells(); i++ )</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;                l_list.add( <span class="keyword">new</span> ImmutablePair&lt;&gt;( l_edge, i ) );</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        <span class="keywordflow">return</span> l_list;</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    }</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="comment">     * creates a list of list of edge between two geopositions</span></div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="comment">     * @param p_start start geoposition</span></div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="comment">     * @param p_end end geoposition</span></div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="comment">     * @return list of list of edges</span></div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00322"></a><span class="lineno"><a class="line" href="../../dc/dee/a00053.htm#ab9aec2ee7d67d17a946098fde8924839">  322</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> List&lt;List&lt;EdgeIteratorState&gt;&gt; <a class="code" href="../../dc/dee/a00053.htm#ab9aec2ee7d67d17a946098fde8924839">getRoutes</a>( <span class="keyword">final</span> GeoPosition p_start, <span class="keyword">final</span> GeoPosition p_end )</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    {</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        <span class="keywordflow">return</span> this.getRoutes( p_start, p_end, <a class="code" href="../../d7/dce/a00143.htm#a3f2aa537dd2dc74cb37e30b354c41482">EWeight.Default</a>, Integer.MAX_VALUE );</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    }</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="comment">     * creates a list of list of edge between two geopositions</span></div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="comment">     * @param p_start start geoposition</span></div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="comment">     * @param p_end end geoposition</span></div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="comment">     * @param p_maxroutes max. number of paths</span></div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="comment">     * @return list of list of edges</span></div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00335"></a><span class="lineno"><a class="line" href="../../dc/dee/a00053.htm#afa202734ed334bcd863839b1d079c2bf">  335</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> List&lt;List&lt;EdgeIteratorState&gt;&gt; <a class="code" href="../../dc/dee/a00053.htm#afa202734ed334bcd863839b1d079c2bf">getRoutes</a>( <span class="keyword">final</span> GeoPosition p_start, <span class="keyword">final</span> GeoPosition p_end, <span class="keyword">final</span> <span class="keywordtype">int</span> p_maxroutes )</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    {</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        <span class="keywordflow">return</span> this.getRoutes( p_start, p_end, <a class="code" href="../../d7/dce/a00143.htm#a3f2aa537dd2dc74cb37e30b354c41482">EWeight.Default</a>, p_maxroutes );</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    }</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="comment">     * creates a list of list of edge between two geopositions</span></div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="comment">     * @param p_start start geoposition</span></div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;<span class="comment">     * @param p_end end geoposition</span></div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;<span class="comment">     * @param p_weighting weigtning name</span></div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="comment">     * @return list of list of edges</span></div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00348"></a><span class="lineno"><a class="line" href="../../dc/dee/a00053.htm#abbaf1a0dfbe480cefefeaa878cf625fb">  348</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> List&lt;List&lt;EdgeIteratorState&gt;&gt; <a class="code" href="../../dc/dee/a00053.htm#abbaf1a0dfbe480cefefeaa878cf625fb">getRoutes</a>( <span class="keyword">final</span> GeoPosition p_start, <span class="keyword">final</span> GeoPosition p_end, <span class="keyword">final</span> String p_weighting )</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    {</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;        <span class="keywordflow">return</span> this.getRoutes( p_start, p_end, <a class="code" href="../../d7/dce/a00143.htm#a3f2aa537dd2dc74cb37e30b354c41482">EWeight.Default</a>, Integer.MAX_VALUE );</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    }</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="comment">     * creates a list of list of edge between two geopositions</span></div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="comment">     * @param p_start start geoposition</span></div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="comment">     * @param p_end end geoposition</span></div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="comment">     * @param p_weighting weigting name</span></div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="comment">     * @param p_maxroutes max. number of paths</span></div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="comment">     * @return list of list of edges</span></div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00362"></a><span class="lineno"><a class="line" href="../../dc/dee/a00053.htm#a477189d1615b3f2b9f33b1e660567738">  362</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> List&lt;List&lt;EdgeIteratorState&gt;&gt; <a class="code" href="../../dc/dee/a00053.htm#a477189d1615b3f2b9f33b1e660567738">getRoutes</a>( <span class="keyword">final</span> GeoPosition p_start, <span class="keyword">final</span> GeoPosition p_end, <span class="keyword">final</span> <a class="code" href="../../d7/dce/a00143.htm">EWeight</a> p_weighting, <span class="keyword">final</span> <span class="keywordtype">int</span> p_maxroutes )</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    {</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;        <span class="comment">// calculate routes</span></div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;        <span class="keyword">final</span> GHRequest l_request = <span class="keyword">new</span> GHRequest( p_start.getLatitude(), p_start.getLongitude(), p_end.getLatitude(), p_end.getLongitude() );</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        l_request.setAlgorithm( CConfiguration.getInstance().<span class="keyword">get</span>().&lt;String&gt;<span class="keyword">get</span>( <span class="stringliteral">&quot;simulation/traffic/routing/algorithm&quot;</span> ) );</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        <span class="keywordflow">if</span> ( ( p_weighting != null ) &amp;&amp; ( !p_weighting.equals( <a class="code" href="../../d7/dce/a00143.htm">EWeight</a>.<a class="code" href="../../d7/dce/a00143.htm#a3f2aa537dd2dc74cb37e30b354c41482">Default</a> ) ) )</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;            l_request.setWeighting( p_weighting.name() );</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;        <span class="keyword">final</span> GHResponse l_result = this.route( l_request );</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;        <span class="keywordflow">if</span> ( !l_result.getErrors().isEmpty() )</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;        {</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;            <span class="keywordflow">for</span> ( <span class="keyword">final</span> Throwable l_msg : l_result.getErrors() )</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;                <a class="code" href="../../d0/d89/a00071.htm">CLogger</a>.<a class="code" href="../../d0/d89/a00071.htm#a942b81f8e08f0e1702c8e358b1639663">error</a>( l_msg.getMessage() );</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> IllegalArgumentException( <a class="code" href="../../d1/dc6/a00037.htm">CCommon</a>.<a class="code" href="../../d1/dc6/a00037.htm#ae523069a1b523b0e6a0c643049b1d745">getResourceString</a>( <span class="keyword">this</span>, <span class="stringliteral">&quot;grapherror&quot;</span> ) );</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;        }</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;        <span class="comment">// get all paths and create routes</span></div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;        <span class="keyword">final</span> List&lt;List&lt;EdgeIteratorState&gt;&gt; l_paths = <span class="keyword">new</span> ArrayList&lt;&gt;();</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;        <span class="keyword">final</span> List&lt;Path&gt; l_routes = this.getPaths( l_request, l_result );</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;        <span class="keywordflow">if</span> ( l_routes.size() == 0 )</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;            <span class="keywordflow">return</span> l_paths;</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        <span class="keywordflow">for</span> ( <span class="keyword">final</span> Path l_path : l_routes )</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;        {</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;            <span class="keywordflow">if</span> ( l_paths.size() &gt;= p_maxroutes )</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                <span class="keywordflow">return</span> l_paths;</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;            <span class="comment">// we must delete the first and last element, because the items are &quot;virtual&quot;</span></div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;            <span class="keyword">final</span> List&lt;EdgeIteratorState&gt; l_edgelist = l_path.calcEdges();</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;            <span class="keywordflow">if</span> ( l_edgelist.size() &lt; 3 )</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;            l_edgelist.remove( 0 );</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;            l_edgelist.remove( l_edgelist.size() - 1 );</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;            l_paths.add( l_edgelist );</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;        }</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;        <span class="keywordflow">return</span> l_paths;</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    }</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;<span class="comment">     * deletes a graph by URL</span></div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;<span class="comment">     * @param p_url URL</span></div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00409"></a><span class="lineno"><a class="line" href="../../dc/dee/a00053.htm#a4d340ee2714fbae18454e04e3e8c5640">  409</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/dee/a00053.htm#a4d340ee2714fbae18454e04e3e8c5640">deleteGraph</a>( <span class="keyword">final</span> String p_url )</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    {</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;        FileUtils.deleteQuietly( <a class="code" href="../../dc/dee/a00053.htm#a7e7939418c529551a915e16806f3035c">getGraphLocation</a>( p_url ) );</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    }</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="comment">     * returns the edge collection</span></div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;<span class="comment">     * @return collection</span></div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00419"></a><span class="lineno"><a class="line" href="../../dc/dee/a00053.htm#a8a9229504ed359e0d600ac2bc66f3c7c">  419</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> Collection&lt;CEdge&lt;ICar, ?&gt;&gt; <a class="code" href="../../dc/dee/a00053.htm#a8a9229504ed359e0d600ac2bc66f3c7c">getEdgeCollection</a>()</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    {</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;        <span class="keywordflow">return</span> m_edgecell.values();</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;    }</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;<span class="comment">     * download graph and run converting</span></div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;<span class="comment">     * @param p_url download URL</span></div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;<span class="comment">     * @param p_directory directory in which the graph data is stored</span></div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00430"></a><span class="lineno"><a class="line" href="../../dc/dee/a00053.htm#ae5c0685aaf270da802fd77638981455b">  430</a></span>&#160;    <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/dee/a00053.htm#ae5c0685aaf270da802fd77638981455b">downloadGraphAndLoad</a>( <span class="keyword">final</span> String p_url, <span class="keyword">final</span> File p_directory )</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;    {</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;        CLogger.info( CCommon.getResourceString( <span class="keyword">this</span>, <span class="stringliteral">&quot;notloaded&quot;</span> ) );</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        this.setGraphHopperLocation( p_directory.getAbsolutePath() );</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;        this.setOSMFile( this.downloadOSMData( p_url ).getAbsolutePath() );</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;        this.importOrLoad();</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;    }</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;<span class="comment">     * gets the current graph with its download URL from</span></div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;<span class="comment">     * the configuration</span></div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;<span class="comment">     * @return string URL</span></div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00445"></a><span class="lineno"><a class="line" href="../../dc/dee/a00053.htm#a27dc64f80edc1b17714a363cdd79e62b">  445</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">static</span> String <a class="code" href="../../dc/dee/a00053.htm#a27dc64f80edc1b17714a363cdd79e62b">getCurrentGraph</a>()</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    {</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        <span class="keywordflow">return</span> CConfiguration.getInstance().<span class="keyword">get</span>().&lt;String&gt;<span class="keyword">get</span>( <span class="stringliteral">&quot;simulation/traffic/map/current&quot;</span> );</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    }</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;<span class="comment">     * returns the full path of a graph location</span></div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;<span class="comment">     * @param p_url download URL</span></div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;<span class="comment">     * @return graph path location</span></div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00456"></a><span class="lineno"><a class="line" href="../../dc/dee/a00053.htm#a7e7939418c529551a915e16806f3035c">  456</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">static</span> File <a class="code" href="../../dc/dee/a00053.htm#a7e7939418c529551a915e16806f3035c">getGraphLocation</a>( <span class="keyword">final</span> String p_url )</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;    {</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;        <span class="keywordflow">return</span> CConfiguration.getInstance().getLocation(</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;                <span class="stringliteral">&quot;root&quot;</span>, <span class="stringliteral">&quot;graphs&quot;</span>, <a class="code" href="../../d1/dc6/a00037.htm">CCommon</a>.<a class="code" href="../../d1/dc6/a00037.htm#a5787f1e254c47dda5783aff04de599fd">getHash</a>( p_url, <span class="stringliteral">&quot;MD5&quot;</span> )</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;        );</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    }</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;<span class="comment">     * downloads the OSM data</span></div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;<span class="comment">     * @param p_url URL for downloading as string</span></div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;<span class="comment">     * @return download file with full path</span></div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00469"></a><span class="lineno"><a class="line" href="../../dc/dee/a00053.htm#ab28c72bf7c6ca13169596c8f91d51618">  469</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">final</span> File <a class="code" href="../../dc/dee/a00053.htm#ab28c72bf7c6ca13169596c8f91d51618">downloadOSMData</a>( <span class="keyword">final</span> String p_url )</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    {</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;        <span class="keywordflow">try</span></div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;        {</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;            <span class="keyword">final</span> File l_output = File.createTempFile( <span class="stringliteral">&quot;mecsim&quot;</span>, <span class="stringliteral">&quot;.osm.pbf&quot;</span> );</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;            <span class="keyword">final</span> URL l_url = <span class="keyword">new</span> URL( p_url );</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;            CLogger.out( CCommon.getResourceString( <span class="keyword">this</span>, <span class="stringliteral">&quot;download&quot;</span>, l_url, l_output ) );</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;            <span class="keyword">final</span> ReadableByteChannel l_channel = Channels.newChannel( l_url.openStream() );</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;            <span class="keyword">final</span> FileOutputStream l_stream = <span class="keyword">new</span> FileOutputStream( l_output );</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;            l_stream.getChannel().transferFrom( l_channel, 0, Long.MAX_VALUE );</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;            <span class="keywordflow">return</span> l_output;</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;        }</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;        <span class="keywordflow">catch</span> ( <span class="keyword">final</span> Exception l_exception )</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;        {</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;            CLogger.error( l_exception.getMessage() );</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;        }</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;        <span class="keywordflow">return</span> null;</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    }</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;<span class="comment">     * enum with weighting</span></div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00495"></a><span class="lineno"><a class="line" href="../../d7/dce/a00143.htm">  495</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">enum</span> <a class="code" href="../../d7/dce/a00143.htm">EWeight</a></div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;    {<span class="comment"></span></div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;<span class="comment">        /**</span></div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;<span class="comment">         * default behaviour</span></div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;<span class="comment">         */</span></div>
<div class="line"><a name="l00500"></a><span class="lineno"><a class="line" href="../../d7/dce/a00143.htm#a3f2aa537dd2dc74cb37e30b354c41482">  500</a></span>&#160;        <a class="code" href="../../d7/dce/a00143.htm#a3f2aa537dd2dc74cb37e30b354c41482">Default</a>( <a class="code" href="../../d1/dc6/a00037.htm">CCommon</a>.<a class="code" href="../../d1/dc6/a00037.htm#ae523069a1b523b0e6a0c643049b1d745">getResourceString</a>( <a class="code" href="../../d7/dce/a00143.htm">EWeight</a>.class, <span class="stringliteral">&quot;default&quot;</span> ) ),<span class="comment"></span></div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;<span class="comment">        /**</span></div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;<span class="comment">         * avoid traffic jam</span></div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;<span class="comment">         */</span></div>
<div class="line"><a name="l00504"></a><span class="lineno"><a class="line" href="../../d7/dce/a00143.htm#a446b3ab55eea78cd5269ca3ea66ff98a">  504</a></span>&#160;        <a class="code" href="../../d7/dce/a00143.htm#a446b3ab55eea78cd5269ca3ea66ff98a">TrafficJam</a>( <a class="code" href="../../d1/dc6/a00037.htm">CCommon</a>.<a class="code" href="../../d1/dc6/a00037.htm#ae523069a1b523b0e6a0c643049b1d745">getResourceString</a>( <a class="code" href="../../d7/dce/a00143.htm">EWeight</a>.class, <span class="stringliteral">&quot;trafficjam&quot;</span> ) ),<span class="comment"></span></div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;<span class="comment">        /**</span></div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;<span class="comment">         * avoid forbidden edges</span></div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;<span class="comment">         */</span></div>
<div class="line"><a name="l00508"></a><span class="lineno"><a class="line" href="../../d7/dce/a00143.htm#a9dcab127dd85836b43d4da4be407b548">  508</a></span>&#160;        <a class="code" href="../../d7/dce/a00143.htm#a9dcab127dd85836b43d4da4be407b548">ForbiddenEdge</a>( <a class="code" href="../../d1/dc6/a00037.htm">CCommon</a>.<a class="code" href="../../d1/dc6/a00037.htm#ae523069a1b523b0e6a0c643049b1d745">getResourceString</a>( <a class="code" href="../../d7/dce/a00143.htm">EWeight</a>.class, <span class="stringliteral">&quot;forbiddenedge&quot;</span> ) );</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;<span class="comment">        /**</span></div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;<span class="comment">         * name of this distribution type</span></div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;<span class="comment">         */</span></div>
<div class="line"><a name="l00513"></a><span class="lineno"><a class="line" href="../../d7/dce/a00143.htm#a7b2536aaa173cdb2b74d5073f9b66676">  513</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">final</span> String <a class="code" href="../../d7/dce/a00143.htm#a7b2536aaa173cdb2b74d5073f9b66676">m_text</a>;</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;<span class="comment">        /**</span></div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;<span class="comment">         * ctor</span></div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;<span class="comment">         *</span></div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;<span class="comment">         * @param p_text language depend name</span></div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;<span class="comment">         */</span></div>
<div class="line"><a name="l00521"></a><span class="lineno"><a class="line" href="../../d7/dce/a00143.htm#a4bdfc478b8b5135aaa0d817fae5f6791">  521</a></span>&#160;        <span class="keyword">private</span> <a class="code" href="../../d7/dce/a00143.htm#a4bdfc478b8b5135aaa0d817fae5f6791">EWeight</a>( <span class="keyword">final</span> String p_text )</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;        {</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;            m_text = p_text;</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;        }</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;<span class="comment">        /**</span></div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;<span class="comment">         * returns a weighting object</span></div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;<span class="comment">         *</span></div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;<span class="comment">         * @param p_graph graph</span></div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;<span class="comment">         * @param p_encoder encoder</span></div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;<span class="comment">         * @return weighting object</span></div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;<span class="comment">         */</span></div>
<div class="line"><a name="l00534"></a><span class="lineno"><a class="line" href="../../d7/dce/a00143.htm#a2335109faba9bc5e4350f4d124525d59">  534</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">final</span> Weighting <span class="keyword">get</span>( <span class="keyword">final</span> <a class="code" href="../../dc/dee/a00053.htm">CGraphHopper</a> p_graph, <span class="keyword">final</span> FlagEncoder p_encoder )</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;        {</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;            <span class="keywordflow">switch</span> ( <span class="keyword">this</span> )</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;            {</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;                <span class="keywordflow">case</span> TrafficJam:</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;                    <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="../../d2/da3/a00115.htm">CTrafficJam</a>( p_encoder, p_graph );</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;                <span class="keywordflow">case</span> ForbiddenEdge:</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;                    <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="../../d5/de0/a00050.htm">CForbiddenEdge</a>( p_encoder, p_graph );</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;                <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;                    <span class="keywordflow">return</span> null;</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;            }</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;        }</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;        @Override</div>
<div class="line"><a name="l00550"></a><span class="lineno"><a class="line" href="../../d7/dce/a00143.htm#ae0f1ad5ccb16836320a9b5fda6138473">  550</a></span>&#160;        <span class="keyword">public</span> String <a class="code" href="../../d7/dce/a00143.htm#ae0f1ad5ccb16836320a9b5fda6138473">toString</a>()</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;        {</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;            <span class="keywordflow">return</span> m_text;</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;        }</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;    }</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;}</div>
<div class="ttc" id="a00053_htm_a30a554f41f23839968566b7056bfc0e5"><div class="ttname"><a href="../../dc/dee/a00053.htm#a30a554f41f23839968566b7056bfc0e5">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.c_defaultflagencoding</a></div><div class="ttdeci">static final String c_defaultflagencoding</div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00072">CGraphHopper.java:72</a></div></div>
<div class="ttc" id="a00053_htm_a4ce89dfaca22e0fbb47c1f1e258b19ee"><div class="ttname"><a href="../../dc/dee/a00053.htm#a4ce89dfaca22e0fbb47c1f1e258b19ee">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.getEdge</a></div><div class="ttdeci">final CEdge&lt; ICar,?&gt; getEdge(final EdgeIteratorState p_edgestate)</div><div class="ttdoc">returns the linkage between edge and car </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00249">CGraphHopper.java:249</a></div></div>
<div class="ttc" id="a00040_htm"><div class="ttname"><a href="../../db/d3a/a00040.htm">de.tu_clausthal.in.mec.CConfiguration</a></div><div class="ttdoc">singleton class for configuration with a Json file </div><div class="ttdef"><b>Definition:</b> <a href="../../da/d31/a00234_source.htm#l00065">CConfiguration.java:65</a></div></div>
<div class="ttc" id="a00053_htm_a0204b1f38caa94724ec755386f5db11a"><div class="ttname"><a href="../../dc/dee/a00053.htm#a0204b1f38caa94724ec755386f5db11a">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.getRouteCells</a></div><div class="ttdeci">final ArrayList&lt; Pair&lt; EdgeIteratorState, Integer &gt; &gt; getRouteCells(final List&lt; EdgeIteratorState &gt; p_route)</div><div class="ttdoc">creates the full path of cells with the edge value </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00302">CGraphHopper.java:302</a></div></div>
<div class="ttc" id="a00040_htm_a5fc1c2b2396e46e44cbc25c907f2c452"><div class="ttname"><a href="../../db/d3a/a00040.htm#a5fc1c2b2396e46e44cbc25c907f2c452">de.tu_clausthal.in.mec.CConfiguration.getInstance</a></div><div class="ttdeci">static CConfiguration getInstance()</div><div class="ttdoc">singleton get instance method </div><div class="ttdef"><b>Definition:</b> <a href="../../da/d31/a00234_source.htm#l00427">CConfiguration.java:427</a></div></div>
<div class="ttc" id="a00037_htm"><div class="ttname"><a href="../../d1/dc6/a00037.htm">de.tu_clausthal.in.mec.common.CCommon</a></div><div class="ttdoc">class for any helper calls </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00060">common/CCommon.java:60</a></div></div>
<div class="ttc" id="a00053_htm_ab28c72bf7c6ca13169596c8f91d51618"><div class="ttname"><a href="../../dc/dee/a00053.htm#ab28c72bf7c6ca13169596c8f91d51618">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.downloadOSMData</a></div><div class="ttdeci">final File downloadOSMData(final String p_url)</div><div class="ttdoc">downloads the OSM data </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00469">CGraphHopper.java:469</a></div></div>
<div class="ttc" id="a00053_htm_a477189d1615b3f2b9f33b1e660567738"><div class="ttname"><a href="../../dc/dee/a00053.htm#a477189d1615b3f2b9f33b1e660567738">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.getRoutes</a></div><div class="ttdeci">final List&lt; List&lt; EdgeIteratorState &gt; &gt; getRoutes(final GeoPosition p_start, final GeoPosition p_end, final EWeight p_weighting, final int p_maxroutes)</div><div class="ttdoc">creates a list of list of edge between two geopositions </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00362">CGraphHopper.java:362</a></div></div>
<div class="ttc" id="a00115_htm"><div class="ttname"><a href="../../d2/da3/a00115.htm">de.tu_clausthal.in.mec.object.car.graph.weights.CTrafficJam</a></div><div class="ttdoc">class to create edge weights of the current traffic occurrence </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d0a/a00292_source.htm#l00040">CTrafficJam.java:40</a></div></div>
<div class="ttc" id="a00053_htm_a1ffc5be303574c45b6ce3a573e4fa9dc"><div class="ttname"><a href="../../dc/dee/a00053.htm#a1ffc5be303574c45b6ce3a573e4fa9dc">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.clear</a></div><div class="ttdeci">final synchronized void clear()</div><div class="ttdoc">clears all edges </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00169">CGraphHopper.java:169</a></div></div>
<div class="ttc" id="a00053_htm_adfafc531d947cfa8121995898cbc2ef6"><div class="ttname"><a href="../../dc/dee/a00053.htm#adfafc531d947cfa8121995898cbc2ef6">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.getEdgeIterator</a></div><div class="ttdeci">final EdgeIteratorState getEdgeIterator(final int p_edgeid)</div><div class="ttdoc">returns an iterator state of an edge </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00267">CGraphHopper.java:267</a></div></div>
<div class="ttc" id="a00053_htm_a7e7939418c529551a915e16806f3035c"><div class="ttname"><a href="../../dc/dee/a00053.htm#a7e7939418c529551a915e16806f3035c">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.getGraphLocation</a></div><div class="ttdeci">static File getGraphLocation(final String p_url)</div><div class="ttdoc">returns the full path of a graph location </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00456">CGraphHopper.java:456</a></div></div>
<div class="ttc" id="a00143_htm_a3f2aa537dd2dc74cb37e30b354c41482"><div class="ttname"><a href="../../d7/dce/a00143.htm#a3f2aa537dd2dc74cb37e30b354c41482">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.EWeight.Default</a></div><div class="ttdeci">Default</div><div class="ttdoc">default behaviour </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00500">CGraphHopper.java:500</a></div></div>
<div class="ttc" id="a00143_htm_a7b2536aaa173cdb2b74d5073f9b66676"><div class="ttname"><a href="../../d7/dce/a00143.htm#a7b2536aaa173cdb2b74d5073f9b66676">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.EWeight.m_text</a></div><div class="ttdeci">final String m_text</div><div class="ttdoc">name of this distribution type </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00513">CGraphHopper.java:513</a></div></div>
<div class="ttc" id="a00053_htm_af0403a898b0d9563e6f1a3894544eb7f"><div class="ttname"><a href="../../dc/dee/a00053.htm#af0403a898b0d9563e6f1a3894544eb7f">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.getEdgeSpeed</a></div><div class="ttdeci">final double getEdgeSpeed(final EdgeIteratorState p_edge)</div><div class="ttdoc">returns the max. </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00278">CGraphHopper.java:278</a></div></div>
<div class="ttc" id="a00037_htm_a5787f1e254c47dda5783aff04de599fd"><div class="ttname"><a href="../../d1/dc6/a00037.htm#a5787f1e254c47dda5783aff04de599fd">de.tu_clausthal.in.mec.common.CCommon.getHash</a></div><div class="ttdeci">static String getHash(final String p_string, final String p_hash)</div><div class="ttdoc">returns the hash of a string </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00260">common/CCommon.java:260</a></div></div>
<div class="ttc" id="a00053_htm_a27dc64f80edc1b17714a363cdd79e62b"><div class="ttname"><a href="../../dc/dee/a00053.htm#a27dc64f80edc1b17714a363cdd79e62b">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.getCurrentGraph</a></div><div class="ttdeci">static String getCurrentGraph()</div><div class="ttdoc">gets the current graph with its download URL from the configuration </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00445">CGraphHopper.java:445</a></div></div>
<div class="ttc" id="a00053_htm_a8a9229504ed359e0d600ac2bc66f3c7c"><div class="ttname"><a href="../../dc/dee/a00053.htm#a8a9229504ed359e0d600ac2bc66f3c7c">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.getEdgeCollection</a></div><div class="ttdeci">final Collection&lt; CEdge&lt; ICar,?&gt; &gt; getEdgeCollection()</div><div class="ttdoc">returns the edge collection </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00419">CGraphHopper.java:419</a></div></div>
<div class="ttc" id="a00053_htm_a9f50968acad02be391044bf2324747bc"><div class="ttname"><a href="../../dc/dee/a00053.htm#a9f50968acad02be391044bf2324747bc">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.CGraphHopper</a></div><div class="ttdeci">CGraphHopper(final String p_encoding, final int p_cellsize)</div><div class="ttdoc">ctor </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00110">CGraphHopper.java:110</a></div></div>
<div class="ttc" id="a00143_htm_a9dcab127dd85836b43d4da4be407b548"><div class="ttname"><a href="../../d7/dce/a00143.htm#a9dcab127dd85836b43d4da4be407b548">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.EWeight.ForbiddenEdge</a></div><div class="ttdeci">ForbiddenEdge</div><div class="ttdoc">avoid forbidden edges </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00508">CGraphHopper.java:508</a></div></div>
<div class="ttc" id="a00143_htm_ae0f1ad5ccb16836320a9b5fda6138473"><div class="ttname"><a href="../../d7/dce/a00143.htm#ae0f1ad5ccb16836320a9b5fda6138473">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.EWeight.toString</a></div><div class="ttdeci">String toString()</div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00550">CGraphHopper.java:550</a></div></div>
<div class="ttc" id="a00037_htm_ae523069a1b523b0e6a0c643049b1d745"><div class="ttname"><a href="../../d1/dc6/a00037.htm#ae523069a1b523b0e6a0c643049b1d745">de.tu_clausthal.in.mec.common.CCommon.getResourceString</a></div><div class="ttdeci">static String getResourceString(final Class&lt;?&gt; p_class, final String p_label, final Object...p_parameter)</div><div class="ttdoc">returns a default string of the resource file </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00335">common/CCommon.java:335</a></div></div>
<div class="ttc" id="a00053_htm_a23779554d7c0dc14f56366cbe667e83b"><div class="ttname"><a href="../../dc/dee/a00053.htm#a23779554d7c0dc14f56366cbe667e83b">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.getClosestEdge</a></div><div class="ttdeci">final int getClosestEdge(final GeoPosition p_position)</div><div class="ttdoc">returns the closest edge(s) of a geo position </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00223">CGraphHopper.java:223</a></div></div>
<div class="ttc" id="a00053_htm_a5cd286301651efe9528081e5cf108940"><div class="ttname"><a href="../../dc/dee/a00053.htm#a5cd286301651efe9528081e5cf108940">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.CGraphHopper</a></div><div class="ttdeci">CGraphHopper(final int p_cellsize)</div><div class="ttdoc">ctor </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00098">CGraphHopper.java:98</a></div></div>
<div class="ttc" id="a00053_htm_a575232157023f8bb62848ff3d566efa0"><div class="ttname"><a href="../../dc/dee/a00053.htm#a575232157023f8bb62848ff3d566efa0">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.existWeight</a></div><div class="ttdeci">final boolean existWeight(final EWeight p_weight)</div><div class="ttdoc">checks if a weight object exists </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00212">CGraphHopper.java:212</a></div></div>
<div class="ttc" id="a00053_htm_ac29d592f54b98d58c03c74a6248bcccc"><div class="ttname"><a href="../../dc/dee/a00053.htm#ac29d592f54b98d58c03c74a6248bcccc">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.getWeight</a></div><div class="ttdeci">final&lt; T extends Weighting &gt; T getWeight(final EWeight p_weight)</div><div class="ttdoc">returns a weight object by name </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00201">CGraphHopper.java:201</a></div></div>
<div class="ttc" id="a00053_htm_af68d1587927024b4344013cccfafb38f"><div class="ttname"><a href="../../dc/dee/a00053.htm#af68d1587927024b4344013cccfafb38f">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.addEdgeListener</a></div><div class="ttdeci">final synchronized void addEdgeListener(final IAction&lt; ICar,?&gt; p_listener)</div><div class="ttdoc">adds an edge listener </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00161">CGraphHopper.java:161</a></div></div>
<div class="ttc" id="a00053_htm_a7ced5899fefea5fa11a01a8abc141862"><div class="ttname"><a href="../../dc/dee/a00053.htm#a7ced5899fefea5fa11a01a8abc141862">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.m_edgelister</a></div><div class="ttdeci">final Set&lt; IAction&lt; ICar,?&gt; &gt; m_edgelister</div><div class="ttdoc">set with listerner of the edges </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00084">CGraphHopper.java:84</a></div></div>
<div class="ttc" id="a00053_htm_ab1f35680f0ea0bab593c51abe1200cae"><div class="ttname"><a href="../../dc/dee/a00053.htm#ab1f35680f0ea0bab593c51abe1200cae">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.m_weights</a></div><div class="ttdeci">final Map&lt; EWeight, Weighting &gt; m_weights</div><div class="ttdoc">map with additional weights </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00090">CGraphHopper.java:90</a></div></div>
<div class="ttc" id="a00053_htm_a1388553f2136ca2d27571864d3e42aa0"><div class="ttname"><a href="../../dc/dee/a00053.htm#a1388553f2136ca2d27571864d3e42aa0">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.getNumberOfObjects</a></div><div class="ttdeci">final int getNumberOfObjects()</div><div class="ttdoc">number of cars </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00291">CGraphHopper.java:291</a></div></div>
<div class="ttc" id="a00053_htm_a31fa54c98bad3fcbf0f6de0c2498d43d"><div class="ttname"><a href="../../dc/dee/a00053.htm#a31fa54c98bad3fcbf0f6de0c2498d43d">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.createWeighting</a></div><div class="ttdeci">Weighting createWeighting(final WeightingMap p_map, final FlagEncoder p_encoder)</div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00176">CGraphHopper.java:176</a></div></div>
<div class="ttc" id="a00053_htm_af4a6cb21383dbfad7a143b921c77762f"><div class="ttname"><a href="../../dc/dee/a00053.htm#af4a6cb21383dbfad7a143b921c77762f">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.m_cellsize</a></div><div class="ttdeci">final int m_cellsize</div><div class="ttdoc">cell size for sampling </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00076">CGraphHopper.java:76</a></div></div>
<div class="ttc" id="a00143_htm"><div class="ttname"><a href="../../d7/dce/a00143.htm">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.EWeight</a></div><div class="ttdoc">enum with weighting </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00495">CGraphHopper.java:495</a></div></div>
<div class="ttc" id="a00143_htm_a446b3ab55eea78cd5269ca3ea66ff98a"><div class="ttname"><a href="../../d7/dce/a00143.htm#a446b3ab55eea78cd5269ca3ea66ff98a">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.EWeight.TrafficJam</a></div><div class="ttdeci">TrafficJam</div><div class="ttdoc">avoid traffic jam </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00504">CGraphHopper.java:504</a></div></div>
<div class="ttc" id="a00071_htm_a942b81f8e08f0e1702c8e358b1639663"><div class="ttname"><a href="../../d0/d89/a00071.htm#a942b81f8e08f0e1702c8e358b1639663">de.tu_clausthal.in.mec.CLogger.error</a></div><div class="ttdeci">static void error()</div><div class="ttdoc">adds a error message </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d04/a00255_source.htm#l00158">CLogger.java:158</a></div></div>
<div class="ttc" id="a00071_htm"><div class="ttname"><a href="../../d0/d89/a00071.htm">de.tu_clausthal.in.mec.CLogger</a></div><div class="ttdoc">Logger class with additional Log4j support. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d04/a00255_source.htm#l00042">CLogger.java:42</a></div></div>
<div class="ttc" id="a00143_htm_a4bdfc478b8b5135aaa0d817fae5f6791"><div class="ttname"><a href="../../d7/dce/a00143.htm#a4bdfc478b8b5135aaa0d817fae5f6791">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.EWeight.EWeight</a></div><div class="ttdeci">EWeight(final String p_text)</div><div class="ttdoc">ctor </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00521">CGraphHopper.java:521</a></div></div>
<div class="ttc" id="a00050_htm"><div class="ttname"><a href="../../d5/de0/a00050.htm">de.tu_clausthal.in.mec.object.car.graph.weights.CForbiddenEdge</a></div><div class="ttdoc">weight class for forbidden edges </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d82/a00243_source.htm#l00048">CForbiddenEdge.java:48</a></div></div>
<div class="ttc" id="a00053_htm_a4d340ee2714fbae18454e04e3e8c5640"><div class="ttname"><a href="../../dc/dee/a00053.htm#a4d340ee2714fbae18454e04e3e8c5640">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.deleteGraph</a></div><div class="ttdeci">static void deleteGraph(final String p_url)</div><div class="ttdoc">deletes a graph by URL </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00409">CGraphHopper.java:409</a></div></div>
<div class="ttc" id="a00053_htm"><div class="ttname"><a href="../../dc/dee/a00053.htm">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper</a></div><div class="ttdoc">class for create a graph structure of OSM data, the class downloads the data and creates edges and ve...</div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00070">CGraphHopper.java:70</a></div></div>
<div class="ttc" id="a00053_htm_aac3edb10dd308e7d176bfc4b13455c60"><div class="ttname"><a href="../../dc/dee/a00053.htm#aac3edb10dd308e7d176bfc4b13455c60">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.getClosestNode</a></div><div class="ttdeci">final int getClosestNode(final GeoPosition p_position)</div><div class="ttdoc">returns the ID of the closest node </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00235">CGraphHopper.java:235</a></div></div>
<div class="ttc" id="a00053_htm_ab9aec2ee7d67d17a946098fde8924839"><div class="ttname"><a href="../../dc/dee/a00053.htm#ab9aec2ee7d67d17a946098fde8924839">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.getRoutes</a></div><div class="ttdeci">final List&lt; List&lt; EdgeIteratorState &gt; &gt; getRoutes(final GeoPosition p_start, final GeoPosition p_end)</div><div class="ttdoc">creates a list of list of edge between two geopositions </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00322">CGraphHopper.java:322</a></div></div>
<div class="ttc" id="a00053_htm_afa202734ed334bcd863839b1d079c2bf"><div class="ttname"><a href="../../dc/dee/a00053.htm#afa202734ed334bcd863839b1d079c2bf">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.getRoutes</a></div><div class="ttdeci">final List&lt; List&lt; EdgeIteratorState &gt; &gt; getRoutes(final GeoPosition p_start, final GeoPosition p_end, final int p_maxroutes)</div><div class="ttdoc">creates a list of list of edge between two geopositions </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00335">CGraphHopper.java:335</a></div></div>
<div class="ttc" id="a00053_htm_abbaf1a0dfbe480cefefeaa878cf625fb"><div class="ttname"><a href="../../dc/dee/a00053.htm#abbaf1a0dfbe480cefefeaa878cf625fb">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.getRoutes</a></div><div class="ttdeci">final List&lt; List&lt; EdgeIteratorState &gt; &gt; getRoutes(final GeoPosition p_start, final GeoPosition p_end, final String p_weighting)</div><div class="ttdoc">creates a list of list of edge between two geopositions </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00348">CGraphHopper.java:348</a></div></div>
<div class="ttc" id="a00053_htm_ae5c0685aaf270da802fd77638981455b"><div class="ttname"><a href="../../dc/dee/a00053.htm#ae5c0685aaf270da802fd77638981455b">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.downloadGraphAndLoad</a></div><div class="ttdeci">void downloadGraphAndLoad(final String p_url, final File p_directory)</div><div class="ttdoc">download graph and run converting </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00430">CGraphHopper.java:430</a></div></div>
<div class="ttc" id="a00154_htm"><div class="ttname"><a href="../../d3/d65/a00154.htm">de.tu_clausthal.in.mec.object.car.ICar</a></div><div class="ttdoc">car interface for defining the car structure </div><div class="ttdef"><b>Definition:</b> <a href="../../de/dab/a00319_source.htm#l00039">ICar.java:39</a></div></div>
<div class="ttc" id="a00053_htm_a20c1bad2f7a63e576811af84068dcf0e"><div class="ttname"><a href="../../dc/dee/a00053.htm#a20c1bad2f7a63e576811af84068dcf0e">de.tu_clausthal.in.mec.object.car.graph.CGraphHopper.m_edgecell</a></div><div class="ttdeci">final Map&lt; Integer, CEdge&lt; ICar,?&gt; &gt; m_edgecell</div><div class="ttdoc">map with edge-cell connection </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d08/a00244_source.htm#l00080">CGraphHopper.java:80</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div id = "nav-path" class = "navpath" >
    <ul >
        <li >
            <a href = "https://github.com/flashpixx/MecSim" >MecSim - Traffic Simulation</a ></li >
    </ul >
</div >
