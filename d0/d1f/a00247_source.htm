<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<title>MecSim - Traffic Simulation: CInconsistencyLayer.java Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.js", "TeX/AMSsymbols.js", "TeX/MathTools.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../layout.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">MecSim - Traffic Simulation
   </div>
   <div id="projectbrief">micro traffic simulation with layered world structure</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.6 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../namespaces.htm"><span>Packages</span></a></li>
      <li><a href="../../annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.htm"><span>File&#160;List</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d0/d1f/a00247_source.htm','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CInconsistencyLayer.java</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d0/d1f/a00247.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * @cond LICENSE</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * ######################################################################################</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * # GPL License                                                                        #</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * #                                                                                    #</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * # This file is part of the micro agent-based traffic simulation MecSim of            #</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * # Clausthal University of Technology - Mobile and Enterprise Computing               #</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * # Copyright (c) 2014-15, Philipp Kraus (philipp.kraus@tu-clausthal.de)               #</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * # This program is free software: you can redistribute it and/or modify               #</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * # it under the terms of the GNU General Public License as                            #</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * # published by the Free Software Foundation, either version 3 of the                 #</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * # License, or (at your option) any later version.                                    #</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * #                                                                                    #</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * # This program is distributed in the hope that it will be useful,                    #</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * # but WITHOUT ANY WARRANTY; without even the implied warranty of                     #</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                      #</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * # GNU General Public License for more details.                                       #</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * #                                                                                    #</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * # You should have received a copy of the GNU General Public License                  #</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * # along with this program. If not, see http://www.gnu.org/licenses/                  #</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * ######################################################################################</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * @endcond</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">package </span>de.tu_clausthal.in.mec.object.mas.inconsistency;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">import</span> cern.colt.function.DoubleFunction;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">import</span> cern.colt.matrix.DoubleFactory1D;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">import</span> cern.colt.matrix.DoubleMatrix1D;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">import</span> cern.colt.matrix.DoubleMatrix2D;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">import</span> cern.colt.matrix.impl.DenseDoubleMatrix1D;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">import</span> cern.colt.matrix.impl.DenseDoubleMatrix2D;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">import</span> cern.colt.matrix.linalg.Algebra;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">import</span> cern.colt.matrix.linalg.EigenvalueDecomposition;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">import</span> cern.jet.math.Mult;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">import</span> <a class="code" href="../../d1/dc6/a00037.htm">de.tu_clausthal.in.mec.common.CCommon</a>;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">import</span> <a class="code" href="../../dc/d54/a00094.htm">de.tu_clausthal.in.mec.common.CPath</a>;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">import</span> <a class="code" href="../../dd/da7/a00168.htm">de.tu_clausthal.in.mec.object.ILayer</a>;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">import</span> <a class="code" href="../../d8/d00/a00186.htm">de.tu_clausthal.in.mec.object.ISingleEvaluateLayer</a>;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">import</span> de.tu_clausthal.in.mec.object.mas.IAgent;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">import</span> <a class="code" href="../../d7/d9a/a00152.htm#d1/d8b/a00406">de.tu_clausthal.in.mec.runtime.benchmark.IBenchmark</a>;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">import</span> java.util.ArrayList;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">import</span> java.util.Map;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">import</span> java.util.concurrent.ConcurrentHashMap;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment"> * layer with inconsistence data</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment"> * @see https://dst.lbl.gov/ACSSoftware/colt/</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.htm">   53</a></span>&#160;<span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class </span>CInconsistencyLayer&lt;T <span class="keyword">extends</span> IAgent&gt; extends <a class="code" href="../../d8/d00/a00186.htm">ISingleEvaluateLayer</a></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{<span class="comment"></span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">     * algebra object</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.htm#a3e3046cffc59b63d99212f69375334f6">   58</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Algebra c_algebra = <span class="keyword">new</span> Algebra();<span class="comment"></span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">     * algorithm to calculate stationary probability</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment">     **/</span></div>
<div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.htm#a5992ffd02b63591ef6d3dca4618f1037">   62</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">final</span> EAlgorithm <a class="code" href="../../d7/df7/a00058.htm#a5992ffd02b63591ef6d3dca4618f1037">m_algorithm</a>;<span class="comment"></span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">     * map with object and inconsistency value</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">     **/</span></div>
<div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.htm#a70d732a838592a169318ea7d063ce457">   66</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;T, Double&gt; m_data = <span class="keyword">new</span> ConcurrentHashMap&lt;&gt;();<span class="comment"></span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">     * epsilon value to create an aperiodic markow-chain</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">     **/</span></div>
<div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.htm#add22e3a9f425d3c06d10f51af3da91f5">   70</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keywordtype">double</span> <a class="code" href="../../d7/df7/a00058.htm#add22e3a9f425d3c06d10f51af3da91f5">m_epsilon</a>;<span class="comment"></span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">     * number of iterations of the stochastic algorithm</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">     **/</span></div>
<div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.htm#a99d5f89b89232137c13fdfbfbe1a3075">   74</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keywordtype">int</span> <a class="code" href="../../d7/df7/a00058.htm#a99d5f89b89232137c13fdfbfbe1a3075">m_iteration</a>;<span class="comment"></span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">     * metric object to create the value of two objects</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">     **/</span></div>
<div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.htm#ab8f9628b635025451f5658364e0a20d2">   78</a></span>&#160;    <span class="keyword">private</span> IMetric&lt;T, CPath&gt; <a class="code" href="../../d7/df7/a00058.htm#ab8f9628b635025451f5658364e0a20d2">m_metric</a>;<span class="comment"></span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">     * name of the layer</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.htm#a6f3699c574beef6f311973673e4b3382">   82</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">final</span> String <a class="code" href="../../d7/df7/a00058.htm#a6f3699c574beef6f311973673e4b3382">m_name</a>;<span class="comment"></span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">     * update of the metric values</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.htm#ab7562f8a7e6c15006195dcd29a3b86c2">   86</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keywordtype">int</span> <a class="code" href="../../d7/df7/a00058.htm#ab7562f8a7e6c15006195dcd29a3b86c2">m_updatestep</a>;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">     * ctor - use numeric algorithm</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">     * @param p_name language-based name of the layer</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">     * @param p_metric object metric</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.htm#ab55420a725145f9f3de50916fe1ab461">   94</a></span>&#160;    <span class="keyword">public</span> <a class="code" href="../../d7/df7/a00058.htm#ab55420a725145f9f3de50916fe1ab461">CInconsistencyLayer</a>( <span class="keyword">final</span> String p_name, <span class="keyword">final</span> IMetric&lt;T, CPath&gt; p_metric )</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    {</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        m_name = p_name;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        m_metric = p_metric;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        m_algorithm = EAlgorithm.Numeric;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        m_iteration = 0;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        m_epsilon = 0.001;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        m_updatestep = 1;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    }</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">     * ctor - use stochastic algorithm</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">     * @param p_name language-based name of the layer</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">     * @param p_metric object metric</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">     * @param p_iteration iterations</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">     * @param p_epsilon epsilon value</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.htm#a5c34683320f648da27c2864646b3b941">  112</a></span>&#160;    <span class="keyword">public</span> <a class="code" href="../../d7/df7/a00058.htm#a5c34683320f648da27c2864646b3b941">CInconsistencyLayer</a>( <span class="keyword">final</span> String p_name, <span class="keyword">final</span> IMetric&lt;T, CPath&gt; p_metric, <span class="keyword">final</span> <span class="keywordtype">int</span> p_iteration,</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            <span class="keyword">final</span> <span class="keywordtype">double</span> p_epsilon</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    )</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    {</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        m_name = p_name;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        m_metric = p_metric;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        m_algorithm = EAlgorithm.Iteration;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        m_iteration = p_iteration;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        m_epsilon = p_epsilon;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        m_updatestep = 1;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    }</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div>
<div class="line"><a name="l00124"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.htm#ac6583b4ccefcb04fa003f68fb1afaf83">  124</a></span>&#160;    <span class="keyword">public</span> Double <a class="code" href="../../d7/df7/a00058.htm#ac6583b4ccefcb04fa003f68fb1afaf83">getInconsistencyValue</a>( <span class="keyword">final</span> T p_object )</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    {</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="keywordflow">return</span> m_data.get( p_object );</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    }</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">     * adds a new object to the</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">     * inconsistency structure</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">     * @param p_object new object</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00135"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.htm#abfaa3c6f74dd4c988086315aaf909eff">  135</a></span>&#160;    <span class="keyword">public</span> <span class="keywordtype">boolean</span> <a class="code" href="../../d7/df7/a00058.htm#abfaa3c6f74dd4c988086315aaf909eff">add</a>( <span class="keyword">final</span> T p_object )</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    {</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="keywordflow">if</span> ( ( p_object == null ) || ( m_data.containsKey( p_object ) ) )</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        m_data.put( p_object, <span class="keyword">new</span> Double( 0 ) );</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    }</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    @Override</div>
<div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.htm#a421652b8de4ff68a2b73be5b9fa4c261">  145</a></span>&#160;    <span class="keyword">public</span> <span class="keywordtype">int</span> <a class="code" href="../../d7/df7/a00058.htm#a421652b8de4ff68a2b73be5b9fa4c261">getCalculationIndex</a>()</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    {</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <span class="keywordflow">return</span> 500;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    }</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">     * @bug run it parallel stream</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    @Override</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    @<a class="code" href="../../d7/d9a/a00152.htm#d1/d8b/a00406">IBenchmark</a></div>
<div class="line"><a name="l00155"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.htm#afecd2c275d8218a90860a552e1babecd">  155</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/df7/a00058.htm#afecd2c275d8218a90860a552e1babecd">step</a>( <span class="keyword">final</span> <span class="keywordtype">int</span> p_currentstep, <span class="keyword">final</span> <a class="code" href="../../dd/da7/a00168.htm">ILayer</a> p_layer )</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    {</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <span class="keywordflow">if</span> ( ( m_data.size() &lt; 2 ) || ( p_currentstep % m_updatestep != 0 ) )</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <span class="comment">// get key list of map for addressing elements in the correct order</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <span class="keyword">final</span> ArrayList&lt;T&gt; l_keys = <span class="keyword">new</span> ArrayList&lt;T&gt;( m_data.keySet() );</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <span class="comment">// calculate markov chain transition matrix</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <span class="keyword">final</span> DoubleMatrix2D l_matrix = <span class="keyword">new</span> DenseDoubleMatrix2D( m_data.size(), m_data.size() );</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="keywordflow">for</span> ( <span class="keywordtype">int</span> i = 0; i &lt; l_keys.size(); ++i )</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        {</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            <span class="keyword">final</span> T l_item = l_keys.get( i );</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            <span class="keywordflow">for</span> ( <span class="keywordtype">int</span> j = i + 1; j &lt; l_keys.size(); ++j )</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            {</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                <span class="keyword">final</span> <span class="keywordtype">double</span> l_value = this.getMetricValue( l_item, l_keys.get( j ) );</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                l_matrix.setQuick( i, j, l_value );</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                l_matrix.setQuick( j, i, l_value );</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            }</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            <span class="comment">// row-wise normalization for getting probabilities</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            <span class="keyword">final</span> <span class="keywordtype">double</span> l_norm = c_algebra.norm1( l_matrix.viewRow( i ) );</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            <span class="keywordflow">if</span> ( l_norm != 0 )</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                l_matrix.viewRow( i ).assign( Mult.div( l_norm ) );</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;            <span class="comment">// set epsilon slope for preventing periodic markov chains</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            l_matrix.setQuick( i, i, m_epsilon );</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        }</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        <span class="keyword">final</span> DoubleMatrix1D l_eigenvector;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <span class="keywordflow">if</span> ( l_matrix.zSum() &lt;= m_data.size() * m_epsilon )</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            l_eigenvector = <span class="keyword">new</span> DenseDoubleMatrix1D( m_data.size() );</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            l_eigenvector = this.getStationaryDistribution( l_matrix );</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <span class="comment">// set inconsistency value for each entry</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        <span class="keywordflow">for</span> ( <span class="keywordtype">int</span> i = 0; i &lt; l_keys.size(); ++i )</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            m_data.put( l_keys.get( i ), l_eigenvector.get( i ) );</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    }</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment">     * gets the current metric</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment">     * @return get metric</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00200"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.htm#aeebbb2797f376cddc5b970faf543912c">  200</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> IMetric&lt;T, CPath&gt; <a class="code" href="../../d7/df7/a00058.htm#aeebbb2797f376cddc5b970faf543912c">getMetric</a>()</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    {</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="keywordflow">return</span> m_metric;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    }</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment">     * sets the metric</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">     * @param p_metric metric</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00210"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.htm#ace0b003deb913291ee28b76d387507a2">  210</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/df7/a00058.htm#ace0b003deb913291ee28b76d387507a2">setMetric</a>( <span class="keyword">final</span> IMetric&lt;T, CPath&gt; p_metric )</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    {</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        m_metric = p_metric;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    }</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment">     * removes an object from the</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="comment">     * inconsistency structure</span></div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="comment">     * @param p_object removing object</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00221"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.htm#a33ef5549f878c96b7df4ccbfe3d1204a">  221</a></span>&#160;    <span class="keyword">public</span> <span class="keywordtype">boolean</span> <span class="keyword">remove</span>( <span class="keyword">final</span> T p_object )</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    {</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        m_data.remove( p_object );</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    }</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    @Override</div>
<div class="line"><a name="l00228"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.htm#a65ee9ed53e9c8e706bd8d0afcad3ce91">  228</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> String <a class="code" href="../../d7/df7/a00058.htm#a65ee9ed53e9c8e706bd8d0afcad3ce91">toString</a>()</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    {</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <span class="keywordflow">return</span> m_name;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    }</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment">     * get the largest eigen vector with QR decomposition</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="comment">     * @param p_matrix matrix</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="comment">     * @return largest eigenvector (not normalized)</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00239"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.htm#a1118978c529410b93ee33428a81718e2">  239</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">static</span> DoubleMatrix1D <a class="code" href="../../d7/df7/a00058.htm#a1118978c529410b93ee33428a81718e2">getLargestEigenvector</a>( <span class="keyword">final</span> DoubleMatrix2D p_matrix )</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    {</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        <span class="keyword">final</span> EigenvalueDecomposition l_eigen = <span class="keyword">new</span> EigenvalueDecomposition( p_matrix );</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        <span class="comment">// gets the position of the largest eigenvalue</span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        <span class="keyword">final</span> DoubleMatrix1D l_eigenvalues = l_eigen.getRealEigenvalues();</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        <span class="keywordtype">int</span> l_position = 0;</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        <span class="keywordflow">for</span> ( <span class="keywordtype">int</span> i = 0; i &lt; l_eigenvalues.size(); ++i )</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            <span class="keywordflow">if</span> ( l_eigenvalues.get( i ) &gt; l_eigenvalues.get( l_position ) )</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                l_position = i;</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="comment">// gets the largest eigenvector</span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        <span class="keywordflow">return</span> l_eigen.getV().viewColumn( l_position );</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    }</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="comment">     * get the largest eigen vector based on the perron-frobenius theorem</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="comment">     * @param p_matrix matrix</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment">     * @param p_iteration number of iterations</span></div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="comment">     * @return largest eigenvector (not normalized)</span></div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="comment">     * @see http://en.wikipedia.org/wiki/Perron%E2%80%93Frobenius_theorem</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00264"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.htm#ad1ac52f88851eed18f835fa4002368cc">  264</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">static</span> DoubleMatrix1D <a class="code" href="../../d7/df7/a00058.htm#ad1ac52f88851eed18f835fa4002368cc">getLargestEigenvector</a>( <span class="keyword">final</span> DoubleMatrix2D p_matrix, <span class="keyword">final</span> <span class="keywordtype">int</span> p_iteration )</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    {</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        DoubleMatrix1D l_probability = DoubleFactory1D.dense.random( p_matrix.rows() );</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        <span class="keywordflow">for</span> ( <span class="keywordtype">int</span> i = 0; i &lt; p_iteration; ++i )</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        {</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;            l_probability = c_algebra.mult( p_matrix, l_probability );</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;            l_probability.assign(</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                    Mult.div(</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                            c_algebra.norm2( l_probability )</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                    )</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;            );</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        }</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        <span class="keywordflow">return</span> l_probability;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    }</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="comment">     * returns metric value</span></div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="comment">     * @param p_first</span></div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="comment">     * @param p_second</span></div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="comment">     * @return</span></div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00287"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.htm#a0a15504e4cd0628c3372b6534729f05d">  287</a></span>&#160;    <span class="keyword">private</span> <span class="keywordtype">double</span> <a class="code" href="../../d7/df7/a00058.htm#a0a15504e4cd0628c3372b6534729f05d">getMetricValue</a>( <span class="keyword">final</span> T p_first, <span class="keyword">final</span> T p_second )</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    {</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        <span class="keywordflow">if</span> ( p_first.equals( p_second ) )</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        <span class="keywordflow">return</span> m_metric.calculate( p_first, p_second );</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    }</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="comment">     * calculates the stationary distribution</span></div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="comment">     * @param p_matrix transition matrix</span></div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="comment">     * @return stationary distribution</span></div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    @<a class="code" href="../../d7/d9a/a00152.htm#d1/d8b/a00406">IBenchmark</a></div>
<div class="line"><a name="l00302"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.htm#ad9b3cea71757085d68f56d4e34a28e59">  302</a></span>&#160;    <span class="keyword">private</span> DoubleMatrix1D <a class="code" href="../../d7/df7/a00058.htm#ad9b3cea71757085d68f56d4e34a28e59">getStationaryDistribution</a>( <span class="keyword">final</span> DoubleMatrix2D p_matrix )</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    {</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;        <span class="keyword">final</span> DoubleMatrix1D l_eigenvector;</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        <span class="keywordflow">switch</span> ( m_algorithm )</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        {</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;            <span class="keywordflow">case</span> Iteration:</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;                l_eigenvector = getLargestEigenvector( p_matrix, m_iteration );</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;            <span class="keywordflow">case</span> Numeric:</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;                l_eigenvector = getLargestEigenvector( p_matrix );</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;            <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> IllegalStateException( <a class="code" href="../../d1/dc6/a00037.htm">CCommon</a>.<a class="code" href="../../d1/dc6/a00037.htm#ae523069a1b523b0e6a0c643049b1d745">getResourceString</a>( CInconsistencyLayer.class, <span class="stringliteral">&quot;algorithm&quot;</span> ) );</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;        }</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;        <span class="comment">// normalize eigenvector and create positiv oriantation</span></div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        l_eigenvector.assign( Mult.div( c_algebra.norm1( l_eigenvector ) ) );</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;        l_eigenvector.assign(</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                <span class="keyword">new</span> DoubleFunction()</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                {</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                    @Override</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                    <span class="keyword">public</span> <span class="keywordtype">double</span> apply( <span class="keyword">final</span> <span class="keywordtype">double</span> p_value )</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;                    {</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                        <span class="keywordflow">return</span> Math.abs( p_value );</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                    }</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                }</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        );</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        <span class="keywordflow">return</span> l_eigenvector;</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    }</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="comment">     * numeric algorithm structure</span></div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00339"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.htm">  339</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">enum</span> EAlgorithm</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    {<span class="comment"></span></div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="comment">        /**</span></div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="comment">         * use numeric algorithm (QR decomposition)</span></div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="comment">         **/</span></div>
<div class="line"><a name="l00344"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.htm#a5e387dc6d14d27c68a9211cf17043076">  344</a></span>&#160;        <a class="code" href="../../d7/df7/a00058.htm#a5e387dc6d14d27c68a9211cf17043076">Numeric</a>,<span class="comment"></span></div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;<span class="comment">        /**</span></div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="comment">         * use stochastic algorithm (fixpoint iteration)</span></div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="comment">         **/</span></div>
<div class="line"><a name="l00348"></a><span class="lineno"><a class="line" href="../../d7/df7/a00058.htm#abc57d16e49cbaa558d765e077b3ad31c">  348</a></span>&#160;        Iteration</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    }</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;}</div>
<div class="ttc" id="a00152_htm_d1/d8b/a00406"><div class="ttname"><a href="../../d7/d9a/a00152.htm#d1/d8b/a00406">de.tu_clausthal.in.mec.runtime.benchmark.IBenchmark</a></div><div class="ttdoc">interface for benchmarking methods </div><div class="ttdef"><b>Definition:</b> <a href="../../da/de0/a00317_source.htm#l00036">IBenchmark.java:36</a></div></div>
<div class="ttc" id="a00058_htm_a1118978c529410b93ee33428a81718e2"><div class="ttname"><a href="../../d7/df7/a00058.htm#a1118978c529410b93ee33428a81718e2">de.tu_clausthal.in.mec.object.mas.inconsistency.CInconsistencyLayer&lt; T extends IAgent &gt;.getLargestEigenvector</a></div><div class="ttdeci">static DoubleMatrix1D getLargestEigenvector(final DoubleMatrix2D p_matrix)</div><div class="ttdoc">get the largest eigen vector with QR decomposition </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d1f/a00247_source.htm#l00239">CInconsistencyLayer.java:239</a></div></div>
<div class="ttc" id="a00058_htm_aeebbb2797f376cddc5b970faf543912c"><div class="ttname"><a href="../../d7/df7/a00058.htm#aeebbb2797f376cddc5b970faf543912c">de.tu_clausthal.in.mec.object.mas.inconsistency.CInconsistencyLayer&lt; T extends IAgent &gt;.getMetric</a></div><div class="ttdeci">final IMetric&lt; T, CPath &gt; getMetric()</div><div class="ttdoc">gets the current metric </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d1f/a00247_source.htm#l00200">CInconsistencyLayer.java:200</a></div></div>
<div class="ttc" id="a00037_htm"><div class="ttname"><a href="../../d1/dc6/a00037.htm">de.tu_clausthal.in.mec.common.CCommon</a></div><div class="ttdoc">class for any helper calls </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00060">common/CCommon.java:60</a></div></div>
<div class="ttc" id="a00058_htm_a5992ffd02b63591ef6d3dca4618f1037"><div class="ttname"><a href="../../d7/df7/a00058.htm#a5992ffd02b63591ef6d3dca4618f1037">de.tu_clausthal.in.mec.object.mas.inconsistency.CInconsistencyLayer&lt; T extends IAgent &gt;.m_algorithm</a></div><div class="ttdeci">final EAlgorithm m_algorithm</div><div class="ttdoc">algorithm to calculate stationary probability </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d1f/a00247_source.htm#l00062">CInconsistencyLayer.java:62</a></div></div>
<div class="ttc" id="a00058_htm_a5c34683320f648da27c2864646b3b941"><div class="ttname"><a href="../../d7/df7/a00058.htm#a5c34683320f648da27c2864646b3b941">de.tu_clausthal.in.mec.object.mas.inconsistency.CInconsistencyLayer&lt; T extends IAgent &gt;.CInconsistencyLayer</a></div><div class="ttdeci">CInconsistencyLayer(final String p_name, final IMetric&lt; T, CPath &gt; p_metric, final int p_iteration, final double p_epsilon)</div><div class="ttdoc">ctor - use stochastic algorithm </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d1f/a00247_source.htm#l00112">CInconsistencyLayer.java:112</a></div></div>
<div class="ttc" id="a00186_htm"><div class="ttname"><a href="../../d8/d00/a00186.htm">de.tu_clausthal.in.mec.object.ISingleEvaluateLayer</a></div><div class="ttdoc">layer for any calculation atomic task without visibility </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/dc6/a00347_source.htm#l00033">ISingleEvaluateLayer.java:33</a></div></div>
<div class="ttc" id="a00058_htm_ab7562f8a7e6c15006195dcd29a3b86c2"><div class="ttname"><a href="../../d7/df7/a00058.htm#ab7562f8a7e6c15006195dcd29a3b86c2">de.tu_clausthal.in.mec.object.mas.inconsistency.CInconsistencyLayer&lt; T extends IAgent &gt;.m_updatestep</a></div><div class="ttdeci">final int m_updatestep</div><div class="ttdoc">update of the metric values </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d1f/a00247_source.htm#l00086">CInconsistencyLayer.java:86</a></div></div>
<div class="ttc" id="a00058_htm_a65ee9ed53e9c8e706bd8d0afcad3ce91"><div class="ttname"><a href="../../d7/df7/a00058.htm#a65ee9ed53e9c8e706bd8d0afcad3ce91">de.tu_clausthal.in.mec.object.mas.inconsistency.CInconsistencyLayer&lt; T extends IAgent &gt;.toString</a></div><div class="ttdeci">final String toString()</div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d1f/a00247_source.htm#l00228">CInconsistencyLayer.java:228</a></div></div>
<div class="ttc" id="a00058_htm_a5e387dc6d14d27c68a9211cf17043076"><div class="ttname"><a href="../../d7/df7/a00058.htm#a5e387dc6d14d27c68a9211cf17043076">de.tu_clausthal.in.mec.object.mas.inconsistency.CInconsistencyLayer&lt; T extends IAgent &gt;.EAlgorithm.Numeric</a></div><div class="ttdeci">Numeric</div><div class="ttdoc">use numeric algorithm (QR decomposition) </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d1f/a00247_source.htm#l00344">CInconsistencyLayer.java:344</a></div></div>
<div class="ttc" id="a00058_htm_ab55420a725145f9f3de50916fe1ab461"><div class="ttname"><a href="../../d7/df7/a00058.htm#ab55420a725145f9f3de50916fe1ab461">de.tu_clausthal.in.mec.object.mas.inconsistency.CInconsistencyLayer&lt; T extends IAgent &gt;.CInconsistencyLayer</a></div><div class="ttdeci">CInconsistencyLayer(final String p_name, final IMetric&lt; T, CPath &gt; p_metric)</div><div class="ttdoc">ctor - use numeric algorithm </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d1f/a00247_source.htm#l00094">CInconsistencyLayer.java:94</a></div></div>
<div class="ttc" id="a00058_htm_ac6583b4ccefcb04fa003f68fb1afaf83"><div class="ttname"><a href="../../d7/df7/a00058.htm#ac6583b4ccefcb04fa003f68fb1afaf83">de.tu_clausthal.in.mec.object.mas.inconsistency.CInconsistencyLayer&lt; T extends IAgent &gt;.getInconsistencyValue</a></div><div class="ttdeci">Double getInconsistencyValue(final T p_object)</div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d1f/a00247_source.htm#l00124">CInconsistencyLayer.java:124</a></div></div>
<div class="ttc" id="a00058_htm_ace0b003deb913291ee28b76d387507a2"><div class="ttname"><a href="../../d7/df7/a00058.htm#ace0b003deb913291ee28b76d387507a2">de.tu_clausthal.in.mec.object.mas.inconsistency.CInconsistencyLayer&lt; T extends IAgent &gt;.setMetric</a></div><div class="ttdeci">final void setMetric(final IMetric&lt; T, CPath &gt; p_metric)</div><div class="ttdoc">sets the metric </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d1f/a00247_source.htm#l00210">CInconsistencyLayer.java:210</a></div></div>
<div class="ttc" id="a00037_htm_ae523069a1b523b0e6a0c643049b1d745"><div class="ttname"><a href="../../d1/dc6/a00037.htm#ae523069a1b523b0e6a0c643049b1d745">de.tu_clausthal.in.mec.common.CCommon.getResourceString</a></div><div class="ttdeci">static String getResourceString(final Class&lt;?&gt; p_class, final String p_label, final Object...p_parameter)</div><div class="ttdoc">returns a default string of the resource file </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00335">common/CCommon.java:335</a></div></div>
<div class="ttc" id="a00058_htm_a99d5f89b89232137c13fdfbfbe1a3075"><div class="ttname"><a href="../../d7/df7/a00058.htm#a99d5f89b89232137c13fdfbfbe1a3075">de.tu_clausthal.in.mec.object.mas.inconsistency.CInconsistencyLayer&lt; T extends IAgent &gt;.m_iteration</a></div><div class="ttdeci">final int m_iteration</div><div class="ttdoc">number of iterations of the stochastic algorithm </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d1f/a00247_source.htm#l00074">CInconsistencyLayer.java:74</a></div></div>
<div class="ttc" id="a00058_htm_abfaa3c6f74dd4c988086315aaf909eff"><div class="ttname"><a href="../../d7/df7/a00058.htm#abfaa3c6f74dd4c988086315aaf909eff">de.tu_clausthal.in.mec.object.mas.inconsistency.CInconsistencyLayer&lt; T extends IAgent &gt;.add</a></div><div class="ttdeci">boolean add(final T p_object)</div><div class="ttdoc">adds a new object to the inconsistency structure </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d1f/a00247_source.htm#l00135">CInconsistencyLayer.java:135</a></div></div>
<div class="ttc" id="a00168_htm"><div class="ttname"><a href="../../dd/da7/a00168.htm">de.tu_clausthal.in.mec.object.ILayer</a></div><div class="ttdoc">interface of the layer </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/dbb/a00330_source.htm#l00033">ILayer.java:33</a></div></div>
<div class="ttc" id="a00094_htm"><div class="ttname"><a href="../../dc/d54/a00094.htm">de.tu_clausthal.in.mec.common.CPath</a></div><div class="ttdoc">class to create a path structure </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00044">CPath.java:44</a></div></div>
<div class="ttc" id="a00058_htm_a0a15504e4cd0628c3372b6534729f05d"><div class="ttname"><a href="../../d7/df7/a00058.htm#a0a15504e4cd0628c3372b6534729f05d">de.tu_clausthal.in.mec.object.mas.inconsistency.CInconsistencyLayer&lt; T extends IAgent &gt;.getMetricValue</a></div><div class="ttdeci">double getMetricValue(final T p_first, final T p_second)</div><div class="ttdoc">returns metric value </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d1f/a00247_source.htm#l00287">CInconsistencyLayer.java:287</a></div></div>
<div class="ttc" id="a00058_htm_add22e3a9f425d3c06d10f51af3da91f5"><div class="ttname"><a href="../../d7/df7/a00058.htm#add22e3a9f425d3c06d10f51af3da91f5">de.tu_clausthal.in.mec.object.mas.inconsistency.CInconsistencyLayer&lt; T extends IAgent &gt;.m_epsilon</a></div><div class="ttdeci">final double m_epsilon</div><div class="ttdoc">epsilon value to create an aperiodic markow-chain </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d1f/a00247_source.htm#l00070">CInconsistencyLayer.java:70</a></div></div>
<div class="ttc" id="a00058_htm_a421652b8de4ff68a2b73be5b9fa4c261"><div class="ttname"><a href="../../d7/df7/a00058.htm#a421652b8de4ff68a2b73be5b9fa4c261">de.tu_clausthal.in.mec.object.mas.inconsistency.CInconsistencyLayer&lt; T extends IAgent &gt;.getCalculationIndex</a></div><div class="ttdeci">int getCalculationIndex()</div><div class="ttdoc">returns an index value to defining an order for calculation </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d1f/a00247_source.htm#l00145">CInconsistencyLayer.java:145</a></div></div>
<div class="ttc" id="a00058_htm_ad1ac52f88851eed18f835fa4002368cc"><div class="ttname"><a href="../../d7/df7/a00058.htm#ad1ac52f88851eed18f835fa4002368cc">de.tu_clausthal.in.mec.object.mas.inconsistency.CInconsistencyLayer&lt; T extends IAgent &gt;.getLargestEigenvector</a></div><div class="ttdeci">static DoubleMatrix1D getLargestEigenvector(final DoubleMatrix2D p_matrix, final int p_iteration)</div><div class="ttdoc">get the largest eigen vector based on the perron-frobenius theorem </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d1f/a00247_source.htm#l00264">CInconsistencyLayer.java:264</a></div></div>
<div class="ttc" id="a00058_htm_ab8f9628b635025451f5658364e0a20d2"><div class="ttname"><a href="../../d7/df7/a00058.htm#ab8f9628b635025451f5658364e0a20d2">de.tu_clausthal.in.mec.object.mas.inconsistency.CInconsistencyLayer&lt; T extends IAgent &gt;.m_metric</a></div><div class="ttdeci">IMetric&lt; T, CPath &gt; m_metric</div><div class="ttdoc">metric object to create the value of two objects </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d1f/a00247_source.htm#l00078">CInconsistencyLayer.java:78</a></div></div>
<div class="ttc" id="a00058_htm_afecd2c275d8218a90860a552e1babecd"><div class="ttname"><a href="../../d7/df7/a00058.htm#afecd2c275d8218a90860a552e1babecd">de.tu_clausthal.in.mec.object.mas.inconsistency.CInconsistencyLayer&lt; T extends IAgent &gt;.step</a></div><div class="ttdeci">final void step(final int p_currentstep, final ILayer p_layer)</div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d1f/a00247_source.htm#l00155">CInconsistencyLayer.java:155</a></div></div>
<div class="ttc" id="a00058_htm_ad9b3cea71757085d68f56d4e34a28e59"><div class="ttname"><a href="../../d7/df7/a00058.htm#ad9b3cea71757085d68f56d4e34a28e59">de.tu_clausthal.in.mec.object.mas.inconsistency.CInconsistencyLayer&lt; T extends IAgent &gt;.getStationaryDistribution</a></div><div class="ttdeci">DoubleMatrix1D getStationaryDistribution(final DoubleMatrix2D p_matrix)</div><div class="ttdoc">calculates the stationary distribution </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d1f/a00247_source.htm#l00302">CInconsistencyLayer.java:302</a></div></div>
<div class="ttc" id="a00058_htm_a6f3699c574beef6f311973673e4b3382"><div class="ttname"><a href="../../d7/df7/a00058.htm#a6f3699c574beef6f311973673e4b3382">de.tu_clausthal.in.mec.object.mas.inconsistency.CInconsistencyLayer&lt; T extends IAgent &gt;.m_name</a></div><div class="ttdeci">final String m_name</div><div class="ttdoc">name of the layer </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d1f/a00247_source.htm#l00082">CInconsistencyLayer.java:82</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div id = "nav-path" class = "navpath" >
    <ul >
        <li >
            <a href = "https://github.com/flashpixx/MecSim" >MecSim - Traffic Simulation</a ></li >
    </ul >
</div >
