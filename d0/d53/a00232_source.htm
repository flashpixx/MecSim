<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<title>MecSim - Traffic Simulation: CCommon.java Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.js", "TeX/AMSsymbols.js", "TeX/MathTools.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../layout.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">MecSim - Traffic Simulation
   </div>
   <div id="projectbrief">micro traffic simulation with layered world structure</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.6 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../namespaces.htm"><span>Packages</span></a></li>
      <li><a href="../../annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.htm"><span>File&#160;List</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d0/d53/a00232_source.htm','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">common/CCommon.java</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d0/d53/a00232.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * @cond LICENSE</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * ######################################################################################</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * # GPL License                                                                        #</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * #                                                                                    #</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * # This file is part of the micro agent-based traffic simulation MecSim of            #</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * # Clausthal University of Technology - Mobile and Enterprise Computing               #</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * # Copyright (c) 2014-15, Philipp Kraus (philipp.kraus@tu-clausthal.de)               #</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * # This program is free software: you can redistribute it and/or modify               #</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * # it under the terms of the GNU General Public License as                            #</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * # published by the Free Software Foundation, either version 3 of the                 #</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * # License, or (at your option) any later version.                                    #</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * #                                                                                    #</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * # This program is distributed in the hope that it will be useful,                    #</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * # but WITHOUT ANY WARRANTY; without even the implied warranty of                     #</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                      #</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * # GNU General Public License for more details.                                       #</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * #                                                                                    #</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * # You should have received a copy of the GNU General Public License                  #</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * # along with this program. If not, see http://www.gnu.org/licenses/                  #</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * ######################################################################################</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * @endcond</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">package </span>de.tu_clausthal.in.mec.common;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">import</span> com.fasterxml.jackson.databind.SerializationFeature;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">import</span> com.github.drapostolos.typeparser.TypeParser;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">import</span> com.github.drapostolos.typeparser.TypeParserException;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d3a/a00040.htm">de.tu_clausthal.in.mec.CConfiguration</a>;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">import</span> <a class="code" href="../../d0/d89/a00071.htm">de.tu_clausthal.in.mec.CLogger</a>;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">import</span> java.io.ByteArrayInputStream;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">import</span> java.io.ByteArrayOutputStream;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">import</span> java.io.File;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">import</span> java.io.IOException;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">import</span> java.io.ObjectInputStream;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">import</span> java.io.ObjectOutputStream;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">import</span> java.lang.management.ManagementFactory;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">import</span> java.lang.reflect.Array;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">import</span> java.net.MalformedURLException;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">import</span> java.net.URISyntaxException;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">import</span> java.net.URL;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">import</span> java.nio.file.Files;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">import</span> java.nio.file.Paths;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">import</span> java.security.MessageDigest;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">import</span> java.text.MessageFormat;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">import</span> java.util.Collection;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">import</span> java.util.HashMap;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keyword">import</span> java.util.LinkedList;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keyword">import</span> java.util.List;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keyword">import</span> java.util.Map;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keyword">import</span> java.util.MissingResourceException;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment"> * class for any helper calls</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="../../d1/dc6/a00037.htm">   60</a></span>&#160;<span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class </span><a class="code" href="../../d1/dc6/a00037.htm">CCommon</a></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;{<span class="comment"></span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">     * gigabyte multiplier</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="../../d1/dc6/a00037.htm#a199dc1d11e3846f111b558acde15084a">   65</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keywordtype">long</span> <a class="code" href="../../d1/dc6/a00037.htm#a199dc1d11e3846f111b558acde15084a">c_gigabyte</a> = 1024 * 1024 * 1024;<span class="comment"></span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">     * needed memory in gigabyte</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="../../d1/dc6/a00037.htm#a71926e61b2a6ec2a7ab5f1ce9e56dd83">   69</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keywordtype">float</span> <a class="code" href="../../d1/dc6/a00037.htm#a71926e61b2a6ec2a7ab5f1ce9e56dd83">c_neededmemory</a> = 3f;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">     * private ctor - avoid instantiation</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="../../d1/dc6/a00037.htm#a291444b02383bd8391dcc31d05ac97b9">   75</a></span>&#160;    <span class="keyword">private</span> <a class="code" href="../../d1/dc6/a00037.htm#a291444b02383bd8391dcc31d05ac97b9">CCommon</a>()</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    {</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    }</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">     * checkes the VM structures on startup</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">     * @return list with all error / warning information</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="../../d1/dc6/a00037.htm#a935b928bad47cf1f12909a4dbddadfc9">   84</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;String&gt; <a class="code" href="../../d1/dc6/a00037.htm#a935b928bad47cf1f12909a4dbddadfc9">startupchecks</a>()</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    {</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keyword">final</span> List&lt;String&gt; l_return = <span class="keyword">new</span> LinkedList&lt;&gt;();</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="comment">// check VM arguments</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <span class="keyword">final</span> List&lt;String&gt; l_argumentlist = ManagementFactory.getRuntimeMXBean().getInputArguments();</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="keywordflow">for</span> ( <span class="keyword">final</span> String l_checkargument : <span class="keyword">new</span> String[]{<span class="stringliteral">&quot;-Xmx&quot;</span>, <span class="stringliteral">&quot;-XX:+UseParallelGC&quot;</span>} )</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        {</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            <span class="keywordtype">boolean</span> l_found = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            <span class="keywordflow">for</span> ( <span class="keyword">final</span> String l_vmargument : l_argumentlist )</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                <span class="keywordflow">if</span> ( l_vmargument.startsWith( l_checkargument ) )</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                {</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                    l_found = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                }</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            <span class="keywordflow">if</span> ( !l_found )</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                l_return.add( CCommon.getResourceString( CCommon.class, <span class="stringliteral">&quot;vmargumentmissing&quot;</span>, l_checkargument ) );</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        }</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="comment">// check memory usage</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="keywordflow">if</span> ( Runtime.getRuntime().maxMemory() / <a class="code" href="../../d1/dc6/a00037.htm#a199dc1d11e3846f111b558acde15084a">c_gigabyte</a> &lt; <a class="code" href="../../d1/dc6/a00037.htm#a71926e61b2a6ec2a7ab5f1ce9e56dd83">c_neededmemory</a> )</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            l_return.add( CCommon.getResourceString( CCommon.class, <span class="stringliteral">&quot;memory&quot;</span>, <a class="code" href="../../d1/dc6/a00037.htm#a71926e61b2a6ec2a7ab5f1ce9e56dd83">c_neededmemory</a>, Runtime.getRuntime().maxMemory() / <a class="code" href="../../d1/dc6/a00037.htm#a199dc1d11e3846f111b558acde15084a">c_gigabyte</a> ) );</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="keywordflow">return</span> l_return;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    }</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">     * adds a file extension if necessary</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">     * @param p_file file object</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">     * @param p_suffix suffix</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">     * @return file with extension</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="../../d1/dc6/a00037.htm#a88f0055c788b2bf9a609ae9f25074b7c">  118</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> File <a class="code" href="../../d1/dc6/a00037.htm#a88f0055c788b2bf9a609ae9f25074b7c">addFileExtension</a>( <span class="keyword">final</span> File p_file, <span class="keyword">final</span> String p_suffix )</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    {</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="keywordflow">return</span> ( p_file.getAbsolutePath().endsWith( p_suffix ) ) ? p_file : <span class="keyword">new</span> File( p_file + p_suffix );</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    }</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">     * concats an URL with a path</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">     * @param p_base base URL</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">     * @param p_string additional path</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">     * @return new URL</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">     * @throws URISyntaxException thrown on syntax error</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">     * @throws MalformedURLException thrown on malformat</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="../../d1/dc6/a00037.htm#ada7f4b02ac1f1ddd566a2663e22ebd6c">  133</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> URL <a class="code" href="../../d1/dc6/a00037.htm#ada7f4b02ac1f1ddd566a2663e22ebd6c">concatURL</a>( <span class="keyword">final</span> URL p_base, <span class="keyword">final</span> String p_string ) <span class="keywordflow">throws</span> MalformedURLException, URISyntaxException</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    {</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">new</span> URL( p_base.toString() + p_string ).toURI().normalize().toURL();</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    }</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">     * converts any collection type into a typed array</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">     * @param p_class class array</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">     * @param p_collection collection</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">     * @return typed array</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">     * @tparam T collection / array type</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00147"></a><span class="lineno"><a class="line" href="../../d1/dc6/a00037.htm#a5998eb7de6fcc4bf4ab1d65fe72300e0">  147</a></span>&#160;    <span class="keyword">public</span> static &lt;T&gt; T[] <a class="code" href="../../d1/dc6/a00037.htm#a5998eb7de6fcc4bf4ab1d65fe72300e0">convertCollectionToArray</a>( <span class="keyword">final</span> Class&lt;T[]&gt; p_class, <span class="keyword">final</span> Collection&lt;T&gt; p_collection )</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    {</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <span class="keyword">final</span> T[] l_return = p_class.cast( Array.newInstance( p_class.getComponentType(), p_collection.size() ) );</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        p_collection.toArray( l_return );</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        <span class="keywordflow">return</span> l_return;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    }</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment">     * converts a value into class</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment">     * @param p_value string input class</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">     * @param p_types type classes</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">     * @param p_parser type parser</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">     * @return converted type</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="../../d1/dc6/a00037.htm#a45d8cb39014dc68dba09762a89d6d6b7">  162</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> Object <a class="code" href="../../d1/dc6/a00037.htm#a45d8cb39014dc68dba09762a89d6d6b7">convertValue</a>( <span class="keyword">final</span> String p_value, <span class="keyword">final</span> Class[] p_types, <span class="keyword">final</span> TypeParser p_parser )</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    {</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <span class="keywordflow">for</span> ( <span class="keyword">final</span> Class l_class : p_types )</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            <span class="keywordflow">try</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            {</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                <span class="keywordflow">return</span> p_parser.parseType( p_value, l_class );</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            }</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            <span class="keywordflow">catch</span> ( <span class="keyword">final</span> TypeParserException l_exception )</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            {</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            }</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        <span class="keywordflow">return</span> p_value;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    }</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment">     * create a deep-copy of a serializable object</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">     * @param p_object input object</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment">     * @return deep-copy of object</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment">     * @throws IOException throws on serializing error</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="comment">     * @throws ClassNotFoundException throws on derserialzing error</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment">     * @tparam T object type</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00186"></a><span class="lineno"><a class="line" href="../../d1/dc6/a00037.htm#af1fa68ea256265893067e7c5c855c385">  186</a></span>&#160;    <span class="keyword">public</span> static &lt;T&gt; T <a class="code" href="../../d1/dc6/a00037.htm#af1fa68ea256265893067e7c5c855c385">deepCopy</a>( <span class="keyword">final</span> T p_object ) <span class="keywordflow">throws</span> IOException, ClassNotFoundException</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    {</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        <span class="keyword">final</span> ByteArrayOutputStream l_transfer = <span class="keyword">new</span> ByteArrayOutputStream();</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <span class="keyword">final</span> ObjectOutputStream l_input = <span class="keyword">new</span> ObjectOutputStream( l_transfer );</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        l_input.writeObject( p_object );</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        l_input.flush();</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        <span class="keyword">final</span> ObjectInputStream l_output = <span class="keyword">new</span> ObjectInputStream( <span class="keyword">new</span> ByteArrayInputStream( l_transfer.toByteArray() ) );</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        <span class="keywordflow">return</span> (T) l_output.readObject();</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    }</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment">     * converts a Json string data into a raw map</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment">     * @return raw map data</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00203"></a><span class="lineno"><a class="line" href="../../d1/dc6/a00037.htm#aea56afab03d42ff16d731ae7b33c785d">  203</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, Object&gt; <a class="code" href="../../d1/dc6/a00037.htm#aea56afab03d42ff16d731ae7b33c785d">fromJson</a>( <span class="keyword">final</span> String p_data )</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    {</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../d1/dc6/a00037.htm#aea56afab03d42ff16d731ae7b33c785d">fromJson</a>( p_data, Map.class );</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    }</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment">     * converts a Json string into any class object</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment">     * @param p_data string data</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment">     * @param p_class class type</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment">     * @return deserialized type</span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="comment">     * @tparam T type parameter</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00217"></a><span class="lineno"><a class="line" href="../../d1/dc6/a00037.htm#a92af93908ffba0d4e9ef8c62cd4b53d2">  217</a></span>&#160;    <span class="keyword">public</span> static &lt;T&gt; T <a class="code" href="../../d1/dc6/a00037.htm#a92af93908ffba0d4e9ef8c62cd4b53d2">fromJson</a>( <span class="keyword">final</span> String p_data, <span class="keyword">final</span> Class&lt;T&gt; p_class )</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    {</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        <span class="keywordflow">try</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        {</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">new</span> ObjectMapper().readValue( p_data, p_class );</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        }</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        <span class="keywordflow">catch</span> ( <span class="keyword">final</span> IOException l_exception )</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        {</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            CLogger.error( l_exception );</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        }</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        <span class="keywordflow">return</span> null;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    }</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="comment">     * checks a value and returns the checkd value or the default value</span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment">     * @param p_input unchecked value</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="comment">     * @param p_default default value</span></div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="comment">     * @param p_allowedvalues allowed values</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="comment">     * @return checked value</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="comment">     * @tparam T              value type</span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00241"></a><span class="lineno"><a class="line" href="../../d1/dc6/a00037.htm#a296de9b4126126a80fe2a0dda01d5c04">  241</a></span>&#160;    <span class="keyword">public</span> static &lt;T&gt; T <a class="code" href="../../d1/dc6/a00037.htm#a296de9b4126126a80fe2a0dda01d5c04">getCheckedValue</a>( <span class="keyword">final</span> T p_input, <span class="keyword">final</span> T p_default, <span class="keyword">final</span> Collection&lt;T&gt; p_allowedvalues )</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    {</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        <span class="keywordflow">if</span> ( p_input == null )</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;            <span class="keywordflow">return</span> p_default;</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        <span class="keywordflow">for</span> ( <span class="keyword">final</span> T l_item : p_allowedvalues )</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;            <span class="keywordflow">if</span> ( p_input.equals( l_item ) )</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                <span class="keywordflow">return</span> l_item;</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        <span class="keywordflow">return</span> p_default;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    }</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="comment">     * returns the hash of a string</span></div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="comment">     * @param p_string input string</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="comment">     * @param p_hash hash algorithm</span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="comment">     * @return hexadecimal hash value</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00260"></a><span class="lineno"><a class="line" href="../../d1/dc6/a00037.htm#a5787f1e254c47dda5783aff04de599fd">  260</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> String <a class="code" href="../../d1/dc6/a00037.htm#a5787f1e254c47dda5783aff04de599fd">getHash</a>( <span class="keyword">final</span> String p_string, <span class="keyword">final</span> String p_hash )</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    {</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        <span class="keywordflow">try</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        {</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="../../d1/dc6/a00037.htm#a7fac266bb9fa6b3a8d739a88a41dade8">getBytes2Hex</a>( MessageDigest.getInstance( p_hash ).digest( p_string.getBytes() ) );</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        }</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        <span class="keywordflow">catch</span> ( <span class="keyword">final</span> Exception l_exception )</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        {</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        }</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        <span class="keywordflow">return</span> null;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    }</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="comment">     * @param p_file input file</span></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="comment">     * @param p_hash hash algorithm</span></div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="comment">     * @return hexadecimal hash value</span></div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00278"></a><span class="lineno"><a class="line" href="../../d1/dc6/a00037.htm#ab7d16cc0f5759cdc917488e95494b338">  278</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> String <a class="code" href="../../d1/dc6/a00037.htm#ab7d16cc0f5759cdc917488e95494b338">getHash</a>( <span class="keyword">final</span> File p_file, <span class="keyword">final</span> String p_hash )</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    {</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        <span class="keywordflow">try</span></div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        {</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="../../d1/dc6/a00037.htm#a7fac266bb9fa6b3a8d739a88a41dade8">getBytes2Hex</a>( MessageDigest.getInstance( p_hash ).digest( Files.readAllBytes( Paths.get( p_file.toString() ) ) ) );</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        }</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        <span class="keywordflow">catch</span> ( <span class="keyword">final</span> Exception l_exception )</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        {</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        }</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        <span class="keywordflow">return</span> null;</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    }</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="comment">     * creates a map from parameters</span></div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="comment">     * @param p_objects list with pairs of string and object</span></div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="comment">     * @return map with data</span></div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00297"></a><span class="lineno"><a class="line" href="../../d1/dc6/a00037.htm#a2fe039d44210807a6460f3bcb4379743">  297</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, Object&gt; <a class="code" href="../../d1/dc6/a00037.htm#a2fe039d44210807a6460f3bcb4379743">getMap</a>( <span class="keyword">final</span> Object... p_objects )</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    {</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        <span class="keywordflow">if</span> ( p_objects.length % 2 != 0 )</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> IllegalArgumentException( <a class="code" href="../../d1/dc6/a00037.htm">CCommon</a>.<a class="code" href="../../d1/dc6/a00037.htm#ae523069a1b523b0e6a0c643049b1d745">getResourceString</a>( <a class="code" href="../../d1/dc6/a00037.htm">CCommon</a>.class, <span class="stringliteral">&quot;argumentsnoteven&quot;</span> ) );</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        String l_name = null;</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        <span class="keyword">final</span> Map&lt;String, Object&gt; l_return = <span class="keyword">new</span> HashMap&lt;&gt;();</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        <span class="keywordflow">for</span> ( <span class="keywordtype">int</span> i = 0; i &lt; p_objects.length; ++i )</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;            <span class="keywordflow">if</span> ( i % 2 == 0 )</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                l_name = (String) p_objects[i];</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;                l_return.put( l_name, p_objects[i] );</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        <span class="keywordflow">return</span> l_return;</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    }</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="comment">     * returns a default value of an empty string</span></div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="comment">     * @param p_input input value</span></div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="comment">     * @param p_default default value</span></div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="comment">     * @return string</span></div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00322"></a><span class="lineno"><a class="line" href="../../d1/dc6/a00037.htm#adda99dbeaefe91a3898a64f04ae2646b">  322</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> String <a class="code" href="../../d1/dc6/a00037.htm#adda99dbeaefe91a3898a64f04ae2646b">getNonEmptyValue</a>( <span class="keyword">final</span> String p_input, <span class="keyword">final</span> String p_default )</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    {</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        <span class="keywordflow">return</span> ( ( p_input == null ) || ( p_input.isEmpty() ) ) ? p_default : p_input;</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    }</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="comment">     * returns a default string of the resource file</span></div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="comment">     * @param p_class class for static calls</span></div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="comment">     * @param p_label label name of the object</span></div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="comment">     * @param p_parameter object array with substitutions</span></div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="comment">     * @return resource string</span></div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00335"></a><span class="lineno"><a class="line" href="../../d1/dc6/a00037.htm#ae523069a1b523b0e6a0c643049b1d745">  335</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> String <a class="code" href="../../d1/dc6/a00037.htm#ae523069a1b523b0e6a0c643049b1d745">getResourceString</a>( <span class="keyword">final</span> Class&lt;?&gt; p_class, <span class="keyword">final</span> String p_label, <span class="keyword">final</span> Object... p_parameter )</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    {</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../d1/dc6/a00037.htm#ae523069a1b523b0e6a0c643049b1d745">getResourceString</a>( null, p_class, p_label, p_parameter );</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    }</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="comment">     * returns a string of the resource file</span></div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="comment">     * @param p_language language code / empty for default</span></div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;<span class="comment">     * @param p_class class for static calls</span></div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;<span class="comment">     * @param p_label label name of the object</span></div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="comment">     * @param p_parameter object array with substitutions</span></div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="comment">     * @return resource string</span></div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00349"></a><span class="lineno"><a class="line" href="../../d1/dc6/a00037.htm#a64fb4511ef526ef8c457f8b46e150562">  349</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> String <a class="code" href="../../d1/dc6/a00037.htm#a64fb4511ef526ef8c457f8b46e150562">getResourceString</a>( <span class="keyword">final</span> String p_language, <span class="keyword">final</span> Class&lt;?&gt; p_class, <span class="keyword">final</span> String p_label, <span class="keyword">final</span> Object... p_parameter )</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    {</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        <span class="keywordflow">try</span></div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        {</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;            <span class="keywordflow">return</span> MessageFormat.format(</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;                    CConfiguration.getInstance().getResourceBundle( p_language ).getString( <a class="code" href="../../d1/dc6/a00037.htm#a5d4d844a730250f9b8db17ecf7106568">getResourceStringLabel</a>( p_class, p_label ) ), p_parameter );</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        }</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        <span class="keywordflow">catch</span> ( <span class="keyword">final</span> MissingResourceException l_exception )</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;        {</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;        }</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    }</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="comment">     * returns a default string of the resource file</span></div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="comment">     * @param p_object object for label</span></div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="comment">     * @param p_label label name of the object</span></div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;<span class="comment">     * @param p_parameter object array with substitutions</span></div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="comment">     * @return resource string</span></div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00371"></a><span class="lineno"><a class="line" href="../../d1/dc6/a00037.htm#a4323f85fa01a16a50b0e363f37befd4a">  371</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> String <a class="code" href="../../d1/dc6/a00037.htm#a4323f85fa01a16a50b0e363f37befd4a">getResourceString</a>( <span class="keyword">final</span> Object p_object, <span class="keyword">final</span> String p_label, <span class="keyword">final</span> Object... p_parameter )</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    {</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../d1/dc6/a00037.htm#ae523069a1b523b0e6a0c643049b1d745">getResourceString</a>( null, p_object.getClass(), p_label, p_parameter );</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    }</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;<span class="comment">     * returns a string of the resource file</span></div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;<span class="comment">     * @param p_language language code / empty for default</span></div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="comment">     * @param p_object object for label</span></div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="comment">     * @param p_label label name of the object</span></div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="comment">     * @param p_parameter object array with substitutions</span></div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;<span class="comment">     * @return resource string</span></div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00385"></a><span class="lineno"><a class="line" href="../../d1/dc6/a00037.htm#a17a8fb52bc80f42916f94388de123368">  385</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> String <a class="code" href="../../d1/dc6/a00037.htm#a17a8fb52bc80f42916f94388de123368">getResourceString</a>( <span class="keyword">final</span> String p_language, <span class="keyword">final</span> Object p_object, <span class="keyword">final</span> String p_label, <span class="keyword">final</span> Object... p_parameter )</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    {</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../d1/dc6/a00037.htm#ae523069a1b523b0e6a0c643049b1d745">getResourceString</a>( p_language, p_object.getClass(), p_label, p_parameter );</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    }</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<span class="comment">     * returns the label of a class and string to get access to the resource</span></div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;<span class="comment">     * @param p_class class for static calls</span></div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;<span class="comment">     * @param p_label label name of the object</span></div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="comment">     * @return label name</span></div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00397"></a><span class="lineno"><a class="line" href="../../d1/dc6/a00037.htm#a5d4d844a730250f9b8db17ecf7106568">  397</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> String <a class="code" href="../../d1/dc6/a00037.htm#a5d4d844a730250f9b8db17ecf7106568">getResourceStringLabel</a>( <span class="keyword">final</span> Class&lt;?&gt; p_class, <span class="keyword">final</span> String p_label )</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    {</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../d1/dc6/a00037.htm#a7dcb26e8cdde436192ef19f0538f0c9d">removePackageName</a>( p_class.getCanonicalName().toLowerCase() ).replaceAll( <span class="stringliteral">&quot;[^a-zA-Z0-9_\\.]+&quot;</span>, <span class="stringliteral">&quot;&quot;</span> ) + <span class="stringliteral">&quot;.&quot;</span> + p_label.toLowerCase().replace(</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;                <span class="stringliteral">&quot; &quot;</span>, <span class="stringliteral">&quot;&quot;</span></div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;        );</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    }</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;<span class="comment">     * returns root path of the resource</span></div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;<span class="comment">     * @return URL of file or null</span></div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00409"></a><span class="lineno"><a class="line" href="../../d1/dc6/a00037.htm#ac58731a756471d3863b2a74d142cfc30">  409</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> URL <a class="code" href="../../d1/dc6/a00037.htm#ac58731a756471d3863b2a74d142cfc30">getResourceURL</a>()</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    {</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;        <span class="keywordflow">return</span> CCommon.class.getClassLoader().getResource( <span class="stringliteral">&quot;&quot;</span> );</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    }</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="comment">     * returns a file from a resource e.g. Jar file</span></div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;<span class="comment">     * @param p_file file</span></div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<span class="comment">     * @return URL of file or null</span></div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00420"></a><span class="lineno"><a class="line" href="../../d1/dc6/a00037.htm#af4523cc0082db1faefd5cc2db9690028">  420</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> URL <a class="code" href="../../d1/dc6/a00037.htm#af4523cc0082db1faefd5cc2db9690028">getResourceURL</a>( <span class="keyword">final</span> String p_file )</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    {</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../d1/dc6/a00037.htm#ac58731a756471d3863b2a74d142cfc30">getResourceURL</a>( <span class="keyword">new</span> File( p_file ) );</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;    }</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;<span class="comment">     * returns a file from a resource e.g. Jar file</span></div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;<span class="comment">     * @param p_file file relative to the CMain</span></div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;<span class="comment">     * @return URL of file or null</span></div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00431"></a><span class="lineno"><a class="line" href="../../d1/dc6/a00037.htm#ab12e8d1c66b282e5293bde94c3277679">  431</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> URL <a class="code" href="../../d1/dc6/a00037.htm#ab12e8d1c66b282e5293bde94c3277679">getResourceURL</a>( <span class="keyword">final</span> File p_file )</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;    {</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        <span class="keywordflow">try</span></div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        {</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;            <span class="keywordflow">if</span> ( p_file.exists() )</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;                <span class="keywordflow">return</span> p_file.toURI().normalize().toURL();</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;            <span class="keywordflow">return</span> CCommon.class.getClassLoader().getResource( p_file.toString().replace( File.separator, <span class="stringliteral">&quot;/&quot;</span> ) ).toURI().normalize().toURL();</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;        }</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        <span class="keywordflow">catch</span> ( <span class="keyword">final</span> Exception l_exception )</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;        {</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;            CLogger.error( CCommon.getResourceString( CCommon.class, <span class="stringliteral">&quot;sourcenotfound&quot;</span>, p_file ) );</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;        }</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;        <span class="keywordflow">return</span> null;</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    }</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;<span class="comment">     * remove from a string the system package name</span></div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;<span class="comment">     * @param p_package package / class path</span></div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;<span class="comment">     * @return path without main package name</span></div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00453"></a><span class="lineno"><a class="line" href="../../d1/dc6/a00037.htm#a7dcb26e8cdde436192ef19f0538f0c9d">  453</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> String <a class="code" href="../../d1/dc6/a00037.htm#a7dcb26e8cdde436192ef19f0538f0c9d">removePackageName</a>( <span class="keyword">final</span> String p_package )</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;    {</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;        <span class="keywordflow">return</span> p_package.replace( CConfiguration.getPackage() + <span class="stringliteral">&quot;.&quot;</span>, <span class="stringliteral">&quot;&quot;</span> );</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;    }</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;<span class="comment">     * convert any object data into Json</span></div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;<span class="comment">     * @return Json object</span></div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00463"></a><span class="lineno"><a class="line" href="../../d1/dc6/a00037.htm#a23f986c5244af443a9ae452ef7f555fb">  463</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> String <a class="code" href="../../d1/dc6/a00037.htm#a23f986c5244af443a9ae452ef7f555fb">toJson</a>( <span class="keyword">final</span> Object p_data )</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    {</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;        <span class="keywordflow">if</span> ( p_data == null )</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;            <span class="keywordflow">return</span> <span class="stringliteral">&quot;{}&quot;</span>;</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;        <span class="keywordflow">try</span> (</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;                <span class="keyword">final</span> ByteArrayOutputStream l_stream = <span class="keyword">new</span> ByteArrayOutputStream()</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;        )</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;        {</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;            <span class="keyword">new</span> ObjectMapper().configure( SerializationFeature.FAIL_ON_EMPTY_BEANS, false ).writer().writeValue( l_stream, p_data );</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;            <span class="keywordflow">return</span> l_stream.toString( <span class="stringliteral">&quot;UTF-8&quot;</span> ).trim();</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;        }</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;        <span class="keywordflow">catch</span> ( <span class="keyword">final</span> IOException l_exception )</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;        {</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;            CLogger.error( l_exception );</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;        }</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;        <span class="keywordflow">return</span> null;</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    }</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;<span class="comment">     * returns a string with hexadecimal bytes</span></div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;<span class="comment">     * @param p_bytes input bytes</span></div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;<span class="comment">     * @return hexadecimal string</span></div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00488"></a><span class="lineno"><a class="line" href="../../d1/dc6/a00037.htm#a7fac266bb9fa6b3a8d739a88a41dade8">  488</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">static</span> String <a class="code" href="../../d1/dc6/a00037.htm#a7fac266bb9fa6b3a8d739a88a41dade8">getBytes2Hex</a>( <span class="keyword">final</span> byte[] p_bytes )</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    {</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;        <span class="keyword">final</span> StringBuilder l_str = <span class="keyword">new</span> StringBuilder( 2 * p_bytes.length );</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;        <span class="keywordflow">for</span> ( <span class="keyword">final</span> byte l_byte : p_bytes )</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;            l_str.append( String.format( <span class="stringliteral">&quot;%02x&quot;</span>, l_byte &amp; 0xff ) );</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;        <span class="keywordflow">return</span> l_str.toString();</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;    }</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;}</div>
<div class="ttc" id="a00037_htm_ab7d16cc0f5759cdc917488e95494b338"><div class="ttname"><a href="../../d1/dc6/a00037.htm#ab7d16cc0f5759cdc917488e95494b338">de.tu_clausthal.in.mec.common.CCommon.getHash</a></div><div class="ttdeci">static String getHash(final File p_file, final String p_hash)</div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00278">common/CCommon.java:278</a></div></div>
<div class="ttc" id="a00040_htm"><div class="ttname"><a href="../../db/d3a/a00040.htm">de.tu_clausthal.in.mec.CConfiguration</a></div><div class="ttdoc">singleton class for configuration with a Json file </div><div class="ttdef"><b>Definition:</b> <a href="../../da/d31/a00234_source.htm#l00065">CConfiguration.java:65</a></div></div>
<div class="ttc" id="a00037_htm_a4323f85fa01a16a50b0e363f37befd4a"><div class="ttname"><a href="../../d1/dc6/a00037.htm#a4323f85fa01a16a50b0e363f37befd4a">de.tu_clausthal.in.mec.common.CCommon.getResourceString</a></div><div class="ttdeci">static String getResourceString(final Object p_object, final String p_label, final Object...p_parameter)</div><div class="ttdoc">returns a default string of the resource file </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00371">common/CCommon.java:371</a></div></div>
<div class="ttc" id="a00037_htm"><div class="ttname"><a href="../../d1/dc6/a00037.htm">de.tu_clausthal.in.mec.common.CCommon</a></div><div class="ttdoc">class for any helper calls </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00060">common/CCommon.java:60</a></div></div>
<div class="ttc" id="a00037_htm_a291444b02383bd8391dcc31d05ac97b9"><div class="ttname"><a href="../../d1/dc6/a00037.htm#a291444b02383bd8391dcc31d05ac97b9">de.tu_clausthal.in.mec.common.CCommon.CCommon</a></div><div class="ttdeci">CCommon()</div><div class="ttdoc">private ctor - avoid instantiation </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00075">common/CCommon.java:75</a></div></div>
<div class="ttc" id="a00037_htm_ac58731a756471d3863b2a74d142cfc30"><div class="ttname"><a href="../../d1/dc6/a00037.htm#ac58731a756471d3863b2a74d142cfc30">de.tu_clausthal.in.mec.common.CCommon.getResourceURL</a></div><div class="ttdeci">static URL getResourceURL()</div><div class="ttdoc">returns root path of the resource </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00409">common/CCommon.java:409</a></div></div>
<div class="ttc" id="a00037_htm_a7dcb26e8cdde436192ef19f0538f0c9d"><div class="ttname"><a href="../../d1/dc6/a00037.htm#a7dcb26e8cdde436192ef19f0538f0c9d">de.tu_clausthal.in.mec.common.CCommon.removePackageName</a></div><div class="ttdeci">static String removePackageName(final String p_package)</div><div class="ttdoc">remove from a string the system package name </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00453">common/CCommon.java:453</a></div></div>
<div class="ttc" id="a00037_htm_af4523cc0082db1faefd5cc2db9690028"><div class="ttname"><a href="../../d1/dc6/a00037.htm#af4523cc0082db1faefd5cc2db9690028">de.tu_clausthal.in.mec.common.CCommon.getResourceURL</a></div><div class="ttdeci">static URL getResourceURL(final String p_file)</div><div class="ttdoc">returns a file from a resource e.g. </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00420">common/CCommon.java:420</a></div></div>
<div class="ttc" id="a00037_htm_a5787f1e254c47dda5783aff04de599fd"><div class="ttname"><a href="../../d1/dc6/a00037.htm#a5787f1e254c47dda5783aff04de599fd">de.tu_clausthal.in.mec.common.CCommon.getHash</a></div><div class="ttdeci">static String getHash(final String p_string, final String p_hash)</div><div class="ttdoc">returns the hash of a string </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00260">common/CCommon.java:260</a></div></div>
<div class="ttc" id="a00037_htm_af1fa68ea256265893067e7c5c855c385"><div class="ttname"><a href="../../d1/dc6/a00037.htm#af1fa68ea256265893067e7c5c855c385">de.tu_clausthal.in.mec.common.CCommon.deepCopy</a></div><div class="ttdeci">static&lt; T &gt; T deepCopy(final T p_object)</div><div class="ttdoc">create a deep-copy of a serializable object </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00186">common/CCommon.java:186</a></div></div>
<div class="ttc" id="a00037_htm_a88f0055c788b2bf9a609ae9f25074b7c"><div class="ttname"><a href="../../d1/dc6/a00037.htm#a88f0055c788b2bf9a609ae9f25074b7c">de.tu_clausthal.in.mec.common.CCommon.addFileExtension</a></div><div class="ttdeci">static File addFileExtension(final File p_file, final String p_suffix)</div><div class="ttdoc">adds a file extension if necessary </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00118">common/CCommon.java:118</a></div></div>
<div class="ttc" id="a00037_htm_a199dc1d11e3846f111b558acde15084a"><div class="ttname"><a href="../../d1/dc6/a00037.htm#a199dc1d11e3846f111b558acde15084a">de.tu_clausthal.in.mec.common.CCommon.c_gigabyte</a></div><div class="ttdeci">static final long c_gigabyte</div><div class="ttdoc">gigabyte multiplier </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00065">common/CCommon.java:65</a></div></div>
<div class="ttc" id="a00037_htm_a5998eb7de6fcc4bf4ab1d65fe72300e0"><div class="ttname"><a href="../../d1/dc6/a00037.htm#a5998eb7de6fcc4bf4ab1d65fe72300e0">de.tu_clausthal.in.mec.common.CCommon.convertCollectionToArray</a></div><div class="ttdeci">static&lt; T &gt; T[] convertCollectionToArray(final Class&lt; T[]&gt; p_class, final Collection&lt; T &gt; p_collection)</div><div class="ttdoc">converts any collection type into a typed array </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00147">common/CCommon.java:147</a></div></div>
<div class="ttc" id="a00037_htm_a92af93908ffba0d4e9ef8c62cd4b53d2"><div class="ttname"><a href="../../d1/dc6/a00037.htm#a92af93908ffba0d4e9ef8c62cd4b53d2">de.tu_clausthal.in.mec.common.CCommon.fromJson</a></div><div class="ttdeci">static&lt; T &gt; T fromJson(final String p_data, final Class&lt; T &gt; p_class)</div><div class="ttdoc">converts a Json string into any class object </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00217">common/CCommon.java:217</a></div></div>
<div class="ttc" id="a00037_htm_a71926e61b2a6ec2a7ab5f1ce9e56dd83"><div class="ttname"><a href="../../d1/dc6/a00037.htm#a71926e61b2a6ec2a7ab5f1ce9e56dd83">de.tu_clausthal.in.mec.common.CCommon.c_neededmemory</a></div><div class="ttdeci">static final float c_neededmemory</div><div class="ttdoc">needed memory in gigabyte </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00069">common/CCommon.java:69</a></div></div>
<div class="ttc" id="a00037_htm_ae523069a1b523b0e6a0c643049b1d745"><div class="ttname"><a href="../../d1/dc6/a00037.htm#ae523069a1b523b0e6a0c643049b1d745">de.tu_clausthal.in.mec.common.CCommon.getResourceString</a></div><div class="ttdeci">static String getResourceString(final Class&lt;?&gt; p_class, final String p_label, final Object...p_parameter)</div><div class="ttdoc">returns a default string of the resource file </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00335">common/CCommon.java:335</a></div></div>
<div class="ttc" id="a00037_htm_a7fac266bb9fa6b3a8d739a88a41dade8"><div class="ttname"><a href="../../d1/dc6/a00037.htm#a7fac266bb9fa6b3a8d739a88a41dade8">de.tu_clausthal.in.mec.common.CCommon.getBytes2Hex</a></div><div class="ttdeci">static String getBytes2Hex(final byte[] p_bytes)</div><div class="ttdoc">returns a string with hexadecimal bytes </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00488">common/CCommon.java:488</a></div></div>
<div class="ttc" id="a00037_htm_adda99dbeaefe91a3898a64f04ae2646b"><div class="ttname"><a href="../../d1/dc6/a00037.htm#adda99dbeaefe91a3898a64f04ae2646b">de.tu_clausthal.in.mec.common.CCommon.getNonEmptyValue</a></div><div class="ttdeci">static String getNonEmptyValue(final String p_input, final String p_default)</div><div class="ttdoc">returns a default value of an empty string </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00322">common/CCommon.java:322</a></div></div>
<div class="ttc" id="a00037_htm_a5d4d844a730250f9b8db17ecf7106568"><div class="ttname"><a href="../../d1/dc6/a00037.htm#a5d4d844a730250f9b8db17ecf7106568">de.tu_clausthal.in.mec.common.CCommon.getResourceStringLabel</a></div><div class="ttdeci">static String getResourceStringLabel(final Class&lt;?&gt; p_class, final String p_label)</div><div class="ttdoc">returns the label of a class and string to get access to the resource </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00397">common/CCommon.java:397</a></div></div>
<div class="ttc" id="a00037_htm_a23f986c5244af443a9ae452ef7f555fb"><div class="ttname"><a href="../../d1/dc6/a00037.htm#a23f986c5244af443a9ae452ef7f555fb">de.tu_clausthal.in.mec.common.CCommon.toJson</a></div><div class="ttdeci">static String toJson(final Object p_data)</div><div class="ttdoc">convert any object data into Json </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00463">common/CCommon.java:463</a></div></div>
<div class="ttc" id="a00037_htm_a935b928bad47cf1f12909a4dbddadfc9"><div class="ttname"><a href="../../d1/dc6/a00037.htm#a935b928bad47cf1f12909a4dbddadfc9">de.tu_clausthal.in.mec.common.CCommon.startupchecks</a></div><div class="ttdeci">static List&lt; String &gt; startupchecks()</div><div class="ttdoc">checkes the VM structures on startup </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00084">common/CCommon.java:84</a></div></div>
<div class="ttc" id="a00037_htm_a64fb4511ef526ef8c457f8b46e150562"><div class="ttname"><a href="../../d1/dc6/a00037.htm#a64fb4511ef526ef8c457f8b46e150562">de.tu_clausthal.in.mec.common.CCommon.getResourceString</a></div><div class="ttdeci">static String getResourceString(final String p_language, final Class&lt;?&gt; p_class, final String p_label, final Object...p_parameter)</div><div class="ttdoc">returns a string of the resource file </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00349">common/CCommon.java:349</a></div></div>
<div class="ttc" id="a00071_htm"><div class="ttname"><a href="../../d0/d89/a00071.htm">de.tu_clausthal.in.mec.CLogger</a></div><div class="ttdoc">Logger class with additional Log4j support. </div><div class="ttdef"><b>Definition:</b> <a href="../../d4/d04/a00255_source.htm#l00042">CLogger.java:42</a></div></div>
<div class="ttc" id="a00037_htm_a17a8fb52bc80f42916f94388de123368"><div class="ttname"><a href="../../d1/dc6/a00037.htm#a17a8fb52bc80f42916f94388de123368">de.tu_clausthal.in.mec.common.CCommon.getResourceString</a></div><div class="ttdeci">static String getResourceString(final String p_language, final Object p_object, final String p_label, final Object...p_parameter)</div><div class="ttdoc">returns a string of the resource file </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00385">common/CCommon.java:385</a></div></div>
<div class="ttc" id="a00037_htm_a45d8cb39014dc68dba09762a89d6d6b7"><div class="ttname"><a href="../../d1/dc6/a00037.htm#a45d8cb39014dc68dba09762a89d6d6b7">de.tu_clausthal.in.mec.common.CCommon.convertValue</a></div><div class="ttdeci">static Object convertValue(final String p_value, final Class[] p_types, final TypeParser p_parser)</div><div class="ttdoc">converts a value into class </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00162">common/CCommon.java:162</a></div></div>
<div class="ttc" id="a00037_htm_aea56afab03d42ff16d731ae7b33c785d"><div class="ttname"><a href="../../d1/dc6/a00037.htm#aea56afab03d42ff16d731ae7b33c785d">de.tu_clausthal.in.mec.common.CCommon.fromJson</a></div><div class="ttdeci">static Map&lt; String, Object &gt; fromJson(final String p_data)</div><div class="ttdoc">converts a Json string data into a raw map </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00203">common/CCommon.java:203</a></div></div>
<div class="ttc" id="a00037_htm_a296de9b4126126a80fe2a0dda01d5c04"><div class="ttname"><a href="../../d1/dc6/a00037.htm#a296de9b4126126a80fe2a0dda01d5c04">de.tu_clausthal.in.mec.common.CCommon.getCheckedValue</a></div><div class="ttdeci">static&lt; T &gt; T getCheckedValue(final T p_input, final T p_default, final Collection&lt; T &gt; p_allowedvalues)</div><div class="ttdoc">checks a value and returns the checkd value or the default value </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00241">common/CCommon.java:241</a></div></div>
<div class="ttc" id="a00037_htm_ab12e8d1c66b282e5293bde94c3277679"><div class="ttname"><a href="../../d1/dc6/a00037.htm#ab12e8d1c66b282e5293bde94c3277679">de.tu_clausthal.in.mec.common.CCommon.getResourceURL</a></div><div class="ttdeci">static URL getResourceURL(final File p_file)</div><div class="ttdoc">returns a file from a resource e.g. </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00431">common/CCommon.java:431</a></div></div>
<div class="ttc" id="a00037_htm_ada7f4b02ac1f1ddd566a2663e22ebd6c"><div class="ttname"><a href="../../d1/dc6/a00037.htm#ada7f4b02ac1f1ddd566a2663e22ebd6c">de.tu_clausthal.in.mec.common.CCommon.concatURL</a></div><div class="ttdeci">static URL concatURL(final URL p_base, final String p_string)</div><div class="ttdoc">concats an URL with a path </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00133">common/CCommon.java:133</a></div></div>
<div class="ttc" id="a00037_htm_a2fe039d44210807a6460f3bcb4379743"><div class="ttname"><a href="../../d1/dc6/a00037.htm#a2fe039d44210807a6460f3bcb4379743">de.tu_clausthal.in.mec.common.CCommon.getMap</a></div><div class="ttdeci">static Map&lt; String, Object &gt; getMap(final Object...p_objects)</div><div class="ttdoc">creates a map from parameters </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00297">common/CCommon.java:297</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div id = "nav-path" class = "navpath" >
    <ul >
        <li >
            <a href = "https://github.com/flashpixx/MecSim" >MecSim - Traffic Simulation</a ></li >
    </ul >
</div >
