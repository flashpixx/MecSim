<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<title>MecSim - Traffic Simulation: CPath.java Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.js", "TeX/AMSsymbols.js", "TeX/MathTools.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../layout.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">MecSim - Traffic Simulation
   </div>
   <div id="projectbrief">micro traffic simulation with layered world structure</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.6 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../namespaces.htm"><span>Packages</span></a></li>
      <li><a href="../../annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.htm"><span>File&#160;List</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('dd/d56/a00274_source.htm','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CPath.java</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../dd/d56/a00274.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * @cond LICENSE</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * ######################################################################################</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * # GPL License                                                                        #</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * #                                                                                    #</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * # This file is part of the micro agent-based traffic simulation MecSim of            #</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * # Clausthal University of Technology - Mobile and Enterprise Computing               #</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * # Copyright (c) 2014-15, Philipp Kraus (philipp.kraus@tu-clausthal.de)               #</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * # This program is free software: you can redistribute it and/or modify               #</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * # it under the terms of the GNU General Public License as                            #</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * # published by the Free Software Foundation, either version 3 of the                 #</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * # License, or (at your option) any later version.                                    #</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * #                                                                                    #</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * # This program is distributed in the hope that it will be useful,                    #</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * # but WITHOUT ANY WARRANTY; without even the implied warranty of                     #</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                      #</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * # GNU General Public License for more details.                                       #</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * #                                                                                    #</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * # You should have received a copy of the GNU General Public License                  #</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * # along with this program. If not, see http://www.gnu.org/licenses/                  #</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * ######################################################################################</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * @endcond</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">package </span>de.tu_clausthal.in.mec.common;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">import</span> java.util.ArrayList;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">import</span> java.util.Arrays;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">import</span> java.util.Collection;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">import</span> java.util.Collections;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">import</span> java.util.Iterator;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">import</span> java.util.List;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">import</span> java.util.stream.Collectors;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">import</span> java.util.stream.IntStream;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">import</span> java.util.stream.Stream;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment"> * class to create a path structure</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm">   44</a></span>&#160;<span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class </span><a class="code" href="../../dc/d54/a00094.htm">CPath</a> <span class="keyword">implements</span> Iterable&lt;CPath&gt;, Comparable&lt;CPath&gt;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{</div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#aba1fd82990db3665da979f1b0e97516f">   46</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String <a class="code" href="../../dc/d54/a00094.htm#aba1fd82990db3665da979f1b0e97516f">DEFAULTSEPERATOR</a> = <span class="stringliteral">&quot;/&quot;</span>;<span class="comment"></span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">     * empty path</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">     **/</span></div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#ab468b9a3834f3977d9c6ebd406dc3f3f">   50</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> <a class="code" href="../../dc/d54/a00094.htm#ab468b9a3834f3977d9c6ebd406dc3f3f">EMPTY</a> = <span class="keyword">new</span> <a class="code" href="../../dc/d54/a00094.htm#acc1851e52b605a9cab13d2b85c2acb68">CPath</a>();<span class="comment"></span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">     * list with path parts *</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#aa0627cb8313a6b7f1c68ee18328842a9">   54</a></span>&#160;    <span class="keyword">private</span> List&lt;String&gt; <a class="code" href="../../dc/d54/a00094.htm#aa0627cb8313a6b7f1c68ee18328842a9">m_path</a> = <span class="keyword">new</span> ArrayList&lt;&gt;();<span class="comment"></span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">     * separator of the path elements *</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#a94a9dae7f0237d5369a32d8a79879fa9">   58</a></span>&#160;    <span class="keyword">private</span> String <a class="code" href="../../dc/d54/a00094.htm#a94a9dae7f0237d5369a32d8a79879fa9">m_separator</a> = <a class="code" href="../../dc/d54/a00094.htm#aba1fd82990db3665da979f1b0e97516f">DEFAULTSEPERATOR</a>;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment">     * copy-ctor with arguments</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">     * @param p_path path object</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">     * @param p_varargs string arguments</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#acc1851e52b605a9cab13d2b85c2acb68">   66</a></span>&#160;    <span class="keyword">public</span> <a class="code" href="../../dc/d54/a00094.htm#acc1851e52b605a9cab13d2b85c2acb68">CPath</a>( <span class="keyword">final</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> p_path, <span class="keyword">final</span> String... p_varargs )</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    {</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <span class="keyword">this</span>( p_path );</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        m_path.addAll( Arrays.asList( p_varargs ) );</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    }</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">     * copy-ctor</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">     * @param p_path path object</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#a04b9ff537296a50eff71727ae3e7f079">   77</a></span>&#160;    <span class="keyword">public</span> <a class="code" href="../../dc/d54/a00094.htm#a04b9ff537296a50eff71727ae3e7f079">CPath</a>( <span class="keyword">final</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> p_path )</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    {</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <a class="code" href="../../dc/d54/a00094.htm#a94a9dae7f0237d5369a32d8a79879fa9">m_separator</a> = p_path.m_separator;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        m_path.addAll( p_path.m_path );</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    }</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">     * ctor</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">     * @param p_varargs path component</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#a8724bd8ebd90580ffaf3dbdab7a9788c">   88</a></span>&#160;    <span class="keyword">public</span> <a class="code" href="../../dc/d54/a00094.htm#a8724bd8ebd90580ffaf3dbdab7a9788c">CPath</a>( <span class="keyword">final</span> String... p_varargs )</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    {</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="keywordflow">if</span> ( ( p_varargs != null ) &amp;&amp; ( p_varargs.length &gt; 0 ) )</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            this.initialize( StringUtils.join( p_varargs, <a class="code" href="../../dc/d54/a00094.htm#a94a9dae7f0237d5369a32d8a79879fa9">m_separator</a> ) );</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    }</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">     * ctor</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment">     * @param p_collection string collection</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#a2784379b9575ae70076f15e6f5f14bff">   99</a></span>&#160;    <span class="keyword">public</span> <a class="code" href="../../dc/d54/a00094.htm#a2784379b9575ae70076f15e6f5f14bff">CPath</a>( <span class="keyword">final</span> Collection&lt;String&gt; p_collection )</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    {</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <span class="keywordflow">if</span> ( ( p_collection != null ) &amp;&amp; ( !p_collection.isEmpty() ) )</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            m_path.addAll( p_collection );</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    }</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">     * creates a path object from different items</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">     * @param p_varargs list of strings</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">     * @return path object</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#a10b0fba8cf06eabdf7b1fe4d17d03a79">  111</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> <a class="code" href="../../dc/d54/a00094.htm#a10b0fba8cf06eabdf7b1fe4d17d03a79">createPath</a>( <span class="keyword">final</span> String... p_varargs )</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    {</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordflow">if</span> ( ( p_varargs == null ) || ( p_varargs.length &lt; 1 ) )</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> IllegalArgumentException( <a class="code" href="../../d1/dc6/a00037.htm">CCommon</a>.<a class="code" href="../../d1/dc6/a00037.htm#ae523069a1b523b0e6a0c643049b1d745">getResourceString</a>( <a class="code" href="../../dc/d54/a00094.htm">CPath</a>.class, <span class="stringliteral">&quot;createpath&quot;</span> ) );</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="../../dc/d54/a00094.htm#acc1851e52b605a9cab13d2b85c2acb68">CPath</a>( p_varargs );</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    }</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">     * creates a path object by splitting a string</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">     * @param p_varargs list of string (first element is the seperator)</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">     * @return path object</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#a9cba06c860e2138c8de0789f310634ee">  125</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> <a class="code" href="../../dc/d54/a00094.htm#a9cba06c860e2138c8de0789f310634ee">createSplitPath</a>( <span class="keyword">final</span> String... p_varargs )</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    {</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="keywordflow">if</span> ( ( p_varargs == null ) || ( p_varargs.length &lt; 2 ) )</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> IllegalArgumentException( <a class="code" href="../../d1/dc6/a00037.htm">CCommon</a>.<a class="code" href="../../d1/dc6/a00037.htm#ae523069a1b523b0e6a0c643049b1d745">getResourceString</a>( <a class="code" href="../../dc/d54/a00094.htm">CPath</a>.class, <span class="stringliteral">&quot;createpath&quot;</span> ) );</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="../../dc/d54/a00094.htm#acc1851e52b605a9cab13d2b85c2acb68">CPath</a>(</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                Arrays.asList( p_varargs ).subList( 1, p_varargs.length ).<a class="code" href="../../dc/d54/a00094.htm#a30968e184b2b22e9813932de1bddbf88">stream</a>()</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                      .flatMap( i -&gt; Arrays.stream( StringUtils.split( i, p_varargs[0] ) ) )</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                      .collect( Collectors.toList() )</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        );</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    }</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">     * appends a path at the current and returns a new object</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">     * @param p_path path</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">     * @return new path</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00143"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#ac1cc82a2cecb8966047c4fab26b0e696">  143</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> <a class="code" href="../../dc/d54/a00094.htm#ac1cc82a2cecb8966047c4fab26b0e696">append</a>( <span class="keyword">final</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> p_path )</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    {</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <span class="keyword">final</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> l_path = <span class="keyword">new</span> <a class="code" href="../../dc/d54/a00094.htm#acc1851e52b605a9cab13d2b85c2acb68">CPath</a>( <span class="keyword">this</span> );</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        l_path.pushback( p_path );</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <span class="keywordflow">return</span> l_path;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    }</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">     * factor method to build path</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">     * @param p_string input string</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">     * @return path</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00156"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#a7dc6f84fbb92cabbd6c177819eece66c">  156</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> <a class="code" href="../../dc/d54/a00094.htm#a7dc6f84fbb92cabbd6c177819eece66c">from</a>( <span class="keyword">final</span> String p_string )</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    {</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="keywordflow">return</span> ( p_string == null ) || ( p_string.isEmpty() ) ? <a class="code" href="../../dc/d54/a00094.htm#ab468b9a3834f3977d9c6ebd406dc3f3f">EMPTY</a> : <a class="code" href="../../dc/d54/a00094.htm#a9cba06c860e2138c8de0789f310634ee">createSplitPath</a>( <a class="code" href="../../dc/d54/a00094.htm#aba1fd82990db3665da979f1b0e97516f">DEFAULTSEPERATOR</a>, p_string );</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    }</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">     * appends a string at the current path and returns the new object</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">     * @param p_path string with path</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">     * @return new path</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00167"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#a04556023498e8c44dbc806028bd5a3d9">  167</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> <a class="code" href="../../dc/d54/a00094.htm#a04556023498e8c44dbc806028bd5a3d9">append</a>( <span class="keyword">final</span> String p_path )</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    {</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        <span class="keyword">final</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> l_path = <span class="keyword">new</span> <a class="code" href="../../dc/d54/a00094.htm#acc1851e52b605a9cab13d2b85c2acb68">CPath</a>( <span class="keyword">this</span> );</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        l_path.pushback( p_path );</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="keywordflow">return</span> l_path;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    }</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">     * removes an element</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment">     * @param p_index index position</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">     * @return return the changed object</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00180"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#ab6eb1665074e9365b8972c89d78aa546">  180</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> <span class="keyword">remove</span>( <span class="keyword">final</span> <span class="keywordtype">int</span> p_index )</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    {</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        m_path.remove( p_index );</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    }</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment">     * removes all elements from start index until end index (exclusive)</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment">     * @param p_start start index</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment">     * @param p_end end index (exclusive)</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment">     * @return return the changed object</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00193"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#a74fd5e17f6c272a747157b81a52fefcd">  193</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> <span class="keyword">remove</span>( <span class="keyword">final</span> <span class="keywordtype">int</span> p_start, <span class="keyword">final</span> <span class="keywordtype">int</span> p_end )</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    {</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        m_path.subList( p_start, p_end ).clear();</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    }</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment">     * check of a path ends with another path</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment">     * @param p_path path</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment">     * @return boolean</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00205"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#ab9c8926773126632dceb99a5467c7243">  205</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">boolean</span> <a class="code" href="../../dc/d54/a00094.htm#ab9c8926773126632dceb99a5467c7243">endsWith</a>( <span class="keyword">final</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> p_path )</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    {</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        <span class="keywordflow">if</span> ( p_path.<a class="code" href="../../dc/d54/a00094.htm#a0b3aaaf4c6a7a0db70c11bc25ce949a4">size</a>() &gt; this.size() )</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        <span class="keywordflow">for</span> ( <span class="keywordtype">int</span> i = 0; i &lt; p_path.size(); ++i )</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            <span class="keywordflow">if</span> ( !this.<span class="keyword">get</span>( i - p_path.<a class="code" href="../../dc/d54/a00094.htm#a0b3aaaf4c6a7a0db70c11bc25ce949a4">size</a>() ).<a class="code" href="../../dc/d54/a00094.htm#aca1a1d8282546fdb88b2c57e862cff5c">equals</a>( p_path.<a class="code" href="../../dc/d54/a00094.htm#ae0d03c5ffc5689f0bbbc9575d1d0211d">get</a>( i ) ) )</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    }</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment">     * returns an part of the path</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="comment">     * @param p_index index position (negativ index is element from the end)</span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="comment">     * @return element</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00223"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#ae0d03c5ffc5689f0bbbc9575d1d0211d">  223</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> String <span class="keyword">get</span>( <span class="keyword">final</span> <span class="keywordtype">int</span> p_index )</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    {</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="keywordflow">return</span> p_index &lt; 0 ? m_path.get( m_path.size() + p_index ) : m_path.get( p_index );</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    }</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="comment">     * returns the full path as string with an individual separator</span></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="comment">     * @param p_separator separator</span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="comment">     * @return string path</span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00234"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#a4689f9677f221fd741846de425cdcf90">  234</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> String <a class="code" href="../../dc/d54/a00094.htm#a4689f9677f221fd741846de425cdcf90">getPath</a>( <span class="keyword">final</span> String p_separator )</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    {</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        <span class="keywordflow">return</span> StringUtils.join( <a class="code" href="../../dc/d54/a00094.htm#aa0627cb8313a6b7f1c68ee18328842a9">m_path</a>, p_separator );</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    }</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="comment">     * returns the full path as string</span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment">     * @return string path</span></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00244"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#a26364b4068c52ea458cbf02576d1b5c3">  244</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> String <a class="code" href="../../dc/d54/a00094.htm#a26364b4068c52ea458cbf02576d1b5c3">getPath</a>()</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    {</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        <span class="keywordflow">return</span> StringUtils.join( <a class="code" href="../../dc/d54/a00094.htm#aa0627cb8313a6b7f1c68ee18328842a9">m_path</a>, <a class="code" href="../../dc/d54/a00094.htm#a94a9dae7f0237d5369a32d8a79879fa9">m_separator</a> );</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    }</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">     * returns the separator</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment">     * @return separator</span></div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00254"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#a2a21d08d79c98221b7fea2339852018e">  254</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> String <a class="code" href="../../dc/d54/a00094.htm#a2a21d08d79c98221b7fea2339852018e">getSeparator</a>()</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    {</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../dc/d54/a00094.htm#a94a9dae7f0237d5369a32d8a79879fa9">m_separator</a>;</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    }</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="comment">     * sets the separator</span></div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="comment">     * @param p_separator separator</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="comment">     * @return path object</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00265"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#af76af80b31d2923e8005f6fc65b86dbb">  265</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> <a class="code" href="../../dc/d54/a00094.htm#af76af80b31d2923e8005f6fc65b86dbb">setSeparator</a>( <span class="keyword">final</span> String p_separator )</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    {</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        <span class="keywordflow">if</span> ( ( p_separator == null ) || ( p_separator.isEmpty() ) )</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> IllegalArgumentException( <a class="code" href="../../d1/dc6/a00037.htm">CCommon</a>.<a class="code" href="../../d1/dc6/a00037.htm#ae523069a1b523b0e6a0c643049b1d745">getResourceString</a>( <span class="keyword">this</span>, <span class="stringliteral">&quot;separatornotempty&quot;</span> ) );</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        <a class="code" href="../../dc/d54/a00094.htm#a94a9dae7f0237d5369a32d8a79879fa9">m_separator</a> = p_separator;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    }</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="comment">     * changes all elements to lower-case</span></div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="comment">     * @return object</span></div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00279"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#a9361d35c9aca3f6ab2cd6c758642a637">  279</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> <a class="code" href="../../dc/d54/a00094.htm#a9361d35c9aca3f6ab2cd6c758642a637">toLower</a>()</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    {</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        <a class="code" href="../../dc/d54/a00094.htm#aa0627cb8313a6b7f1c68ee18328842a9">m_path</a> = m_path.stream().map( i -&gt; i.toLowerCase() ).collect( Collectors.toList() );</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    }</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="comment">     * changes all elements to uppercase</span></div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="comment">     * @return object</span></div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00290"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#a6f9a92513905bfe0d10a9e9fc770d628">  290</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> <a class="code" href="../../dc/d54/a00094.htm#a6f9a92513905bfe0d10a9e9fc770d628">toUpper</a>()</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    {</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        <a class="code" href="../../dc/d54/a00094.htm#aa0627cb8313a6b7f1c68ee18328842a9">m_path</a> = m_path.stream().map( i -&gt; i.toUpperCase() ).collect( Collectors.toList() );</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    }</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="comment">     * creates a path of the start index until the end</span></div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="comment">     * @param p_fromIndex start index</span></div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="comment">     * @return path</span></div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00302"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#a811d1d4847114aedcbee692655fc99b1">  302</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> <a class="code" href="../../dc/d54/a00094.htm#a811d1d4847114aedcbee692655fc99b1">getSubPath</a>( <span class="keyword">final</span> <span class="keywordtype">int</span> p_fromIndex )</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    {</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;        <span class="keywordflow">return</span> this.getSubPath( p_fromIndex, this.size() );</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    }</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="comment">     * creates a path of the indices</span></div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="comment">     * @param p_fromIndex start index</span></div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="comment">     * @param p_toIndex end index (exclusive) / negative values from the end</span></div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="comment">     * @return path</span></div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00314"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#ad8e243ac0b32c2718d398f31126ff2e3">  314</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> <a class="code" href="../../dc/d54/a00094.htm#ad8e243ac0b32c2718d398f31126ff2e3">getSubPath</a>( <span class="keyword">final</span> <span class="keywordtype">int</span> p_fromIndex, <span class="keyword">final</span> <span class="keywordtype">int</span> p_toIndex )</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    {</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        <span class="keyword">final</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> l_path = <span class="keyword">new</span> <a class="code" href="../../dc/d54/a00094.htm#acc1851e52b605a9cab13d2b85c2acb68">CPath</a>();</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        l_path.m_separator = <a class="code" href="../../dc/d54/a00094.htm#a94a9dae7f0237d5369a32d8a79879fa9">m_separator</a>;</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;        l_path.m_path.addAll( m_path.subList( p_fromIndex, p_toIndex &gt;= 0 ? p_toIndex : this.size() + p_toIndex ) );</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;        <span class="keywordflow">return</span> l_path;</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    }</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="comment">     * returns the last part of the path</span></div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="comment">     * @return string</span></div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00327"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#a126a8674038ce8036263f7c317a4830d">  327</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> String <a class="code" href="../../dc/d54/a00094.htm#a126a8674038ce8036263f7c317a4830d">getSuffix</a>()</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    {</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        <span class="keywordflow">return</span> m_path.get( m_path.size() == 0 ? 0 : <a class="code" href="../../dc/d54/a00094.htm#aa0627cb8313a6b7f1c68ee18328842a9">m_path</a>.size() - 1 );</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    }</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    @Override</div>
<div class="line"><a name="l00333"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#a837eadb592c0be6ec1e0b786db8cd0ad">  333</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">int</span> <a class="code" href="../../dc/d54/a00094.htm#a837eadb592c0be6ec1e0b786db8cd0ad">hashCode</a>()</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    {</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;        <span class="keywordflow">return</span> m_path.stream().mapToInt( i -&gt; i.hashCode() ).sum();</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    }</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    @Override</div>
<div class="line"><a name="l00339"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#aca1a1d8282546fdb88b2c57e862cff5c">  339</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">boolean</span> <a class="code" href="../../dc/d54/a00094.htm#aca1a1d8282546fdb88b2c57e862cff5c">equals</a>( <span class="keyword">final</span> Object p_object )</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    {</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        <span class="keywordflow">if</span> ( p_object instanceof <a class="code" href="../../dc/d54/a00094.htm">CPath</a> )</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;            <span class="keywordflow">return</span> this.hashCode() == p_object.hashCode();</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;        <span class="keywordflow">if</span> ( p_object instanceof String )</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;            <span class="keywordflow">return</span> p_object.hashCode() == this.<a class="code" href="../../dc/d54/a00094.htm#a26364b4068c52ea458cbf02576d1b5c3">getPath</a>().hashCode();</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    }</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    @Override</div>
<div class="line"><a name="l00350"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#a397b2676ecf9fe4264016526e93abdb4">  350</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> String <a class="code" href="../../dc/d54/a00094.htm#a397b2676ecf9fe4264016526e93abdb4">toString</a>()</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    {</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        <span class="keywordflow">return</span> this.getPath();</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    }</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="comment">     * check if the path is empty</span></div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="comment">     * @return empty flag</span></div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00360"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#a4aa59b201e56cd0f80d5ab081b57517c">  360</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">boolean</span> <a class="code" href="../../dc/d54/a00094.htm#a4aa59b201e56cd0f80d5ab081b57517c">isEmpty</a>()</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    {</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;        <span class="keywordflow">return</span> m_path.isEmpty();</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    }</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    @Override</div>
<div class="line"><a name="l00366"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#a32e98da06345da1749c9f376b42dcaa6">  366</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> Iterator&lt;CPath&gt; <a class="code" href="../../dc/d54/a00094.htm#a32e98da06345da1749c9f376b42dcaa6">iterator</a>()</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    {</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">new</span> Iterator&lt;CPath&gt;()</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        {</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;            <span class="keyword">private</span> <span class="keywordtype">int</span> m_index;</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;            @Override</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;            <span class="keyword">public</span> <span class="keywordtype">boolean</span> hasNext()</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;            {</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;                <span class="keywordflow">return</span> m_index &lt; m_path.size();</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;            }</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;            @Override</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;            <span class="keyword">public</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> next()</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;            {</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="../../dc/d54/a00094.htm#acc1851e52b605a9cab13d2b85c2acb68">CPath</a>( <a class="code" href="../../d1/dc6/a00037.htm">CCommon</a>.<a class="code" href="../../d1/dc6/a00037.htm#a5998eb7de6fcc4bf4ab1d65fe72300e0">convertCollectionToArray</a>( String[].class, <a class="code" href="../../dc/d54/a00094.htm#aa0627cb8313a6b7f1c68ee18328842a9">m_path</a>.subList( 0, ++m_index ) ) );</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;            }</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;        };</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    }</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;<span class="comment">     * adds a path at the end</span></div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="comment">     * @param p_path path</span></div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="comment">     * @return return the changed object</span></div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00392"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#ac671fd035440fe7ee70fe3c51b9a2355">  392</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> <a class="code" href="../../dc/d54/a00094.htm#ac671fd035440fe7ee70fe3c51b9a2355">pushback</a>( <span class="keyword">final</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> p_path )</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    {</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;        m_path.addAll( p_path.m_path );</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    }</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<span class="comment">     * adds a path at the end</span></div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;<span class="comment">     * @param p_path string path</span></div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;<span class="comment">     * @return return the changed object</span></div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00404"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#aab381424e5f1fa4b44571175cf1b0005">  404</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> <a class="code" href="../../dc/d54/a00094.htm#aab381424e5f1fa4b44571175cf1b0005">pushback</a>( <span class="keyword">final</span> String p_path )</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    {</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;        this.pushback( <span class="keyword">new</span> <a class="code" href="../../dc/d54/a00094.htm#acc1851e52b605a9cab13d2b85c2acb68">CPath</a>( p_path ) );</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    }</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;<span class="comment">     * adds a path at the front</span></div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;<span class="comment">     * @param p_path string path</span></div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="comment">     * @return return the changed object</span></div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00416"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#a92cbb2a8f44370c356dae20f04c83d3d">  416</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> <a class="code" href="../../dc/d54/a00094.htm#a92cbb2a8f44370c356dae20f04c83d3d">pushfront</a>( <span class="keyword">final</span> String p_path )</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;    {</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;        this.pushfront( <span class="keyword">new</span> <a class="code" href="../../dc/d54/a00094.htm#acc1851e52b605a9cab13d2b85c2acb68">CPath</a>( p_path ) );</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    }</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;<span class="comment">     * adds a path to the front of the path</span></div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;<span class="comment">     * @param p_path path</span></div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;<span class="comment">     * @return return the changed object</span></div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00428"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#af3ee674285a8f3847d1616bcd9ed01cd">  428</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> <a class="code" href="../../dc/d54/a00094.htm#af3ee674285a8f3847d1616bcd9ed01cd">pushfront</a>( <span class="keyword">final</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> p_path )</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    {</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;        <span class="keyword">final</span> ArrayList&lt;String&gt; l_path = <span class="keyword">new</span> ArrayList&lt;&gt;( p_path.m_path );</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;        l_path.addAll( <a class="code" href="../../dc/d54/a00094.htm#aa0627cb8313a6b7f1c68ee18328842a9">m_path</a> );</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;        <a class="code" href="../../dc/d54/a00094.htm#aa0627cb8313a6b7f1c68ee18328842a9">m_path</a> = l_path;</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    }</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;<span class="comment">     * remove the suffix from the path</span></div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="comment">     * @return last item of the path</span></div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00441"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#aa2754dd522271a7eef34bf54f63c26d2">  441</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> String <a class="code" href="../../dc/d54/a00094.htm#aa2754dd522271a7eef34bf54f63c26d2">removeSuffix</a>()</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;    {</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        <span class="keywordflow">if</span> ( this.<a class="code" href="../../dc/d54/a00094.htm#a4aa59b201e56cd0f80d5ab081b57517c">isEmpty</a>() )</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;            <span class="keywordflow">return</span> null;</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;        <span class="keyword">final</span> String l_suffix = this.getSuffix();</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        <span class="keywordflow">if</span> ( <a class="code" href="../../dc/d54/a00094.htm#aa0627cb8313a6b7f1c68ee18328842a9">m_path</a>.size() &gt; 0 )</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;            <a class="code" href="../../dc/d54/a00094.htm#aa0627cb8313a6b7f1c68ee18328842a9">m_path</a>.remove( <a class="code" href="../../dc/d54/a00094.htm#aa0627cb8313a6b7f1c68ee18328842a9">m_path</a>.size() - 1 );</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;        <span class="keywordflow">return</span> l_suffix;</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;    }</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;<span class="comment">     * reverse path</span></div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="comment">     * @return return the changed object</span></div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00457"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#aced9522305aad4759969b485a8e919e7">  457</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> <a class="code" href="../../dc/d54/a00094.htm#aced9522305aad4759969b485a8e919e7">reverse</a>()</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;    {</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;        Collections.reverse( <a class="code" href="../../dc/d54/a00094.htm#aa0627cb8313a6b7f1c68ee18328842a9">m_path</a> );</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    }</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;<span class="comment">     * returns the number of path elements</span></div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;<span class="comment">     * @return size</span></div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00468"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#a0b3aaaf4c6a7a0db70c11bc25ce949a4">  468</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">int</span> <a class="code" href="../../dc/d54/a00094.htm#a0b3aaaf4c6a7a0db70c11bc25ce949a4">size</a>()</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    {</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;        <span class="keywordflow">return</span> m_path.size();</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    }</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;<span class="comment">     * check of a path starts with another path</span></div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;<span class="comment">     * @param p_path path</span></div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;<span class="comment">     * @return boolean</span></div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00479"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#acd573437f8aba9e5a1a92a0723a09f3f">  479</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">boolean</span> <a class="code" href="../../dc/d54/a00094.htm#acd573437f8aba9e5a1a92a0723a09f3f">startsWith</a>( <span class="keyword">final</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> p_path )</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    {</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;        <span class="keywordflow">if</span> ( p_path.<a class="code" href="../../dc/d54/a00094.htm#a0b3aaaf4c6a7a0db70c11bc25ce949a4">size</a>() &gt; this.size() )</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;        <span class="keywordflow">for</span> ( <span class="keywordtype">int</span> i = 0; i &lt; p_path.size(); ++i )</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;            <span class="keywordflow">if</span> ( !this.<span class="keyword">get</span>( i ).equals( p_path.get( i ) ) )</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    }</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;<span class="comment">     * check of a path starts with another path</span></div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;<span class="comment">     * @param p_path path</span></div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;<span class="comment">     * @return boolean</span></div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00497"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#adea507b6e74a6213c0707f566ebc048a">  497</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">boolean</span> <a class="code" href="../../dc/d54/a00094.htm#adea507b6e74a6213c0707f566ebc048a">startsWith</a>( <span class="keyword">final</span> String p_path )</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;    {</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;        <span class="keywordflow">return</span> this.startsWith( <span class="keyword">new</span> <a class="code" href="../../dc/d54/a00094.htm#acc1851e52b605a9cab13d2b85c2acb68">CPath</a>( p_path ) );</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;    }</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;<span class="comment">     * stream over elements</span></div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;<span class="comment">     * @return sequential stream</span></div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00508"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#a30968e184b2b22e9813932de1bddbf88">  508</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> Stream&lt;String&gt; <a class="code" href="../../dc/d54/a00094.htm#a30968e184b2b22e9813932de1bddbf88">stream</a>()</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    {</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;        <span class="keywordflow">return</span> m_path.stream();</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;    }</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;<span class="comment">     * parallel stream over elements</span></div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;<span class="comment">     * @return parallel stream</span></div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00518"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#a6778b5425f3259b3011c676799d2b445">  518</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> Stream&lt;String&gt; <a class="code" href="../../dc/d54/a00094.htm#a6778b5425f3259b3011c676799d2b445">parallelStream</a>()</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    {</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;        <span class="keywordflow">return</span> m_path.parallelStream();</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;    }</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;<span class="comment">     * normalizes the path (remove dot and dot-dot elements)</span></div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;<span class="comment">     * @return self reference</span></div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00529"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#a9cd564d9407ec5e1d0afd4be8e947999">  529</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> <a class="code" href="../../dc/d54/a00094.htm#a9cd564d9407ec5e1d0afd4be8e947999">normalize</a>()</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;    {</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;        <span class="keywordflow">if</span> ( <a class="code" href="../../dc/d54/a00094.htm#aa0627cb8313a6b7f1c68ee18328842a9">m_path</a>.isEmpty() )</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;        <a class="code" href="../../dc/d54/a00094.htm#aa0627cb8313a6b7f1c68ee18328842a9">m_path</a> = m_path.stream().filter( i -&gt; !i.equals( <span class="stringliteral">&quot;.&quot;</span> ) ).collect( Collectors.toList() );</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;        <span class="keyword">final</span> String l_last = m_path.get( m_path.size() - 1 );</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;        <a class="code" href="../../dc/d54/a00094.htm#aa0627cb8313a6b7f1c68ee18328842a9">m_path</a> = IntStream.range( 0, m_path.size() - 1 ).boxed().filter( i -&gt; !<a class="code" href="../../dc/d54/a00094.htm#aa0627cb8313a6b7f1c68ee18328842a9">m_path</a>.get( i + 1 ).equals( <span class="stringliteral">&quot;..&quot;</span> ) ).map( i -&gt; m_path.get( i ) ).collect(</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;                Collectors.toList() );</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;        <span class="keywordflow">if</span> ( !l_last.equals( <span class="stringliteral">&quot;..&quot;</span> ) )</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;            <a class="code" href="../../dc/d54/a00094.htm#aa0627cb8313a6b7f1c68ee18328842a9">m_path</a>.add( l_last );</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;    }</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    @Override</div>
<div class="line"><a name="l00546"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#af41afcf680f1ebd090d3162a4afd8b17">  546</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">int</span> <a class="code" href="../../dc/d54/a00094.htm#af41afcf680f1ebd090d3162a4afd8b17">compareTo</a>( <span class="keyword">final</span> <a class="code" href="../../dc/d54/a00094.htm">CPath</a> p_path )</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;    {</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;        <span class="keywordflow">return</span> Integer.compare( this.hashCode(), p_path.<a class="code" href="../../dc/d54/a00094.htm#a837eadb592c0be6ec1e0b786db8cd0ad">hashCode</a>() );</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;    }</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;<span class="comment">     * splits the string data</span></div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;<span class="comment">     * @param p_fqn full path</span></div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00557"></a><span class="lineno"><a class="line" href="../../dc/d54/a00094.htm#ad5784108506dc81d9854c980ef333d46">  557</a></span>&#160;    <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d54/a00094.htm#ad5784108506dc81d9854c980ef333d46">initialize</a>( <span class="keyword">final</span> String p_fqn )</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;    {</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;        <a class="code" href="../../dc/d54/a00094.htm#aa0627cb8313a6b7f1c68ee18328842a9">m_path</a> = Arrays.stream( p_fqn.split( <a class="code" href="../../dc/d54/a00094.htm#a94a9dae7f0237d5369a32d8a79879fa9">m_separator</a> ) ).filter( i -&gt; !i.isEmpty() ).collect( Collectors.toList() );</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;        <span class="keywordflow">if</span> ( <a class="code" href="../../dc/d54/a00094.htm#aa0627cb8313a6b7f1c68ee18328842a9">m_path</a>.size() == 0 )</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> IllegalArgumentException( <a class="code" href="../../d1/dc6/a00037.htm">CCommon</a>.<a class="code" href="../../d1/dc6/a00037.htm#ae523069a1b523b0e6a0c643049b1d745">getResourceString</a>( <span class="keyword">this</span>, <span class="stringliteral">&quot;pathempty&quot;</span> ) );</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;    }</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;}</div>
<div class="ttc" id="a00094_htm_af41afcf680f1ebd090d3162a4afd8b17"><div class="ttname"><a href="../../dc/d54/a00094.htm#af41afcf680f1ebd090d3162a4afd8b17">de.tu_clausthal.in.mec.common.CPath.compareTo</a></div><div class="ttdeci">final int compareTo(final CPath p_path)</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00546">CPath.java:546</a></div></div>
<div class="ttc" id="a00094_htm_a4aa59b201e56cd0f80d5ab081b57517c"><div class="ttname"><a href="../../dc/d54/a00094.htm#a4aa59b201e56cd0f80d5ab081b57517c">de.tu_clausthal.in.mec.common.CPath.isEmpty</a></div><div class="ttdeci">final boolean isEmpty()</div><div class="ttdoc">check if the path is empty </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00360">CPath.java:360</a></div></div>
<div class="ttc" id="a00094_htm_a8724bd8ebd90580ffaf3dbdab7a9788c"><div class="ttname"><a href="../../dc/d54/a00094.htm#a8724bd8ebd90580ffaf3dbdab7a9788c">de.tu_clausthal.in.mec.common.CPath.CPath</a></div><div class="ttdeci">CPath(final String...p_varargs)</div><div class="ttdoc">ctor </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00088">CPath.java:88</a></div></div>
<div class="ttc" id="a00094_htm_aa2754dd522271a7eef34bf54f63c26d2"><div class="ttname"><a href="../../dc/d54/a00094.htm#aa2754dd522271a7eef34bf54f63c26d2">de.tu_clausthal.in.mec.common.CPath.removeSuffix</a></div><div class="ttdeci">final String removeSuffix()</div><div class="ttdoc">remove the suffix from the path </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00441">CPath.java:441</a></div></div>
<div class="ttc" id="a00094_htm_a26364b4068c52ea458cbf02576d1b5c3"><div class="ttname"><a href="../../dc/d54/a00094.htm#a26364b4068c52ea458cbf02576d1b5c3">de.tu_clausthal.in.mec.common.CPath.getPath</a></div><div class="ttdeci">final String getPath()</div><div class="ttdoc">returns the full path as string </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00244">CPath.java:244</a></div></div>
<div class="ttc" id="a00094_htm_ad8e243ac0b32c2718d398f31126ff2e3"><div class="ttname"><a href="../../dc/d54/a00094.htm#ad8e243ac0b32c2718d398f31126ff2e3">de.tu_clausthal.in.mec.common.CPath.getSubPath</a></div><div class="ttdeci">final CPath getSubPath(final int p_fromIndex, final int p_toIndex)</div><div class="ttdoc">creates a path of the indices </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00314">CPath.java:314</a></div></div>
<div class="ttc" id="a00094_htm_adea507b6e74a6213c0707f566ebc048a"><div class="ttname"><a href="../../dc/d54/a00094.htm#adea507b6e74a6213c0707f566ebc048a">de.tu_clausthal.in.mec.common.CPath.startsWith</a></div><div class="ttdeci">final boolean startsWith(final String p_path)</div><div class="ttdoc">check of a path starts with another path </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00497">CPath.java:497</a></div></div>
<div class="ttc" id="a00037_htm"><div class="ttname"><a href="../../d1/dc6/a00037.htm">de.tu_clausthal.in.mec.common.CCommon</a></div><div class="ttdoc">class for any helper calls </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00060">common/CCommon.java:60</a></div></div>
<div class="ttc" id="a00094_htm_a10b0fba8cf06eabdf7b1fe4d17d03a79"><div class="ttname"><a href="../../dc/d54/a00094.htm#a10b0fba8cf06eabdf7b1fe4d17d03a79">de.tu_clausthal.in.mec.common.CPath.createPath</a></div><div class="ttdeci">static CPath createPath(final String...p_varargs)</div><div class="ttdoc">creates a path object from different items </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00111">CPath.java:111</a></div></div>
<div class="ttc" id="a00094_htm_a7dc6f84fbb92cabbd6c177819eece66c"><div class="ttname"><a href="../../dc/d54/a00094.htm#a7dc6f84fbb92cabbd6c177819eece66c">de.tu_clausthal.in.mec.common.CPath.from</a></div><div class="ttdeci">static CPath from(final String p_string)</div><div class="ttdoc">factor method to build path </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00156">CPath.java:156</a></div></div>
<div class="ttc" id="a00094_htm_acc1851e52b605a9cab13d2b85c2acb68"><div class="ttname"><a href="../../dc/d54/a00094.htm#acc1851e52b605a9cab13d2b85c2acb68">de.tu_clausthal.in.mec.common.CPath.CPath</a></div><div class="ttdeci">CPath(final CPath p_path, final String...p_varargs)</div><div class="ttdoc">copy-ctor with arguments </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00066">CPath.java:66</a></div></div>
<div class="ttc" id="a00094_htm_aba1fd82990db3665da979f1b0e97516f"><div class="ttname"><a href="../../dc/d54/a00094.htm#aba1fd82990db3665da979f1b0e97516f">de.tu_clausthal.in.mec.common.CPath.DEFAULTSEPERATOR</a></div><div class="ttdeci">static final String DEFAULTSEPERATOR</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00046">CPath.java:46</a></div></div>
<div class="ttc" id="a00094_htm_aced9522305aad4759969b485a8e919e7"><div class="ttname"><a href="../../dc/d54/a00094.htm#aced9522305aad4759969b485a8e919e7">de.tu_clausthal.in.mec.common.CPath.reverse</a></div><div class="ttdeci">final CPath reverse()</div><div class="ttdoc">reverse path </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00457">CPath.java:457</a></div></div>
<div class="ttc" id="a00094_htm_ac671fd035440fe7ee70fe3c51b9a2355"><div class="ttname"><a href="../../dc/d54/a00094.htm#ac671fd035440fe7ee70fe3c51b9a2355">de.tu_clausthal.in.mec.common.CPath.pushback</a></div><div class="ttdeci">final CPath pushback(final CPath p_path)</div><div class="ttdoc">adds a path at the end </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00392">CPath.java:392</a></div></div>
<div class="ttc" id="a00094_htm_ac1cc82a2cecb8966047c4fab26b0e696"><div class="ttname"><a href="../../dc/d54/a00094.htm#ac1cc82a2cecb8966047c4fab26b0e696">de.tu_clausthal.in.mec.common.CPath.append</a></div><div class="ttdeci">final CPath append(final CPath p_path)</div><div class="ttdoc">appends a path at the current and returns a new object </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00143">CPath.java:143</a></div></div>
<div class="ttc" id="a00094_htm_a6f9a92513905bfe0d10a9e9fc770d628"><div class="ttname"><a href="../../dc/d54/a00094.htm#a6f9a92513905bfe0d10a9e9fc770d628">de.tu_clausthal.in.mec.common.CPath.toUpper</a></div><div class="ttdeci">final CPath toUpper()</div><div class="ttdoc">changes all elements to uppercase </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00290">CPath.java:290</a></div></div>
<div class="ttc" id="a00094_htm_ae0d03c5ffc5689f0bbbc9575d1d0211d"><div class="ttname"><a href="../../dc/d54/a00094.htm#ae0d03c5ffc5689f0bbbc9575d1d0211d">de.tu_clausthal.in.mec.common.CPath.get</a></div><div class="ttdeci">final String get(final int p_index)</div><div class="ttdoc">returns an part of the path </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00223">CPath.java:223</a></div></div>
<div class="ttc" id="a00094_htm_aa0627cb8313a6b7f1c68ee18328842a9"><div class="ttname"><a href="../../dc/d54/a00094.htm#aa0627cb8313a6b7f1c68ee18328842a9">de.tu_clausthal.in.mec.common.CPath.m_path</a></div><div class="ttdeci">List&lt; String &gt; m_path</div><div class="ttdoc">list with path parts * </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00054">CPath.java:54</a></div></div>
<div class="ttc" id="a00037_htm_a5998eb7de6fcc4bf4ab1d65fe72300e0"><div class="ttname"><a href="../../d1/dc6/a00037.htm#a5998eb7de6fcc4bf4ab1d65fe72300e0">de.tu_clausthal.in.mec.common.CCommon.convertCollectionToArray</a></div><div class="ttdeci">static&lt; T &gt; T[] convertCollectionToArray(final Class&lt; T[]&gt; p_class, final Collection&lt; T &gt; p_collection)</div><div class="ttdoc">converts any collection type into a typed array </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00147">common/CCommon.java:147</a></div></div>
<div class="ttc" id="a00094_htm_a92cbb2a8f44370c356dae20f04c83d3d"><div class="ttname"><a href="../../dc/d54/a00094.htm#a92cbb2a8f44370c356dae20f04c83d3d">de.tu_clausthal.in.mec.common.CPath.pushfront</a></div><div class="ttdeci">final CPath pushfront(final String p_path)</div><div class="ttdoc">adds a path at the front </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00416">CPath.java:416</a></div></div>
<div class="ttc" id="a00094_htm_aab381424e5f1fa4b44571175cf1b0005"><div class="ttname"><a href="../../dc/d54/a00094.htm#aab381424e5f1fa4b44571175cf1b0005">de.tu_clausthal.in.mec.common.CPath.pushback</a></div><div class="ttdeci">final CPath pushback(final String p_path)</div><div class="ttdoc">adds a path at the end </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00404">CPath.java:404</a></div></div>
<div class="ttc" id="a00094_htm_a9361d35c9aca3f6ab2cd6c758642a637"><div class="ttname"><a href="../../dc/d54/a00094.htm#a9361d35c9aca3f6ab2cd6c758642a637">de.tu_clausthal.in.mec.common.CPath.toLower</a></div><div class="ttdeci">final CPath toLower()</div><div class="ttdoc">changes all elements to lower-case </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00279">CPath.java:279</a></div></div>
<div class="ttc" id="a00037_htm_ae523069a1b523b0e6a0c643049b1d745"><div class="ttname"><a href="../../d1/dc6/a00037.htm#ae523069a1b523b0e6a0c643049b1d745">de.tu_clausthal.in.mec.common.CCommon.getResourceString</a></div><div class="ttdeci">static String getResourceString(final Class&lt;?&gt; p_class, final String p_label, final Object...p_parameter)</div><div class="ttdoc">returns a default string of the resource file </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00335">common/CCommon.java:335</a></div></div>
<div class="ttc" id="a00094_htm_a126a8674038ce8036263f7c317a4830d"><div class="ttname"><a href="../../dc/d54/a00094.htm#a126a8674038ce8036263f7c317a4830d">de.tu_clausthal.in.mec.common.CPath.getSuffix</a></div><div class="ttdeci">final String getSuffix()</div><div class="ttdoc">returns the last part of the path </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00327">CPath.java:327</a></div></div>
<div class="ttc" id="a00094_htm_a397b2676ecf9fe4264016526e93abdb4"><div class="ttname"><a href="../../dc/d54/a00094.htm#a397b2676ecf9fe4264016526e93abdb4">de.tu_clausthal.in.mec.common.CPath.toString</a></div><div class="ttdeci">final String toString()</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00350">CPath.java:350</a></div></div>
<div class="ttc" id="a00094_htm_acd573437f8aba9e5a1a92a0723a09f3f"><div class="ttname"><a href="../../dc/d54/a00094.htm#acd573437f8aba9e5a1a92a0723a09f3f">de.tu_clausthal.in.mec.common.CPath.startsWith</a></div><div class="ttdeci">final boolean startsWith(final CPath p_path)</div><div class="ttdoc">check of a path starts with another path </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00479">CPath.java:479</a></div></div>
<div class="ttc" id="a00094_htm"><div class="ttname"><a href="../../dc/d54/a00094.htm">de.tu_clausthal.in.mec.common.CPath</a></div><div class="ttdoc">class to create a path structure </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00044">CPath.java:44</a></div></div>
<div class="ttc" id="a00094_htm_a9cba06c860e2138c8de0789f310634ee"><div class="ttname"><a href="../../dc/d54/a00094.htm#a9cba06c860e2138c8de0789f310634ee">de.tu_clausthal.in.mec.common.CPath.createSplitPath</a></div><div class="ttdeci">static CPath createSplitPath(final String...p_varargs)</div><div class="ttdoc">creates a path object by splitting a string </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00125">CPath.java:125</a></div></div>
<div class="ttc" id="a00094_htm_ab468b9a3834f3977d9c6ebd406dc3f3f"><div class="ttname"><a href="../../dc/d54/a00094.htm#ab468b9a3834f3977d9c6ebd406dc3f3f">de.tu_clausthal.in.mec.common.CPath.EMPTY</a></div><div class="ttdeci">static final CPath EMPTY</div><div class="ttdoc">empty path </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00050">CPath.java:50</a></div></div>
<div class="ttc" id="a00094_htm_af3ee674285a8f3847d1616bcd9ed01cd"><div class="ttname"><a href="../../dc/d54/a00094.htm#af3ee674285a8f3847d1616bcd9ed01cd">de.tu_clausthal.in.mec.common.CPath.pushfront</a></div><div class="ttdeci">final CPath pushfront(final CPath p_path)</div><div class="ttdoc">adds a path to the front of the path </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00428">CPath.java:428</a></div></div>
<div class="ttc" id="a00094_htm_a94a9dae7f0237d5369a32d8a79879fa9"><div class="ttname"><a href="../../dc/d54/a00094.htm#a94a9dae7f0237d5369a32d8a79879fa9">de.tu_clausthal.in.mec.common.CPath.m_separator</a></div><div class="ttdeci">String m_separator</div><div class="ttdoc">separator of the path elements * </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00058">CPath.java:58</a></div></div>
<div class="ttc" id="a00094_htm_a837eadb592c0be6ec1e0b786db8cd0ad"><div class="ttname"><a href="../../dc/d54/a00094.htm#a837eadb592c0be6ec1e0b786db8cd0ad">de.tu_clausthal.in.mec.common.CPath.hashCode</a></div><div class="ttdeci">final int hashCode()</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00333">CPath.java:333</a></div></div>
<div class="ttc" id="a00094_htm_a2784379b9575ae70076f15e6f5f14bff"><div class="ttname"><a href="../../dc/d54/a00094.htm#a2784379b9575ae70076f15e6f5f14bff">de.tu_clausthal.in.mec.common.CPath.CPath</a></div><div class="ttdeci">CPath(final Collection&lt; String &gt; p_collection)</div><div class="ttdoc">ctor </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00099">CPath.java:99</a></div></div>
<div class="ttc" id="a00094_htm_ab9c8926773126632dceb99a5467c7243"><div class="ttname"><a href="../../dc/d54/a00094.htm#ab9c8926773126632dceb99a5467c7243">de.tu_clausthal.in.mec.common.CPath.endsWith</a></div><div class="ttdeci">final boolean endsWith(final CPath p_path)</div><div class="ttdoc">check of a path ends with another path </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00205">CPath.java:205</a></div></div>
<div class="ttc" id="a00094_htm_a32e98da06345da1749c9f376b42dcaa6"><div class="ttname"><a href="../../dc/d54/a00094.htm#a32e98da06345da1749c9f376b42dcaa6">de.tu_clausthal.in.mec.common.CPath.iterator</a></div><div class="ttdeci">final Iterator&lt; CPath &gt; iterator()</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00366">CPath.java:366</a></div></div>
<div class="ttc" id="a00094_htm_a2a21d08d79c98221b7fea2339852018e"><div class="ttname"><a href="../../dc/d54/a00094.htm#a2a21d08d79c98221b7fea2339852018e">de.tu_clausthal.in.mec.common.CPath.getSeparator</a></div><div class="ttdeci">final String getSeparator()</div><div class="ttdoc">returns the separator </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00254">CPath.java:254</a></div></div>
<div class="ttc" id="a00094_htm_af76af80b31d2923e8005f6fc65b86dbb"><div class="ttname"><a href="../../dc/d54/a00094.htm#af76af80b31d2923e8005f6fc65b86dbb">de.tu_clausthal.in.mec.common.CPath.setSeparator</a></div><div class="ttdeci">final CPath setSeparator(final String p_separator)</div><div class="ttdoc">sets the separator </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00265">CPath.java:265</a></div></div>
<div class="ttc" id="a00094_htm_a0b3aaaf4c6a7a0db70c11bc25ce949a4"><div class="ttname"><a href="../../dc/d54/a00094.htm#a0b3aaaf4c6a7a0db70c11bc25ce949a4">de.tu_clausthal.in.mec.common.CPath.size</a></div><div class="ttdeci">final int size()</div><div class="ttdoc">returns the number of path elements </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00468">CPath.java:468</a></div></div>
<div class="ttc" id="a00094_htm_a30968e184b2b22e9813932de1bddbf88"><div class="ttname"><a href="../../dc/d54/a00094.htm#a30968e184b2b22e9813932de1bddbf88">de.tu_clausthal.in.mec.common.CPath.stream</a></div><div class="ttdeci">final Stream&lt; String &gt; stream()</div><div class="ttdoc">stream over elements </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00508">CPath.java:508</a></div></div>
<div class="ttc" id="a00094_htm_ad5784108506dc81d9854c980ef333d46"><div class="ttname"><a href="../../dc/d54/a00094.htm#ad5784108506dc81d9854c980ef333d46">de.tu_clausthal.in.mec.common.CPath.initialize</a></div><div class="ttdeci">void initialize(final String p_fqn)</div><div class="ttdoc">splits the string data </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00557">CPath.java:557</a></div></div>
<div class="ttc" id="a00094_htm_a9cd564d9407ec5e1d0afd4be8e947999"><div class="ttname"><a href="../../dc/d54/a00094.htm#a9cd564d9407ec5e1d0afd4be8e947999">de.tu_clausthal.in.mec.common.CPath.normalize</a></div><div class="ttdeci">final CPath normalize()</div><div class="ttdoc">normalizes the path (remove dot and dot-dot elements) </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00529">CPath.java:529</a></div></div>
<div class="ttc" id="a00094_htm_a04b9ff537296a50eff71727ae3e7f079"><div class="ttname"><a href="../../dc/d54/a00094.htm#a04b9ff537296a50eff71727ae3e7f079">de.tu_clausthal.in.mec.common.CPath.CPath</a></div><div class="ttdeci">CPath(final CPath p_path)</div><div class="ttdoc">copy-ctor </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00077">CPath.java:77</a></div></div>
<div class="ttc" id="a00094_htm_a04556023498e8c44dbc806028bd5a3d9"><div class="ttname"><a href="../../dc/d54/a00094.htm#a04556023498e8c44dbc806028bd5a3d9">de.tu_clausthal.in.mec.common.CPath.append</a></div><div class="ttdeci">final CPath append(final String p_path)</div><div class="ttdoc">appends a string at the current path and returns the new object </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00167">CPath.java:167</a></div></div>
<div class="ttc" id="a00094_htm_a4689f9677f221fd741846de425cdcf90"><div class="ttname"><a href="../../dc/d54/a00094.htm#a4689f9677f221fd741846de425cdcf90">de.tu_clausthal.in.mec.common.CPath.getPath</a></div><div class="ttdeci">final String getPath(final String p_separator)</div><div class="ttdoc">returns the full path as string with an individual separator </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00234">CPath.java:234</a></div></div>
<div class="ttc" id="a00094_htm_a811d1d4847114aedcbee692655fc99b1"><div class="ttname"><a href="../../dc/d54/a00094.htm#a811d1d4847114aedcbee692655fc99b1">de.tu_clausthal.in.mec.common.CPath.getSubPath</a></div><div class="ttdeci">final CPath getSubPath(final int p_fromIndex)</div><div class="ttdoc">creates a path of the start index until the end </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00302">CPath.java:302</a></div></div>
<div class="ttc" id="a00094_htm_a6778b5425f3259b3011c676799d2b445"><div class="ttname"><a href="../../dc/d54/a00094.htm#a6778b5425f3259b3011c676799d2b445">de.tu_clausthal.in.mec.common.CPath.parallelStream</a></div><div class="ttdeci">final Stream&lt; String &gt; parallelStream()</div><div class="ttdoc">parallel stream over elements </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00518">CPath.java:518</a></div></div>
<div class="ttc" id="a00094_htm_aca1a1d8282546fdb88b2c57e862cff5c"><div class="ttname"><a href="../../dc/d54/a00094.htm#aca1a1d8282546fdb88b2c57e862cff5c">de.tu_clausthal.in.mec.common.CPath.equals</a></div><div class="ttdeci">final boolean equals(final Object p_object)</div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d56/a00274_source.htm#l00339">CPath.java:339</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div id = "nav-path" class = "navpath" >
    <ul >
        <li >
            <a href = "https://github.com/flashpixx/MecSim" >MecSim - Traffic Simulation</a ></li >
    </ul >
</div >
