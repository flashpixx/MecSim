<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<title>MecSim - Traffic Simulation: Test_CLanguageLabels.java Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.js", "TeX/AMSsymbols.js", "TeX/MathTools.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../layout.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">MecSim - Traffic Simulation
   </div>
   <div id="projectbrief">micro traffic simulation with layered world structure</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.6 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="../../pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="../../namespaces.htm"><span>Packages</span></a></li>
      <li><a href="../../annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.htm"><span>File&#160;List</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('dc/d59/a00364_source.htm','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Test_CLanguageLabels.java</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../dc/d59/a00364.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * @cond LICENSE</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * ######################################################################################</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * # GPL License                                                                        #</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * #                                                                                    #</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * # This file is part of the micro agent-based traffic simulation MecSim of            #</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * # Clausthal University of Technology - Mobile and Enterprise Computing               #</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * # Copyright (c) 2014-15, Philipp Kraus (philipp.kraus@tu-clausthal.de)               #</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * # This program is free software: you can redistribute it and/or modify               #</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * # it under the terms of the GNU General Public License as                            #</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * # published by the Free Software Foundation, either version 3 of the                 #</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * # License, or (at your option) any later version.                                    #</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * #                                                                                    #</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * # This program is distributed in the hope that it will be useful,                    #</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * # but WITHOUT ANY WARRANTY; without even the implied warranty of                     #</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                      #</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * # GNU General Public License for more details.                                       #</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * #                                                                                    #</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * # You should have received a copy of the GNU General Public License                  #</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * # along with this program. If not, see http://www.gnu.org/licenses/                  #</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * ######################################################################################</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * @endcond</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">package </span>de.tu_clausthal.in.mec;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">import</span> com.github.javaparser.JavaParser;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">import</span> com.github.javaparser.ParseException;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">import</span> com.github.javaparser.ast.PackageDeclaration;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">import</span> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">import</span> com.github.javaparser.ast.body.EnumDeclaration;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">import</span> com.github.javaparser.ast.expr.MethodCallExpr;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">import</span> com.github.javaparser.ast.visitor.VoidVisitorAdapter;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">import</span> <a class="code" href="../../d1/dc6/a00037.htm">de.tu_clausthal.in.mec.common.CCommon</a>;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">import</span> org.apache.commons.lang3.ClassUtils;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">import</span> org.junit.Test;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">import</span> java.io.FileInputStream;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">import</span> java.io.IOException;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">import</span> java.nio.file.Files;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">import</span> java.nio.file.Path;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">import</span> java.nio.file.Paths;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">import</span> java.util.ArrayList;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">import</span> java.util.HashSet;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">import</span> java.util.List;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">import</span> java.util.Set;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">import</span> java.util.regex.Matcher;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">import</span> java.util.regex.Pattern;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keyword">import</span> <span class="keyword">static</span> org.junit.Assert.assertFalse;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keyword">import</span> <span class="keyword">static</span> org.junit.Assert.assertTrue;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keyword">import</span> <span class="keyword">static</span> org.junit.Assert.fail;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment"> * test all resource strings</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="../../d1/d72/a00204.htm">   59</a></span>&#160;<span class="keyword">public</span> <span class="keyword">class </span><a class="code" href="../../d1/d72/a00204.htm">Test_CLanguageLabels</a></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;{<span class="comment"></span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">     * list of all project packages for searching classes</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">     * @note is needed on finding class-calls within other classes e.g. class a.b.c uses y.x.class</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="../../d1/d72/a00204.htm#a96874e23a936c386883d49643c01eca3">   66</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Set&lt;String&gt; <a class="code" href="../../d1/d72/a00204.htm#a96874e23a936c386883d49643c01eca3">c_searchpackages</a> = <span class="keyword">new</span> HashSet&lt;String&gt;()</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    {{</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <span class="keywordflow">for</span> ( String l_package : <span class="keyword">new</span> String[]{</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                <a class="code" href="../../d1/d72/a00204.htm#a903bb901d35a096a02e5154b77a4e5a8">getPackagePath</a>( <span class="stringliteral">&quot;object&quot;</span>, <span class="stringliteral">&quot;mas&quot;</span>, <span class="stringliteral">&quot;inconsistency&quot;</span> )</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        } )</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            add( <a class="code" href="../../d1/d72/a00204.htm#a903bb901d35a096a02e5154b77a4e5a8">getPackagePath</a>( <a class="code" href="../../db/d3a/a00040.htm">CConfiguration</a>.<a class="code" href="../../db/d3a/a00040.htm#ac4658b43a016e19306f8ffd2884de2ff">getPackage</a>(), l_package ) );</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    }};<span class="comment"></span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">     * set with all labels *</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="../../d1/d72/a00204.htm#aa4f3ba0e5f40f1dd29200b32f39243cf">   77</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">final</span> Set&lt;String&gt; <a class="code" href="../../d1/d72/a00204.htm#aa4f3ba0e5f40f1dd29200b32f39243cf">m_labels</a> = <span class="keyword">new</span> HashSet&lt;&gt;();<span class="comment"></span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">     * method to translate strings</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="../../d1/d72/a00204.htm#a7739986162f387a4a6abfa6416b559f2">   81</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">final</span> String <a class="code" href="../../d1/d72/a00204.htm#a7739986162f387a4a6abfa6416b559f2">m_translatemethod</a> = <span class="stringliteral">&quot;CCommon.getResourceString&quot;</span>;<span class="comment"></span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">     * reg expression to extract label data *</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="../../d1/d72/a00204.htm#a1bf90b60a1f54214c5824e0b5b5a04ae">   85</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">final</span> Pattern <a class="code" href="../../d1/d72/a00204.htm#a1bf90b60a1f54214c5824e0b5b5a04ae">m_language</a> = Pattern.compile( <a class="code" href="../../d1/d72/a00204.htm#a7739986162f387a4a6abfa6416b559f2">m_translatemethod</a> + <span class="stringliteral">&quot;.+\\)&quot;</span> );</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">     * test-case all resource strings</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    @Test</div>
<div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="../../d1/d72/a00204.htm#ae2d00edc6459777e13dce3a642cd0aad">   91</a></span>&#160;    <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="../../d1/d72/a00204.htm#ae2d00edc6459777e13dce3a642cd0aad">testResourceString</a>()</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    {</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="comment">// --- check source -&gt; label definition</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="keywordflow">try</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        {</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            <span class="keyword">final</span> List&lt;Path&gt; l_files = <span class="keyword">new</span> ArrayList&lt;&gt;();</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            Files.walk( Paths.get( CCommon.concatURL( CCommon.getResourceURL(), <span class="stringliteral">&quot;../../src/main/java/&quot;</span> ).toURI() ) ).filter( Files::isRegularFile ).forEach(</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                    path -&gt; l_files.add( path )</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            );</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            <span class="keywordflow">for</span> ( <span class="keyword">final</span> Path l_item : l_files )</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                this.checkFile( l_item );</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        }</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="keywordflow">catch</span> ( <span class="keyword">final</span> Exception l_exception )</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        {</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            fail( l_exception.getMessage() );</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        }</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="comment">// --- check label -&gt; property definition</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordflow">for</span> ( <span class="keyword">final</span> String l_language : <a class="code" href="../../db/d3a/a00040.htm">CConfiguration</a>.<a class="code" href="../../db/d3a/a00040.htm#a5fc1c2b2396e46e44cbc25c907f2c452">getInstance</a>().get().&lt;List&lt;String&gt;&gt;<span class="keyword">get</span>( <span class="stringliteral">&quot;language/allow&quot;</span> ) )</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        {</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            <span class="keyword">final</span> Set&lt;String&gt; l_labels = CConfiguration.getInstance().getResourceBundle( l_language ).keySet();</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            l_labels.removeAll( <a class="code" href="../../d1/d72/a00204.htm#aa4f3ba0e5f40f1dd29200b32f39243cf">m_labels</a> );</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            assertTrue(</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                    String.format( <span class="stringliteral">&quot;the following keys in language [%s] are unused: %s&quot;</span>, l_language, StringUtils.join( l_labels, <span class="stringliteral">&quot;, &quot;</span> ) ), l_labels.isEmpty()</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            );</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        }</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    }</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">     * method to build a package path</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">     * @param p_names list of package parts</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">     * @return full-qualified string</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="../../d1/d72/a00204.htm#a903bb901d35a096a02e5154b77a4e5a8">  129</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">static</span> String <a class="code" href="../../d1/d72/a00204.htm#a903bb901d35a096a02e5154b77a4e5a8">getPackagePath</a>( String... p_names )</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    {</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        String l_return = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="keywordflow">for</span> ( <span class="keywordtype">int</span> i = 0; i &lt; p_names.length - 1; i++ )</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            l_return = l_return + p_names[i] + ClassUtils.PACKAGE_SEPARATOR;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        <span class="keywordflow">return</span> l_return + p_names[p_names.length - 1];</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    }</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">     * checks all labels within a Java file</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">     * @param p_file</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00142"></a><span class="lineno"><a class="line" href="../../d1/d72/a00204.htm#a86bfb38d28b880940d843a88dc6f69dc">  142</a></span>&#160;    <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="../../d1/d72/a00204.htm#a86bfb38d28b880940d843a88dc6f69dc">checkFile</a>( <span class="keyword">final</span> Path p_file ) <span class="keywordflow">throws</span> IOException</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    {</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <span class="keywordflow">if</span> ( !p_file.toString().endsWith( <span class="stringliteral">&quot;.java&quot;</span> ) )</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <span class="keywordflow">try</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                (</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                        <span class="keyword">final</span> FileInputStream l_stream = <span class="keyword">new</span> FileInputStream( p_file.toFile() )</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                )</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        {</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            <span class="keyword">new</span> <a class="code" href="../../dd/de3/a00201.htm">MyMethodVisitor</a>().visit( JavaParser.parse( l_stream ), null );</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        }</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        <span class="keywordflow">catch</span> ( <span class="keyword">final</span> ParseException l_exception )</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        {</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            fail( p_file.toFile() + <span class="stringliteral">&quot;: &quot;</span> + l_exception.getMessage() );</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        }</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    }</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment">     * AST visitor class</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00163"></a><span class="lineno"><a class="line" href="../../dd/de3/a00201.htm">  163</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">class </span><a class="code" href="../../dd/de3/a00201.htm">MyMethodVisitor</a> <span class="keyword">extends</span> VoidVisitorAdapter</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    {<span class="comment"></span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">        /**</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">         * inner class name *</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment">         */</span></div>
<div class="line"><a name="l00168"></a><span class="lineno"><a class="line" href="../../dd/de3/a00201.htm#a63e57aed36cbca5144907972b22abc61">  168</a></span>&#160;        <span class="keyword">private</span> String <a class="code" href="../../dd/de3/a00201.htm#a63e57aed36cbca5144907972b22abc61">m_innerclass</a> = <span class="stringliteral">&quot;&quot;</span>;<span class="comment"></span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment">        /**</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment">         * outer class name *</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment">         */</span></div>
<div class="line"><a name="l00172"></a><span class="lineno"><a class="line" href="../../dd/de3/a00201.htm#a6f6cb3f6f567cd6294ace27f98ef8eb5">  172</a></span>&#160;        <span class="keyword">private</span> String <a class="code" href="../../dd/de3/a00201.htm#a6f6cb3f6f567cd6294ace27f98ef8eb5">m_outerclass</a> = <span class="stringliteral">&quot;&quot;</span>;<span class="comment"></span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment">        /**</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">         * package name *</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">         */</span></div>
<div class="line"><a name="l00176"></a><span class="lineno"><a class="line" href="../../dd/de3/a00201.htm#a6900ce3bbce49646c67e418ae8aa4da8">  176</a></span>&#160;        <span class="keyword">private</span> String <a class="code" href="../../dd/de3/a00201.htm#a6900ce3bbce49646c67e418ae8aa4da8">m_package</a> = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        @Override</div>
<div class="line"><a name="l00179"></a><span class="lineno"><a class="line" href="../../dd/de3/a00201.htm#adc4aeaff5b1b72f3696e1e5ce71b84f2">  179</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="../../dd/de3/a00201.htm#adc4aeaff5b1b72f3696e1e5ce71b84f2">visit</a>( <span class="keyword">final</span> ClassOrInterfaceDeclaration p_class, <span class="keyword">final</span> Object p_arg )</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        {</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            <span class="keywordflow">if</span> ( <a class="code" href="../../dd/de3/a00201.htm#a6f6cb3f6f567cd6294ace27f98ef8eb5">m_outerclass</a>.isEmpty() )</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            {</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                <a class="code" href="../../dd/de3/a00201.htm#a6f6cb3f6f567cd6294ace27f98ef8eb5">m_outerclass</a> = p_class.getName();</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                <a class="code" href="../../dd/de3/a00201.htm#a63e57aed36cbca5144907972b22abc61">m_innerclass</a> = <a class="code" href="../../dd/de3/a00201.htm#a6f6cb3f6f567cd6294ace27f98ef8eb5">m_outerclass</a>;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            }</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                <a class="code" href="../../dd/de3/a00201.htm#a63e57aed36cbca5144907972b22abc61">m_innerclass</a> = <a class="code" href="../../dd/de3/a00201.htm#a6f6cb3f6f567cd6294ace27f98ef8eb5">m_outerclass</a> + ClassUtils.INNER_CLASS_SEPARATOR + p_class.getName();</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            super.visit( p_class, p_arg );</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        }</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        @Override</div>
<div class="line"><a name="l00194"></a><span class="lineno"><a class="line" href="../../dd/de3/a00201.htm#ab200cd272d445c4a99236bddc9047517">  194</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="../../dd/de3/a00201.htm#ab200cd272d445c4a99236bddc9047517">visit</a>( <span class="keyword">final</span> EnumDeclaration p_enum, <span class="keyword">final</span> Object p_arg )</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        {</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;            <span class="keyword">final</span> String l_resetinner;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;            <span class="keyword">final</span> String l_resetouter;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;            <span class="keywordflow">if</span> ( <a class="code" href="../../dd/de3/a00201.htm#a6f6cb3f6f567cd6294ace27f98ef8eb5">m_outerclass</a>.isEmpty() )</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            {</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                l_resetinner = null;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                l_resetouter = null;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                <a class="code" href="../../dd/de3/a00201.htm#a6f6cb3f6f567cd6294ace27f98ef8eb5">m_outerclass</a> = p_enum.getName();</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                <a class="code" href="../../dd/de3/a00201.htm#a63e57aed36cbca5144907972b22abc61">m_innerclass</a> = <a class="code" href="../../dd/de3/a00201.htm#a6f6cb3f6f567cd6294ace27f98ef8eb5">m_outerclass</a>;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;            }</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( <a class="code" href="../../dd/de3/a00201.htm#a63e57aed36cbca5144907972b22abc61">m_innerclass</a>.isEmpty() )</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            {</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                l_resetinner = null;</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                l_resetouter = null;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                <a class="code" href="../../dd/de3/a00201.htm#a63e57aed36cbca5144907972b22abc61">m_innerclass</a> = <a class="code" href="../../dd/de3/a00201.htm#a6f6cb3f6f567cd6294ace27f98ef8eb5">m_outerclass</a> + ClassUtils.INNER_CLASS_SEPARATOR + p_enum.getName();</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            }</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            {</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                l_resetinner = <a class="code" href="../../dd/de3/a00201.htm#a63e57aed36cbca5144907972b22abc61">m_innerclass</a>;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                l_resetouter = <a class="code" href="../../dd/de3/a00201.htm#a6f6cb3f6f567cd6294ace27f98ef8eb5">m_outerclass</a>;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                <a class="code" href="../../dd/de3/a00201.htm#a63e57aed36cbca5144907972b22abc61">m_innerclass</a> = <a class="code" href="../../dd/de3/a00201.htm#a6f6cb3f6f567cd6294ace27f98ef8eb5">m_outerclass</a> + ClassUtils.INNER_CLASS_SEPARATOR + <a class="code" href="../../dd/de3/a00201.htm#a63e57aed36cbca5144907972b22abc61">m_innerclass</a> + ClassUtils.INNER_CLASS_SEPARATOR + p_enum.getName();</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;            }</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            super.visit( p_enum, p_arg );</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            <span class="keywordflow">if</span> ( l_resetinner != null )</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                <a class="code" href="../../dd/de3/a00201.htm#a63e57aed36cbca5144907972b22abc61">m_innerclass</a> = l_resetinner;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            <span class="keywordflow">if</span> ( l_resetouter != null )</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                <a class="code" href="../../dd/de3/a00201.htm#a6f6cb3f6f567cd6294ace27f98ef8eb5">m_outerclass</a> = l_resetouter;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        }</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        @Override</div>
<div class="line"><a name="l00233"></a><span class="lineno"><a class="line" href="../../dd/de3/a00201.htm#a5b2478e0a2d8ec83dff2b993b0b22f9b">  233</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="../../dd/de3/a00201.htm#a5b2478e0a2d8ec83dff2b993b0b22f9b">visit</a>( <span class="keyword">final</span> MethodCallExpr p_methodcall, <span class="keyword">final</span> Object p_arg )</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        {</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;            <span class="keyword">final</span> String[] l_label = this.getParameter( p_methodcall.toStringWithoutComments(), <a class="code" href="../../dd/de3/a00201.htm#a6900ce3bbce49646c67e418ae8aa4da8">m_package</a>, <a class="code" href="../../dd/de3/a00201.htm#a6f6cb3f6f567cd6294ace27f98ef8eb5">m_outerclass</a>, <a class="code" href="../../dd/de3/a00201.htm#a63e57aed36cbca5144907972b22abc61">m_innerclass</a> );</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;            <span class="keywordflow">if</span> ( l_label != null )</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                this.checkLabel( l_label[0], l_label[1] );</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;            super.visit( p_methodcall, p_arg );</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        }</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        @Override</div>
<div class="line"><a name="l00242"></a><span class="lineno"><a class="line" href="../../dd/de3/a00201.htm#a0befa7b27f65230b664f0846562ae08e">  242</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="../../dd/de3/a00201.htm#a0befa7b27f65230b664f0846562ae08e">visit</a>( <span class="keyword">final</span> PackageDeclaration p_package, <span class="keyword">final</span> Object p_arg )</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        {</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;            <a class="code" href="../../dd/de3/a00201.htm#a6900ce3bbce49646c67e418ae8aa4da8">m_package</a> = p_package.getName().toStringWithoutComments();</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;            super.visit( p_package, p_arg );</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        }</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment">        /**</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment">         * checks all languages</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">         *</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="comment">         * @param p_classname full qualified class name</span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment">         * @param p_label label name</span></div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment">         */</span></div>
<div class="line"><a name="l00254"></a><span class="lineno"><a class="line" href="../../dd/de3/a00201.htm#ac9a7db13733de23bb0d1f9a48db18647">  254</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="../../dd/de3/a00201.htm#ac9a7db13733de23bb0d1f9a48db18647">checkLabel</a>( <span class="keyword">final</span> String p_classname, <span class="keyword">final</span> String p_label )</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        {</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;            <span class="comment">// construct class object</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;            <span class="keyword">final</span> Class&lt;?&gt; l_class;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;            <span class="keywordflow">try</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;            {</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                l_class = this.getClass( p_classname );</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;            }</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;            <span class="keywordflow">catch</span> ( <span class="keyword">final</span> ClassNotFoundException l_exception )</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;            {</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                fail( String.format( <span class="stringliteral">&quot;class [%s] not found&quot;</span>, p_classname ) );</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;            }</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;            <span class="comment">// check resource</span></div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;            <span class="keywordflow">for</span> ( <span class="keyword">final</span> String l_language : <a class="code" href="../../db/d3a/a00040.htm">CConfiguration</a>.<a class="code" href="../../db/d3a/a00040.htm#a5fc1c2b2396e46e44cbc25c907f2c452">getInstance</a>().get().&lt;List&lt;String&gt;&gt;<span class="keyword">get</span>( <span class="stringliteral">&quot;language/allow&quot;</span> ) )</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                <span class="keywordflow">try</span></div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                {</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                    <span class="keyword">final</span> String l_label = CCommon.getResourceString( l_language, l_class, p_label );</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                    assertFalse(</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                            String.format(</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                                    <span class="stringliteral">&quot;label [%s] in language [%s] within class [%s] not found&quot;</span>, <a class="code" href="../../d1/dc6/a00037.htm">CCommon</a>.<a class="code" href="../../d1/dc6/a00037.htm#a5d4d844a730250f9b8db17ecf7106568">getResourceStringLabel</a>( l_class, p_label ), l_language,</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                                    p_classname</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                            ), ( l_label == null ) || ( l_label.isEmpty() )</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                    );</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                }</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                <span class="keywordflow">catch</span> ( <span class="keyword">final</span> IllegalStateException l_exception )</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                {</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                }</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            m_labels.add( CCommon.getResourceStringLabel( l_class, p_label ) );</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        }</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="comment">        /**</span></div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="comment">         * tries to instantiate a class</span></div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="comment">         *</span></div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="comment">         * @param p_name class name</span></div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="comment">         * @return class object</span></div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="comment">         *</span></div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="comment">         * @throws ClassNotFoundException thrown if class is not found</span></div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="comment">         */</span></div>
<div class="line"><a name="l00296"></a><span class="lineno"><a class="line" href="../../dd/de3/a00201.htm#a41c6e99bcc2681fe14dbc46b45af7631">  296</a></span>&#160;        <span class="keyword">private</span> Class&lt;?&gt; <a class="code" href="../../dd/de3/a00201.htm#a41c6e99bcc2681fe14dbc46b45af7631">getClass</a>( <span class="keyword">final</span> String p_name ) <span class="keywordflow">throws</span> ClassNotFoundException</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        {</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;            <span class="comment">// --- first load try ---</span></div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            <span class="keywordflow">try</span></div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;            {</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                <span class="comment">// try to load class with default behaviour</span></div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;                <span class="keywordflow">return</span> Class.forName( p_name );</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;            }</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            <span class="keywordflow">catch</span> ( <span class="keyword">final</span> ClassNotFoundException l_forname_exception )</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;            {</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                <span class="comment">// --- second load try ---</span></div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                <span class="keywordflow">try</span></div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;                {</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;                    <span class="comment">// try to load class depended on the current classloader</span></div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;                    <span class="keywordflow">return</span> this.getClass().getClassLoader().loadClass( p_name );</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                }</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;                <span class="keywordflow">catch</span> ( <span class="keyword">final</span> ClassNotFoundException l_loader_exception )</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;                {</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;                    <span class="comment">// --- third load try ---</span></div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;                    <span class="comment">// create a name without package</span></div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;                    <span class="keyword">final</span> String[] l_part = StringUtils.split( p_name, ClassUtils.PACKAGE_SEPARATOR );</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;                    <span class="keyword">final</span> String l_name = l_part[l_part.length - 1];</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                    <span class="comment">// try to load class within the defined search pathes</span></div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                    <span class="keywordflow">for</span> ( <span class="keyword">final</span> String l_package : <a class="code" href="../../d1/d72/a00204.htm#a96874e23a936c386883d49643c01eca3">c_searchpackages</a> )</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                        <span class="keywordflow">try</span></div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                        {</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                            <span class="keywordflow">return</span> this.getClass().getClassLoader().loadClass( <a class="code" href="../../d1/d72/a00204.htm#a903bb901d35a096a02e5154b77a4e5a8">getPackagePath</a>( l_package, l_name ) );</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                        }</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                        <span class="keywordflow">catch</span> ( <span class="keyword">final</span> ClassNotFoundException l_iterating_exception )</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                        {</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;                        }</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> ClassNotFoundException();</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                }</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;            }</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        }</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="comment">        /**</span></div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="comment">         * gets the class name and label name</span></div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="comment">         *</span></div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="comment">         * @param p_line input timmed line</span></div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="comment">         * @param p_package package name</span></div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="comment">         * @param p_outerclass outclass name</span></div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="comment">         * @param p_innerclass innerclass name</span></div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="comment">         * @return null or array with class &amp; label name</span></div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="comment">         */</span></div>
<div class="line"><a name="l00342"></a><span class="lineno"><a class="line" href="../../dd/de3/a00201.htm#ae3fea477c2e1bbe384ae205afe0c261e">  342</a></span>&#160;        <span class="keyword">private</span> String[] <a class="code" href="../../dd/de3/a00201.htm#ae3fea477c2e1bbe384ae205afe0c261e">getParameter</a>( <span class="keyword">final</span> String p_line, <span class="keyword">final</span> String p_package, <span class="keyword">final</span> String p_outerclass, <span class="keyword">final</span> String p_innerclass )</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;        {</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;            <span class="keyword">final</span> Matcher l_matcher = m_language.matcher( p_line );</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;            <span class="keywordflow">if</span> ( !l_matcher.find() )</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                <span class="keywordflow">return</span> null;</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;            <span class="keyword">final</span> String[] l_split = l_matcher.group( 0 ).split( <span class="stringliteral">&quot;,&quot;</span> );</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;            <span class="keyword">final</span> String[] l_return = <span class="keyword">new</span> String[2];</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;            <span class="comment">// class name</span></div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;            l_return[0] = l_split[0].replace( <a class="code" href="../../d1/d72/a00204.htm#a7739986162f387a4a6abfa6416b559f2">m_translatemethod</a>, <span class="stringliteral">&quot;&quot;</span> ).replace( <span class="stringliteral">&quot;(&quot;</span>, <span class="stringliteral">&quot;&quot;</span> ).trim();</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;            <span class="comment">// label name</span></div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;            l_return[1] = l_split[1].replace( <span class="stringliteral">&quot;)&quot;</span>, <span class="stringliteral">&quot;&quot;</span> ).replace( <span class="stringliteral">&quot;\&quot;&quot;</span>, <span class="stringliteral">&quot;&quot;</span> ).split( <span class="stringliteral">&quot;;&quot;</span> )[0].trim().toLowerCase();</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;            <span class="comment">// setup class name</span></div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;            <span class="keywordflow">if</span> ( <span class="stringliteral">&quot;this&quot;</span>.equals( l_return[0] ) )</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                l_return[0] = p_package + ClassUtils.PACKAGE_SEPARATOR + p_innerclass;</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;            <span class="keywordflow">else</span> if ( l_return[0].endsWith( <span class="stringliteral">&quot;.class&quot;</span> ) )</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;            {</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;                l_return[0] = l_return[0].replace( <span class="stringliteral">&quot;.class&quot;</span>, <span class="stringliteral">&quot;&quot;</span> );</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;                <span class="keywordflow">if</span> ( !l_return[0].contains( ClassUtils.PACKAGE_SEPARATOR ) )</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;                    l_return[0] = p_package + ( !<a class="code" href="../../dd/de3/a00201.htm#a63e57aed36cbca5144907972b22abc61">m_innerclass</a>.equals( <a class="code" href="../../dd/de3/a00201.htm#a6f6cb3f6f567cd6294ace27f98ef8eb5">m_outerclass</a> ) ?</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;                            ClassUtils.PACKAGE_SEPARATOR + <a class="code" href="../../dd/de3/a00201.htm#a6f6cb3f6f567cd6294ace27f98ef8eb5">m_outerclass</a> + ClassUtils.INNER_CLASS_SEPARATOR : ClassUtils.PACKAGE_SEPARATOR ) + l_return[0];</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;            }</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;            <span class="keywordflow">return</span> l_return;</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        }</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    }</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;}</div>
<div class="ttc" id="a00201_htm_a6900ce3bbce49646c67e418ae8aa4da8"><div class="ttname"><a href="../../dd/de3/a00201.htm#a6900ce3bbce49646c67e418ae8aa4da8">de.tu_clausthal.in.mec.Test_CLanguageLabels.MyMethodVisitor.m_package</a></div><div class="ttdeci">String m_package</div><div class="ttdoc">package name * </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d59/a00364_source.htm#l00176">Test_CLanguageLabels.java:176</a></div></div>
<div class="ttc" id="a00040_htm"><div class="ttname"><a href="../../db/d3a/a00040.htm">de.tu_clausthal.in.mec.CConfiguration</a></div><div class="ttdoc">singleton class for configuration with a Json file </div><div class="ttdef"><b>Definition:</b> <a href="../../da/d31/a00234_source.htm#l00065">CConfiguration.java:65</a></div></div>
<div class="ttc" id="a00201_htm_ac9a7db13733de23bb0d1f9a48db18647"><div class="ttname"><a href="../../dd/de3/a00201.htm#ac9a7db13733de23bb0d1f9a48db18647">de.tu_clausthal.in.mec.Test_CLanguageLabels.MyMethodVisitor.checkLabel</a></div><div class="ttdeci">void checkLabel(final String p_classname, final String p_label)</div><div class="ttdoc">checks all languages </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d59/a00364_source.htm#l00254">Test_CLanguageLabels.java:254</a></div></div>
<div class="ttc" id="a00040_htm_a5fc1c2b2396e46e44cbc25c907f2c452"><div class="ttname"><a href="../../db/d3a/a00040.htm#a5fc1c2b2396e46e44cbc25c907f2c452">de.tu_clausthal.in.mec.CConfiguration.getInstance</a></div><div class="ttdeci">static CConfiguration getInstance()</div><div class="ttdoc">singleton get instance method </div><div class="ttdef"><b>Definition:</b> <a href="../../da/d31/a00234_source.htm#l00427">CConfiguration.java:427</a></div></div>
<div class="ttc" id="a00037_htm"><div class="ttname"><a href="../../d1/dc6/a00037.htm">de.tu_clausthal.in.mec.common.CCommon</a></div><div class="ttdoc">class for any helper calls </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00060">common/CCommon.java:60</a></div></div>
<div class="ttc" id="a00201_htm_a6f6cb3f6f567cd6294ace27f98ef8eb5"><div class="ttname"><a href="../../dd/de3/a00201.htm#a6f6cb3f6f567cd6294ace27f98ef8eb5">de.tu_clausthal.in.mec.Test_CLanguageLabels.MyMethodVisitor.m_outerclass</a></div><div class="ttdeci">String m_outerclass</div><div class="ttdoc">outer class name * </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d59/a00364_source.htm#l00172">Test_CLanguageLabels.java:172</a></div></div>
<div class="ttc" id="a00204_htm_a86bfb38d28b880940d843a88dc6f69dc"><div class="ttname"><a href="../../d1/d72/a00204.htm#a86bfb38d28b880940d843a88dc6f69dc">de.tu_clausthal.in.mec.Test_CLanguageLabels.checkFile</a></div><div class="ttdeci">void checkFile(final Path p_file)</div><div class="ttdoc">checks all labels within a Java file </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d59/a00364_source.htm#l00142">Test_CLanguageLabels.java:142</a></div></div>
<div class="ttc" id="a00201_htm_a41c6e99bcc2681fe14dbc46b45af7631"><div class="ttname"><a href="../../dd/de3/a00201.htm#a41c6e99bcc2681fe14dbc46b45af7631">de.tu_clausthal.in.mec.Test_CLanguageLabels.MyMethodVisitor.getClass</a></div><div class="ttdeci">Class&lt;?&gt; getClass(final String p_name)</div><div class="ttdoc">tries to instantiate a class </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d59/a00364_source.htm#l00296">Test_CLanguageLabels.java:296</a></div></div>
<div class="ttc" id="a00201_htm_ae3fea477c2e1bbe384ae205afe0c261e"><div class="ttname"><a href="../../dd/de3/a00201.htm#ae3fea477c2e1bbe384ae205afe0c261e">de.tu_clausthal.in.mec.Test_CLanguageLabels.MyMethodVisitor.getParameter</a></div><div class="ttdeci">String[] getParameter(final String p_line, final String p_package, final String p_outerclass, final String p_innerclass)</div><div class="ttdoc">gets the class name and label name </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d59/a00364_source.htm#l00342">Test_CLanguageLabels.java:342</a></div></div>
<div class="ttc" id="a00201_htm_a0befa7b27f65230b664f0846562ae08e"><div class="ttname"><a href="../../dd/de3/a00201.htm#a0befa7b27f65230b664f0846562ae08e">de.tu_clausthal.in.mec.Test_CLanguageLabels.MyMethodVisitor.visit</a></div><div class="ttdeci">void visit(final PackageDeclaration p_package, final Object p_arg)</div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d59/a00364_source.htm#l00242">Test_CLanguageLabels.java:242</a></div></div>
<div class="ttc" id="a00204_htm_a96874e23a936c386883d49643c01eca3"><div class="ttname"><a href="../../d1/d72/a00204.htm#a96874e23a936c386883d49643c01eca3">de.tu_clausthal.in.mec.Test_CLanguageLabels.c_searchpackages</a></div><div class="ttdeci">static final Set&lt; String &gt; c_searchpackages</div><div class="ttdoc">list of all project packages for searching classes </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d59/a00364_source.htm#l00066">Test_CLanguageLabels.java:66</a></div></div>
<div class="ttc" id="a00201_htm_ab200cd272d445c4a99236bddc9047517"><div class="ttname"><a href="../../dd/de3/a00201.htm#ab200cd272d445c4a99236bddc9047517">de.tu_clausthal.in.mec.Test_CLanguageLabels.MyMethodVisitor.visit</a></div><div class="ttdeci">void visit(final EnumDeclaration p_enum, final Object p_arg)</div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d59/a00364_source.htm#l00194">Test_CLanguageLabels.java:194</a></div></div>
<div class="ttc" id="a00201_htm"><div class="ttname"><a href="../../dd/de3/a00201.htm">de.tu_clausthal.in.mec.Test_CLanguageLabels.MyMethodVisitor</a></div><div class="ttdoc">AST visitor class. </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d59/a00364_source.htm#l00163">Test_CLanguageLabels.java:163</a></div></div>
<div class="ttc" id="a00204_htm_aa4f3ba0e5f40f1dd29200b32f39243cf"><div class="ttname"><a href="../../d1/d72/a00204.htm#aa4f3ba0e5f40f1dd29200b32f39243cf">de.tu_clausthal.in.mec.Test_CLanguageLabels.m_labels</a></div><div class="ttdeci">final Set&lt; String &gt; m_labels</div><div class="ttdoc">set with all labels * </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d59/a00364_source.htm#l00077">Test_CLanguageLabels.java:77</a></div></div>
<div class="ttc" id="a00204_htm_a7739986162f387a4a6abfa6416b559f2"><div class="ttname"><a href="../../d1/d72/a00204.htm#a7739986162f387a4a6abfa6416b559f2">de.tu_clausthal.in.mec.Test_CLanguageLabels.m_translatemethod</a></div><div class="ttdeci">final String m_translatemethod</div><div class="ttdoc">method to translate strings </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d59/a00364_source.htm#l00081">Test_CLanguageLabels.java:81</a></div></div>
<div class="ttc" id="a00201_htm_adc4aeaff5b1b72f3696e1e5ce71b84f2"><div class="ttname"><a href="../../dd/de3/a00201.htm#adc4aeaff5b1b72f3696e1e5ce71b84f2">de.tu_clausthal.in.mec.Test_CLanguageLabels.MyMethodVisitor.visit</a></div><div class="ttdeci">void visit(final ClassOrInterfaceDeclaration p_class, final Object p_arg)</div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d59/a00364_source.htm#l00179">Test_CLanguageLabels.java:179</a></div></div>
<div class="ttc" id="a00204_htm_ae2d00edc6459777e13dce3a642cd0aad"><div class="ttname"><a href="../../d1/d72/a00204.htm#ae2d00edc6459777e13dce3a642cd0aad">de.tu_clausthal.in.mec.Test_CLanguageLabels.testResourceString</a></div><div class="ttdeci">void testResourceString()</div><div class="ttdoc">test-case all resource strings </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d59/a00364_source.htm#l00091">Test_CLanguageLabels.java:91</a></div></div>
<div class="ttc" id="a00201_htm_a63e57aed36cbca5144907972b22abc61"><div class="ttname"><a href="../../dd/de3/a00201.htm#a63e57aed36cbca5144907972b22abc61">de.tu_clausthal.in.mec.Test_CLanguageLabels.MyMethodVisitor.m_innerclass</a></div><div class="ttdeci">String m_innerclass</div><div class="ttdoc">inner class name * </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d59/a00364_source.htm#l00168">Test_CLanguageLabels.java:168</a></div></div>
<div class="ttc" id="a00204_htm"><div class="ttname"><a href="../../d1/d72/a00204.htm">de.tu_clausthal.in.mec.Test_CLanguageLabels</a></div><div class="ttdoc">test all resource strings </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d59/a00364_source.htm#l00059">Test_CLanguageLabels.java:59</a></div></div>
<div class="ttc" id="a00037_htm_a5d4d844a730250f9b8db17ecf7106568"><div class="ttname"><a href="../../d1/dc6/a00037.htm#a5d4d844a730250f9b8db17ecf7106568">de.tu_clausthal.in.mec.common.CCommon.getResourceStringLabel</a></div><div class="ttdeci">static String getResourceStringLabel(final Class&lt;?&gt; p_class, final String p_label)</div><div class="ttdoc">returns the label of a class and string to get access to the resource </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d53/a00232_source.htm#l00397">common/CCommon.java:397</a></div></div>
<div class="ttc" id="a00040_htm_ac4658b43a016e19306f8ffd2884de2ff"><div class="ttname"><a href="../../db/d3a/a00040.htm#ac4658b43a016e19306f8ffd2884de2ff">de.tu_clausthal.in.mec.CConfiguration.getPackage</a></div><div class="ttdeci">static String getPackage()</div><div class="ttdoc">returns the main package name </div><div class="ttdef"><b>Definition:</b> <a href="../../da/d31/a00234_source.htm#l00435">CConfiguration.java:435</a></div></div>
<div class="ttc" id="a00204_htm_a903bb901d35a096a02e5154b77a4e5a8"><div class="ttname"><a href="../../d1/d72/a00204.htm#a903bb901d35a096a02e5154b77a4e5a8">de.tu_clausthal.in.mec.Test_CLanguageLabels.getPackagePath</a></div><div class="ttdeci">static String getPackagePath(String...p_names)</div><div class="ttdoc">method to build a package path </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d59/a00364_source.htm#l00129">Test_CLanguageLabels.java:129</a></div></div>
<div class="ttc" id="a00204_htm_a1bf90b60a1f54214c5824e0b5b5a04ae"><div class="ttname"><a href="../../d1/d72/a00204.htm#a1bf90b60a1f54214c5824e0b5b5a04ae">de.tu_clausthal.in.mec.Test_CLanguageLabels.m_language</a></div><div class="ttdeci">final Pattern m_language</div><div class="ttdoc">reg expression to extract label data * </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d59/a00364_source.htm#l00085">Test_CLanguageLabels.java:85</a></div></div>
<div class="ttc" id="a00201_htm_a5b2478e0a2d8ec83dff2b993b0b22f9b"><div class="ttname"><a href="../../dd/de3/a00201.htm#a5b2478e0a2d8ec83dff2b993b0b22f9b">de.tu_clausthal.in.mec.Test_CLanguageLabels.MyMethodVisitor.visit</a></div><div class="ttdeci">void visit(final MethodCallExpr p_methodcall, final Object p_arg)</div><div class="ttdef"><b>Definition:</b> <a href="../../dc/d59/a00364_source.htm#l00233">Test_CLanguageLabels.java:233</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div id = "nav-path" class = "navpath" >
    <ul >
        <li >
            <a href = "https://github.com/flashpixx/MecSim" >MecSim - Traffic Simulation</a ></li >
    </ul >
</div >
